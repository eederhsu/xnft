{
	"id": "05f9eae47d71b8fe3f45401289ceb9c1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract XNFT is ERC721 {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIdCounter;\n\n    // Variable to store the base URI\n    string private _currentBaseURI;\n\n    // Address allowed to mint tokens\n    address private _mintingAuthority;\n\n    constructor(string memory s_baseURI) ERC721(\"XNFT\", \"XNFT\") {\n        _mintingAuthority = msg.sender; // Set the deployer as the initial minting authority\n        setBaseURI(s_baseURI);\n    }\n\n    // Function to set the base URI, restricted to the minting authority\n    function setBaseURI(string memory baseURI) public {\n        require(msg.sender == _mintingAuthority, \"Not authorized to set base URI\");\n        _currentBaseURI = baseURI;\n    }\n\n    // Override _baseURI to return the dynamic base URI\n    function _baseURI() internal view override returns (string memory) {\n        return _currentBaseURI;\n    }\n\n    // Function to mint a new token, restricted to the minting authority\n    function safeMint(address to) public {\n        require(msg.sender == _mintingAuthority, \"Not authorized to mint\");\n        _tokenIdCounter.increment();\n        uint256 newTokenId = _tokenIdCounter.current();\n        _safeMint(to, newTokenId);\n    }\n\n    // This function will still return the full URI by concatenating the base URI with the token ID.\n    function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    // Optional: Function to change the minting authority, if needed\n    function transferMintingAuthority(address newAuthority) public {\n        require(msg.sender == _mintingAuthority, \"Not authorized to change authority\");\n        _mintingAuthority = newAuthority;\n    }\n\n}\n\n// contract MyToken is ERC721 {\n//     using Counters for Counters.Counter;\n//     Counters.Counter private _tokenIdCounter; // Counter to keep track of the last token ID\n\n//     constructor() ERC721(\"MyToken\", \"MTK\") {}\n\n//     // TODO: add function that can support set _baseURI\n//     function _baseURI() internal pure override returns (string memory) {\n//         return \"https://c076-111-243-87-212.ngrok-free.app/metadata/\";\n//     }\n\n//     // TODO only one address can execute \n    \n\n//     // Function to mint a new token to a specified address\n//     function safeMint(address to) public {\n//         _tokenIdCounter.increment(); // Increment the counter to get the new token ID\n//         uint256 newTokenId = _tokenIdCounter.current(); // Get the current value of the counter\n//         _safeMint(to, newTokenId); // Mint the new token\n//     }\n\n//     // // Override required by Solidity for when tokens are burnt.\n//     // function _burn(uint256 tokenId) internal override(ERC721) {\n//     //     super._burn(tokenId);\n//     // }\n\n//     // This function will still return the full URI by concatenating the base URI with the token ID.\n//     function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {\n//         return super.tokenURI(tokenId);\n//     }\n// }\n\n\n// // http://localhost:8080 / 1\n\n// {\n//     name: \"x-friend-service\",\n//     image: \"http://xxxxx.jpg\",\n//     serviceID: \"1\",\n// }\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODESIZE CALLCODE DIV PREVRANDAO LOG3 0xDC 0xB4 0xDE 0x4F STATICCALL MSTORE PUSH27 0x6F9D5A3CC1EE02F7FAF28A70C6435E3BCAC42164736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODESIZE CALLCODE DIV PREVRANDAO LOG3 0xDC 0xB4 0xDE 0x4F STATICCALL MSTORE PUSH27 0x6F9D5A3CC1EE02F7FAF28A70C6435E3BCAC42164736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"XNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "s_baseURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAuthority",
									"type": "address"
								}
							],
							"name": "transferMintingAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":170:1902  contract XNFT is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":441:632  constructor(string memory s_baseURI) ERC721(\"XNFT\", \"XNFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x584e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x584e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":531:541  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":511:528  _mintingAuthority */\n  0x08\n  0x00\n    /* \"contracts/MyToken.sol\":511:541  _mintingAuthority = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":604:625  setBaseURI(s_baseURI) */\n  tag_11\n    /* \"contracts/MyToken.sol\":615:624  s_baseURI */\n  dup2\n    /* \"contracts/MyToken.sol\":604:614  setBaseURI */\n  shl(0x20, tag_12)\n    /* \"contracts/MyToken.sol\":604:625  setBaseURI(s_baseURI) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/MyToken.sol\":441:632  constructor(string memory s_baseURI) ERC721(\"XNFT\", \"XNFT\") {... */\n  pop\n    /* \"contracts/MyToken.sol\":170:1902  contract XNFT is ERC721 {... */\n  jump(tag_13)\n    /* \"contracts/MyToken.sol\":711:887  function setBaseURI(string memory baseURI) public {... */\ntag_12:\n    /* \"contracts/MyToken.sol\":793:810  _mintingAuthority */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken.sol\":779:810  msg.sender == _mintingAuthority */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken.sol\":779:789  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":779:810  msg.sender == _mintingAuthority */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/MyToken.sol\":771:845  require(msg.sender == _mintingAuthority, \"Not authorized to set base URI\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/MyToken.sol\":873:880  baseURI */\n  dup1\n    /* \"contracts/MyToken.sol\":855:870  _currentBaseURI */\n  0x07\n    /* \"contracts/MyToken.sol\":855:880  _currentBaseURI = baseURI */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/MyToken.sol\":711:887  function setBaseURI(string memory baseURI) public {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_19:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_21:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_22:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_23:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_24:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_25:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_26:\n    /* \"#utility.yul\":957:984   */\n  tag_63\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_65\n  tag_25\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1030:1118   */\ntag_64:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_27:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_67\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_68\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_28:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_71\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1434:1490   */\ntag_70:\n    /* \"#utility.yul\":1508:1537   */\n  tag_72\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_24\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_29:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_74:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_30:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_78\n    /* \"#utility.yul\":1992:2041   */\n  tag_79\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_28\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1976:2042   */\n  tag_27\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_81\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2117:2229   */\ntag_80:\n    /* \"#utility.yul\":2238:2290   */\n  tag_82\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_29\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_31:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_85\n  tag_22\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2399:2521   */\ntag_84:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_86\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3201   */\ntag_3:\n    /* \"#utility.yul\":2757:2763   */\n  0x00\n    /* \"#utility.yul\":2806:2808   */\n  0x20\n    /* \"#utility.yul\":2794:2803   */\n  dup3\n    /* \"#utility.yul\":2785:2792   */\n  dup5\n    /* \"#utility.yul\":2781:2804   */\n  sub\n    /* \"#utility.yul\":2777:2809   */\n  slt\n    /* \"#utility.yul\":2774:2893   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2812:2891   */\n  tag_89\n  tag_20\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2774:2893   */\ntag_88:\n    /* \"#utility.yul\":2953:2954   */\n  0x00\n    /* \"#utility.yul\":2942:2951   */\n  dup3\n    /* \"#utility.yul\":2938:2955   */\n  add\n    /* \"#utility.yul\":2932:2956   */\n  mload\n    /* \"#utility.yul\":2983:3001   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2975:2981   */\n  dup2\n    /* \"#utility.yul\":2972:3002   */\n  gt\n    /* \"#utility.yul\":2969:3086   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3005:3084   */\n  tag_91\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2969:3086   */\ntag_90:\n    /* \"#utility.yul\":3110:3184   */\n  tag_92\n    /* \"#utility.yul\":3176:3183   */\n  dup5\n    /* \"#utility.yul\":3167:3173   */\n  dup3\n    /* \"#utility.yul\":3156:3165   */\n  dup6\n    /* \"#utility.yul\":3152:3174   */\n  add\n    /* \"#utility.yul\":3110:3184   */\n  tag_31\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3100:3184   */\n  swap2\n  pop\n    /* \"#utility.yul\":2903:3194   */\n  pop\n    /* \"#utility.yul\":2677:3201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3207:3306   */\ntag_32:\n    /* \"#utility.yul\":3259:3265   */\n  0x00\n    /* \"#utility.yul\":3293:3298   */\n  dup2\n    /* \"#utility.yul\":3287:3299   */\n  mload\n    /* \"#utility.yul\":3277:3299   */\n  swap1\n  pop\n    /* \"#utility.yul\":3207:3306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3312:3492   */\ntag_33:\n    /* \"#utility.yul\":3360:3437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3350:3438   */\n  mstore\n    /* \"#utility.yul\":3457:3461   */\n  0x22\n    /* \"#utility.yul\":3454:3455   */\n  0x04\n    /* \"#utility.yul\":3447:3462   */\n  mstore\n    /* \"#utility.yul\":3481:3485   */\n  0x24\n    /* \"#utility.yul\":3478:3479   */\n  0x00\n    /* \"#utility.yul\":3471:3486   */\n  revert\n    /* \"#utility.yul\":3498:3818   */\ntag_34:\n    /* \"#utility.yul\":3542:3548   */\n  0x00\n    /* \"#utility.yul\":3579:3580   */\n  0x02\n    /* \"#utility.yul\":3573:3577   */\n  dup3\n    /* \"#utility.yul\":3569:3581   */\n  div\n    /* \"#utility.yul\":3559:3581   */\n  swap1\n  pop\n    /* \"#utility.yul\":3626:3627   */\n  0x01\n    /* \"#utility.yul\":3620:3624   */\n  dup3\n    /* \"#utility.yul\":3616:3628   */\n  and\n    /* \"#utility.yul\":3647:3665   */\n  dup1\n    /* \"#utility.yul\":3637:3718   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3703:3707   */\n  0x7f\n    /* \"#utility.yul\":3695:3701   */\n  dup3\n    /* \"#utility.yul\":3691:3708   */\n  and\n    /* \"#utility.yul\":3681:3708   */\n  swap2\n  pop\n    /* \"#utility.yul\":3637:3718   */\ntag_96:\n    /* \"#utility.yul\":3765:3767   */\n  0x20\n    /* \"#utility.yul\":3757:3763   */\n  dup3\n    /* \"#utility.yul\":3754:3768   */\n  lt\n    /* \"#utility.yul\":3734:3752   */\n  dup2\n    /* \"#utility.yul\":3731:3769   */\n  sub\n    /* \"#utility.yul\":3728:3812   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3784:3802   */\n  tag_98\n  tag_33\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3728:3812   */\ntag_97:\n    /* \"#utility.yul\":3549:3818   */\n  pop\n    /* \"#utility.yul\":3498:3818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3824:3965   */\ntag_35:\n    /* \"#utility.yul\":3873:3877   */\n  0x00\n    /* \"#utility.yul\":3896:3899   */\n  dup2\n    /* \"#utility.yul\":3888:3899   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3922   */\n  dup2\n    /* \"#utility.yul\":3916:3917   */\n  0x00\n    /* \"#utility.yul\":3909:3923   */\n  mstore\n    /* \"#utility.yul\":3953:3957   */\n  0x20\n    /* \"#utility.yul\":3950:3951   */\n  0x00\n    /* \"#utility.yul\":3940:3958   */\n  keccak256\n    /* \"#utility.yul\":3932:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":3824:3965   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3971:4064   */\ntag_36:\n    /* \"#utility.yul\":4008:4014   */\n  0x00\n    /* \"#utility.yul\":4055:4057   */\n  0x20\n    /* \"#utility.yul\":4050:4052   */\n  0x1f\n    /* \"#utility.yul\":4043:4048   */\n  dup4\n    /* \"#utility.yul\":4039:4053   */\n  add\n    /* \"#utility.yul\":4035:4058   */\n  div\n    /* \"#utility.yul\":4025:4058   */\n  swap1\n  pop\n    /* \"#utility.yul\":3971:4064   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4070:4177   */\ntag_37:\n    /* \"#utility.yul\":4114:4122   */\n  0x00\n    /* \"#utility.yul\":4164:4169   */\n  dup3\n    /* \"#utility.yul\":4158:4162   */\n  dup3\n    /* \"#utility.yul\":4154:4170   */\n  shl\n    /* \"#utility.yul\":4133:4170   */\n  swap1\n  pop\n    /* \"#utility.yul\":4070:4177   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4183:4576   */\ntag_38:\n    /* \"#utility.yul\":4252:4258   */\n  0x00\n    /* \"#utility.yul\":4302:4303   */\n  0x08\n    /* \"#utility.yul\":4290:4300   */\n  dup4\n    /* \"#utility.yul\":4286:4304   */\n  mul\n    /* \"#utility.yul\":4325:4422   */\n  tag_103\n    /* \"#utility.yul\":4355:4421   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4344:4353   */\n  dup3\n    /* \"#utility.yul\":4325:4422   */\n  tag_37\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4443:4482   */\n  tag_104\n    /* \"#utility.yul\":4473:4481   */\n  dup7\n    /* \"#utility.yul\":4462:4471   */\n  dup4\n    /* \"#utility.yul\":4443:4482   */\n  tag_37\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4431:4482   */\n  swap6\n  pop\n    /* \"#utility.yul\":4515:4519   */\n  dup1\n    /* \"#utility.yul\":4511:4520   */\n  not\n    /* \"#utility.yul\":4504:4509   */\n  dup5\n    /* \"#utility.yul\":4500:4521   */\n  and\n    /* \"#utility.yul\":4491:4521   */\n  swap4\n  pop\n    /* \"#utility.yul\":4564:4568   */\n  dup1\n    /* \"#utility.yul\":4554:4562   */\n  dup7\n    /* \"#utility.yul\":4550:4569   */\n  and\n    /* \"#utility.yul\":4543:4548   */\n  dup5\n    /* \"#utility.yul\":4540:4570   */\n  or\n    /* \"#utility.yul\":4530:4570   */\n  swap3\n  pop\n    /* \"#utility.yul\":4259:4576   */\n  pop\n  pop\n    /* \"#utility.yul\":4183:4576   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4582:4659   */\ntag_39:\n    /* \"#utility.yul\":4619:4626   */\n  0x00\n    /* \"#utility.yul\":4648:4653   */\n  dup2\n    /* \"#utility.yul\":4637:4653   */\n  swap1\n  pop\n    /* \"#utility.yul\":4582:4659   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4665:4725   */\ntag_40:\n    /* \"#utility.yul\":4693:4696   */\n  0x00\n    /* \"#utility.yul\":4714:4719   */\n  dup2\n    /* \"#utility.yul\":4707:4719   */\n  swap1\n  pop\n    /* \"#utility.yul\":4665:4725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4731:4873   */\ntag_41:\n    /* \"#utility.yul\":4781:4790   */\n  0x00\n    /* \"#utility.yul\":4814:4867   */\n  tag_108\n    /* \"#utility.yul\":4832:4866   */\n  tag_109\n    /* \"#utility.yul\":4841:4865   */\n  tag_110\n    /* \"#utility.yul\":4859:4864   */\n  dup5\n    /* \"#utility.yul\":4841:4865   */\n  tag_39\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4832:4866   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4814:4867   */\n  tag_39\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4801:4867   */\n  swap1\n  pop\n    /* \"#utility.yul\":4731:4873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4879:4954   */\ntag_42:\n    /* \"#utility.yul\":4922:4925   */\n  0x00\n    /* \"#utility.yul\":4943:4948   */\n  dup2\n    /* \"#utility.yul\":4936:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4879:4954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4960:5229   */\ntag_43:\n    /* \"#utility.yul\":5070:5109   */\n  tag_113\n    /* \"#utility.yul\":5101:5108   */\n  dup4\n    /* \"#utility.yul\":5070:5109   */\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5131:5222   */\n  tag_114\n    /* \"#utility.yul\":5180:5221   */\n  tag_115\n    /* \"#utility.yul\":5204:5220   */\n  dup3\n    /* \"#utility.yul\":5180:5221   */\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5172:5178   */\n  dup5\n    /* \"#utility.yul\":5165:5169   */\n  dup5\n    /* \"#utility.yul\":5159:5170   */\n  sload\n    /* \"#utility.yul\":5131:5222   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5125:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5223   */\n  sstore\n    /* \"#utility.yul\":5036:5229   */\n  pop\n    /* \"#utility.yul\":4960:5229   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5308   */\ntag_44:\n    /* \"#utility.yul\":5280:5283   */\n  0x00\n    /* \"#utility.yul\":5235:5308   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5314:5503   */\ntag_45:\n    /* \"#utility.yul\":5391:5423   */\n  tag_118\n  tag_44\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5432:5497   */\n  tag_119\n    /* \"#utility.yul\":5490:5496   */\n  dup2\n    /* \"#utility.yul\":5482:5488   */\n  dup5\n    /* \"#utility.yul\":5476:5480   */\n  dup5\n    /* \"#utility.yul\":5432:5497   */\n  tag_43\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5367:5503   */\n  pop\n    /* \"#utility.yul\":5314:5503   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5509:5695   */\ntag_46:\n    /* \"#utility.yul\":5569:5689   */\ntag_121:\n    /* \"#utility.yul\":5586:5589   */\n  dup2\n    /* \"#utility.yul\":5579:5584   */\n  dup2\n    /* \"#utility.yul\":5576:5590   */\n  lt\n    /* \"#utility.yul\":5569:5689   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":5640:5679   */\n  tag_124\n    /* \"#utility.yul\":5677:5678   */\n  0x00\n    /* \"#utility.yul\":5670:5675   */\n  dup3\n    /* \"#utility.yul\":5640:5679   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5613:5614   */\n  0x01\n    /* \"#utility.yul\":5606:5611   */\n  dup2\n    /* \"#utility.yul\":5602:5615   */\n  add\n    /* \"#utility.yul\":5593:5615   */\n  swap1\n  pop\n    /* \"#utility.yul\":5569:5689   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":5509:5695   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5701:6244   */\ntag_47:\n    /* \"#utility.yul\":5802:5804   */\n  0x1f\n    /* \"#utility.yul\":5797:5800   */\n  dup3\n    /* \"#utility.yul\":5794:5805   */\n  gt\n    /* \"#utility.yul\":5791:6237   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":5836:5874   */\n  tag_127\n    /* \"#utility.yul\":5868:5873   */\n  dup2\n    /* \"#utility.yul\":5836:5874   */\n  tag_35\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5920:5949   */\n  tag_128\n    /* \"#utility.yul\":5938:5948   */\n  dup5\n    /* \"#utility.yul\":5920:5949   */\n  tag_36\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5910:5918   */\n  dup2\n    /* \"#utility.yul\":5906:5950   */\n  add\n    /* \"#utility.yul\":6103:6105   */\n  0x20\n    /* \"#utility.yul\":6091:6101   */\n  dup6\n    /* \"#utility.yul\":6088:6106   */\n  lt\n    /* \"#utility.yul\":6085:6134   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6124:6132   */\n  dup2\n    /* \"#utility.yul\":6109:6132   */\n  swap1\n  pop\n    /* \"#utility.yul\":6085:6134   */\ntag_129:\n    /* \"#utility.yul\":6147:6227   */\n  tag_130\n    /* \"#utility.yul\":6203:6225   */\n  tag_131\n    /* \"#utility.yul\":6221:6224   */\n  dup6\n    /* \"#utility.yul\":6203:6225   */\n  tag_36\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6193:6201   */\n  dup4\n    /* \"#utility.yul\":6189:6226   */\n  add\n    /* \"#utility.yul\":6176:6187   */\n  dup3\n    /* \"#utility.yul\":6147:6227   */\n  tag_46\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5806:6237   */\n  pop\n  pop\n    /* \"#utility.yul\":5791:6237   */\ntag_126:\n    /* \"#utility.yul\":5701:6244   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6250:6367   */\ntag_48:\n    /* \"#utility.yul\":6304:6312   */\n  0x00\n    /* \"#utility.yul\":6354:6359   */\n  dup3\n    /* \"#utility.yul\":6348:6352   */\n  dup3\n    /* \"#utility.yul\":6344:6360   */\n  shr\n    /* \"#utility.yul\":6323:6360   */\n  swap1\n  pop\n    /* \"#utility.yul\":6250:6367   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6373:6542   */\ntag_49:\n    /* \"#utility.yul\":6417:6423   */\n  0x00\n    /* \"#utility.yul\":6450:6501   */\n  tag_134\n    /* \"#utility.yul\":6498:6499   */\n  0x00\n    /* \"#utility.yul\":6494:6500   */\n  not\n    /* \"#utility.yul\":6486:6491   */\n  dup5\n    /* \"#utility.yul\":6483:6484   */\n  0x08\n    /* \"#utility.yul\":6479:6492   */\n  mul\n    /* \"#utility.yul\":6450:6501   */\n  tag_48\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6446:6502   */\n  not\n    /* \"#utility.yul\":6531:6535   */\n  dup1\n    /* \"#utility.yul\":6525:6529   */\n  dup4\n    /* \"#utility.yul\":6521:6536   */\n  and\n    /* \"#utility.yul\":6511:6536   */\n  swap2\n  pop\n    /* \"#utility.yul\":6424:6542   */\n  pop\n    /* \"#utility.yul\":6373:6542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6547:6842   */\ntag_50:\n    /* \"#utility.yul\":6623:6627   */\n  0x00\n    /* \"#utility.yul\":6769:6798   */\n  tag_136\n    /* \"#utility.yul\":6794:6797   */\n  dup4\n    /* \"#utility.yul\":6788:6792   */\n  dup4\n    /* \"#utility.yul\":6769:6798   */\n  tag_49\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6761:6798   */\n  swap2\n  pop\n    /* \"#utility.yul\":6831:6834   */\n  dup3\n    /* \"#utility.yul\":6828:6829   */\n  0x02\n    /* \"#utility.yul\":6824:6835   */\n  mul\n    /* \"#utility.yul\":6818:6822   */\n  dup3\n    /* \"#utility.yul\":6815:6836   */\n  or\n    /* \"#utility.yul\":6807:6836   */\n  swap1\n  pop\n    /* \"#utility.yul\":6547:6842   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6847:8242   */\ntag_8:\n    /* \"#utility.yul\":6964:7001   */\n  tag_138\n    /* \"#utility.yul\":6997:7000   */\n  dup3\n    /* \"#utility.yul\":6964:7001   */\n  tag_32\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7066:7084   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7058:7064   */\n  dup2\n    /* \"#utility.yul\":7055:7085   */\n  gt\n    /* \"#utility.yul\":7052:7108   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":7088:7106   */\n  tag_140\n  tag_25\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7052:7108   */\ntag_139:\n    /* \"#utility.yul\":7132:7170   */\n  tag_141\n    /* \"#utility.yul\":7164:7168   */\n  dup3\n    /* \"#utility.yul\":7158:7169   */\n  sload\n    /* \"#utility.yul\":7132:7170   */\n  tag_34\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7217:7284   */\n  tag_142\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7269:7275   */\n  dup3\n    /* \"#utility.yul\":7263:7267   */\n  dup6\n    /* \"#utility.yul\":7217:7284   */\n  tag_47\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7311:7312   */\n  0x00\n    /* \"#utility.yul\":7335:7339   */\n  0x20\n    /* \"#utility.yul\":7322:7339   */\n  swap1\n  pop\n    /* \"#utility.yul\":7367:7369   */\n  0x1f\n    /* \"#utility.yul\":7359:7365   */\n  dup4\n    /* \"#utility.yul\":7356:7370   */\n  gt\n    /* \"#utility.yul\":7384:7385   */\n  0x01\n    /* \"#utility.yul\":7379:7997   */\n  dup2\n  eq\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x00\n    /* \"#utility.yul\":8058:8064   */\n  dup5\n    /* \"#utility.yul\":8055:8132   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8107:8116   */\n  dup3\n    /* \"#utility.yul\":8102:8105   */\n  dup8\n    /* \"#utility.yul\":8098:8117   */\n  add\n    /* \"#utility.yul\":8092:8118   */\n  mload\n    /* \"#utility.yul\":8083:8118   */\n  swap1\n  pop\n    /* \"#utility.yul\":8055:8132   */\ntag_145:\n    /* \"#utility.yul\":8158:8225   */\n  tag_146\n    /* \"#utility.yul\":8218:8224   */\n  dup6\n    /* \"#utility.yul\":8211:8216   */\n  dup3\n    /* \"#utility.yul\":8158:8225   */\n  tag_50\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8145:8226   */\n  sstore\n    /* \"#utility.yul\":8014:8236   */\n  pop\n    /* \"#utility.yul\":7349:8236   */\n  jump(tag_143)\n    /* \"#utility.yul\":7379:7997   */\ntag_144:\n    /* \"#utility.yul\":7431:7435   */\n  0x1f\n    /* \"#utility.yul\":7427:7436   */\n  not\n    /* \"#utility.yul\":7419:7425   */\n  dup5\n    /* \"#utility.yul\":7415:7437   */\n  and\n    /* \"#utility.yul\":7465:7502   */\n  tag_147\n    /* \"#utility.yul\":7497:7501   */\n  dup7\n    /* \"#utility.yul\":7465:7502   */\n  tag_35\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7524:7525   */\n  0x00\n    /* \"#utility.yul\":7538:7746   */\ntag_148:\n    /* \"#utility.yul\":7552:7559   */\n  dup3\n    /* \"#utility.yul\":7549:7550   */\n  dup2\n    /* \"#utility.yul\":7546:7560   */\n  lt\n    /* \"#utility.yul\":7538:7746   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":7631:7640   */\n  dup5\n    /* \"#utility.yul\":7626:7629   */\n  dup10\n    /* \"#utility.yul\":7622:7641   */\n  add\n    /* \"#utility.yul\":7616:7642   */\n  mload\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7601:7643   */\n  sstore\n    /* \"#utility.yul\":7682:7683   */\n  0x01\n    /* \"#utility.yul\":7674:7680   */\n  dup3\n    /* \"#utility.yul\":7670:7684   */\n  add\n    /* \"#utility.yul\":7660:7684   */\n  swap2\n  pop\n    /* \"#utility.yul\":7729:7731   */\n  0x20\n    /* \"#utility.yul\":7718:7727   */\n  dup6\n    /* \"#utility.yul\":7714:7732   */\n  add\n    /* \"#utility.yul\":7701:7732   */\n  swap5\n  pop\n    /* \"#utility.yul\":7575:7579   */\n  0x20\n    /* \"#utility.yul\":7572:7573   */\n  dup2\n    /* \"#utility.yul\":7568:7580   */\n  add\n    /* \"#utility.yul\":7563:7580   */\n  swap1\n  pop\n    /* \"#utility.yul\":7538:7746   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":7774:7780   */\n  dup7\n    /* \"#utility.yul\":7765:7772   */\n  dup4\n    /* \"#utility.yul\":7762:7781   */\n  lt\n    /* \"#utility.yul\":7759:7938   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7832:7841   */\n  dup5\n    /* \"#utility.yul\":7827:7830   */\n  dup10\n    /* \"#utility.yul\":7823:7842   */\n  add\n    /* \"#utility.yul\":7817:7843   */\n  mload\n    /* \"#utility.yul\":7875:7923   */\n  tag_152\n    /* \"#utility.yul\":7917:7921   */\n  0x1f\n    /* \"#utility.yul\":7909:7915   */\n  dup10\n    /* \"#utility.yul\":7905:7922   */\n  and\n    /* \"#utility.yul\":7894:7903   */\n  dup3\n    /* \"#utility.yul\":7875:7923   */\n  tag_49\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7867:7873   */\n  dup4\n    /* \"#utility.yul\":7860:7924   */\n  sstore\n    /* \"#utility.yul\":7782:7938   */\n  pop\n    /* \"#utility.yul\":7759:7938   */\ntag_151:\n    /* \"#utility.yul\":7984:7985   */\n  0x01\n    /* \"#utility.yul\":7980:7981   */\n  0x02\n    /* \"#utility.yul\":7972:7978   */\n  dup9\n    /* \"#utility.yul\":7968:7982   */\n  mul\n    /* \"#utility.yul\":7964:7986   */\n  add\n    /* \"#utility.yul\":7958:7962   */\n  dup9\n    /* \"#utility.yul\":7951:7987   */\n  sstore\n    /* \"#utility.yul\":7386:7997   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7349:8236   */\ntag_143:\n  pop\n    /* \"#utility.yul\":6939:8242   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6847:8242   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8248:8417   */\ntag_51:\n    /* \"#utility.yul\":8332:8343   */\n  0x00\n    /* \"#utility.yul\":8366:8372   */\n  dup3\n    /* \"#utility.yul\":8361:8364   */\n  dup3\n    /* \"#utility.yul\":8354:8373   */\n  mstore\n    /* \"#utility.yul\":8406:8410   */\n  0x20\n    /* \"#utility.yul\":8401:8404   */\n  dup3\n    /* \"#utility.yul\":8397:8411   */\n  add\n    /* \"#utility.yul\":8382:8411   */\n  swap1\n  pop\n    /* \"#utility.yul\":8248:8417   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8423:8603   */\ntag_52:\n    /* \"#utility.yul\":8563:8595   */\n  0x4e6f7420617574686f72697a656420746f207365742062617365205552490000\n    /* \"#utility.yul\":8559:8560   */\n  0x00\n    /* \"#utility.yul\":8551:8557   */\n  dup3\n    /* \"#utility.yul\":8547:8561   */\n  add\n    /* \"#utility.yul\":8540:8596   */\n  mstore\n    /* \"#utility.yul\":8423:8603   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8609:8975   */\ntag_53:\n    /* \"#utility.yul\":8751:8754   */\n  0x00\n    /* \"#utility.yul\":8772:8839   */\n  tag_156\n    /* \"#utility.yul\":8836:8838   */\n  0x1e\n    /* \"#utility.yul\":8831:8834   */\n  dup4\n    /* \"#utility.yul\":8772:8839   */\n  tag_51\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8765:8839   */\n  swap2\n  pop\n    /* \"#utility.yul\":8848:8941   */\n  tag_157\n    /* \"#utility.yul\":8937:8940   */\n  dup3\n    /* \"#utility.yul\":8848:8941   */\n  tag_52\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8966:8968   */\n  0x20\n    /* \"#utility.yul\":8961:8964   */\n  dup3\n    /* \"#utility.yul\":8957:8969   */\n  add\n    /* \"#utility.yul\":8950:8969   */\n  swap1\n  pop\n    /* \"#utility.yul\":8609:8975   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8981:9400   */\ntag_17:\n    /* \"#utility.yul\":9147:9151   */\n  0x00\n    /* \"#utility.yul\":9185:9187   */\n  0x20\n    /* \"#utility.yul\":9174:9183   */\n  dup3\n    /* \"#utility.yul\":9170:9188   */\n  add\n    /* \"#utility.yul\":9162:9188   */\n  swap1\n  pop\n    /* \"#utility.yul\":9234:9243   */\n  dup2\n    /* \"#utility.yul\":9228:9232   */\n  dup2\n    /* \"#utility.yul\":9224:9244   */\n  sub\n    /* \"#utility.yul\":9220:9221   */\n  0x00\n    /* \"#utility.yul\":9209:9218   */\n  dup4\n    /* \"#utility.yul\":9205:9222   */\n  add\n    /* \"#utility.yul\":9198:9245   */\n  mstore\n    /* \"#utility.yul\":9262:9393   */\n  tag_159\n    /* \"#utility.yul\":9388:9392   */\n  dup2\n    /* \"#utility.yul\":9262:9393   */\n  tag_53\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":9254:9393   */\n  swap1\n  pop\n    /* \"#utility.yul\":8981:9400   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":170:1902  contract XNFT is ERC721 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":170:1902  contract XNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x55f804b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x55f804b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54797b8f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/MyToken.sol\":1134:1382  function safeMint(address to) public {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/MyToken.sol\":1699:1899  function transferMintingAuthority(address newAuthority) public {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/MyToken.sol\":711:887  function setBaseURI(string memory baseURI) public {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/MyToken.sol\":1489:1624  function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1134:1382  function safeMint(address to) public {... */\n    tag_49:\n        /* \"contracts/MyToken.sol\":1203:1220  _mintingAuthority */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1189:1220  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1189:1199  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1189:1220  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1181:1247  require(msg.sender == _mintingAuthority, \"Not authorized to mint\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/MyToken.sol\":1257:1284  _tokenIdCounter.increment() */\n      tag_124\n        /* \"contracts/MyToken.sol\":1257:1272  _tokenIdCounter */\n      0x06\n        /* \"contracts/MyToken.sol\":1257:1282  _tokenIdCounter.increment */\n      tag_125\n        /* \"contracts/MyToken.sol\":1257:1284  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/MyToken.sol\":1294:1312  uint256 newTokenId */\n      0x00\n        /* \"contracts/MyToken.sol\":1315:1340  _tokenIdCounter.current() */\n      tag_126\n        /* \"contracts/MyToken.sol\":1315:1330  _tokenIdCounter */\n      0x06\n        /* \"contracts/MyToken.sol\":1315:1338  _tokenIdCounter.current */\n      tag_127\n        /* \"contracts/MyToken.sol\":1315:1340  _tokenIdCounter.current() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/MyToken.sol\":1294:1340  uint256 newTokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1350:1375  _safeMint(to, newTokenId) */\n      tag_128\n        /* \"contracts/MyToken.sol\":1360:1362  to */\n      dup3\n        /* \"contracts/MyToken.sol\":1364:1374  newTokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":1350:1359  _safeMint */\n      tag_129\n        /* \"contracts/MyToken.sol\":1350:1375  _safeMint(to, newTokenId) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/MyToken.sol\":1171:1382  {... */\n      pop\n        /* \"contracts/MyToken.sol\":1134:1382  function safeMint(address to) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1699:1899  function transferMintingAuthority(address newAuthority) public {... */\n    tag_55:\n        /* \"contracts/MyToken.sol\":1794:1811  _mintingAuthority */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1780:1811  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1780:1790  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1780:1811  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1772:1850  require(msg.sender == _mintingAuthority, \"Not authorized to change authority\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/MyToken.sol\":1880:1892  newAuthority */\n      dup1\n        /* \"contracts/MyToken.sol\":1860:1877  _mintingAuthority */\n      0x08\n      0x00\n        /* \"contracts/MyToken.sol\":1860:1892  _mintingAuthority = newAuthority */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1699:1899  function transferMintingAuthority(address newAuthority) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":711:887  function setBaseURI(string memory baseURI) public {... */\n    tag_59:\n        /* \"contracts/MyToken.sol\":793:810  _mintingAuthority */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":779:810  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":779:789  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":779:810  msg.sender == _mintingAuthority */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":771:845  require(msg.sender == _mintingAuthority, \"Not authorized to set base URI\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/MyToken.sol\":873:880  baseURI */\n      dup1\n        /* \"contracts/MyToken.sol\":855:870  _currentBaseURI */\n      0x07\n        /* \"contracts/MyToken.sol\":855:880  _currentBaseURI = baseURI */\n      swap1\n      dup2\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/MyToken.sol\":711:887  function setBaseURI(string memory baseURI) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_96\n      jump\t// in\n    tag_148:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_96\n      jump\t// in\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_151\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_150)\n    tag_151:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_152:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_45\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1489:1624  function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {... */\n    tag_82:\n        /* \"contracts/MyToken.sol\":1562:1575  string memory */\n      0x60\n        /* \"contracts/MyToken.sol\":1594:1617  super.tokenURI(tokenId) */\n      tag_162\n        /* \"contracts/MyToken.sol\":1609:1616  tokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":1594:1608  super.tokenURI */\n      tag_163\n        /* \"contracts/MyToken.sol\":1594:1617  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/MyToken.sol\":1587:1617  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1489:1624  function tokenURI(uint256 tokenId) public view override(ERC721) returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      0x01\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_201\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_206\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_205)\n    tag_206:\n      0x60\n      swap2\n      pop\n    tag_205:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_214:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_217\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_218)\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_225\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":949:1055  function _baseURI() internal view override returns (string memory) {... */\n    tag_216:\n        /* \"contracts/MyToken.sol\":1001:1014  string memory */\n      0x60\n        /* \"contracts/MyToken.sol\":1033:1048  _currentBaseURI */\n      0x07\n        /* \"contracts/MyToken.sol\":1026:1048  return _currentBaseURI */\n      dup1\n      sload\n      tag_248\n      swap1\n      tag_96\n      jump\t// in\n    tag_248:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_249\n      swap1\n      tag_96\n      jump\t// in\n    tag_249:\n      dup1\n      iszero\n      tag_250\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_251\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_250)\n    tag_251:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_252:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_252\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":949:1055  function _baseURI() internal view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_254\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n    tag_256:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_259\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_262\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n    tag_262:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_268\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_270\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_280\n      jumpi\n      tag_281\n      tag_264\n      jump\t// in\n    tag_281:\n    tag_280:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_283\n      jumpi\n      tag_284\n      tag_264\n      jump\t// in\n    tag_284:\n    tag_283:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_286\n      jumpi\n      tag_287\n      tag_264\n      jump\t// in\n    tag_287:\n    tag_286:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_289\n      jumpi\n      tag_290\n      tag_264\n      jump\t// in\n    tag_290:\n    tag_289:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_292\n      jumpi\n      tag_293\n      tag_264\n      jump\t// in\n    tag_293:\n    tag_292:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_295\n      jumpi\n      tag_296\n      tag_264\n      jump\t// in\n    tag_296:\n    tag_295:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_298:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_299:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_300:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_301:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_302:\n        /* \"#utility.yul\":561:584   */\n      tag_367\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_301\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_368:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_303:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_370\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_302\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_373\n      tag_299\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":833:952   */\n    tag_372:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_374\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_303\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_304:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_305:\n        /* \"#utility.yul\":1268:1289   */\n      tag_377\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_304\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_379\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_305\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_306:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_307:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_308:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_383:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_383)\n    tag_385:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_309:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_310:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_388\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_306\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2329:2400   */\n      tag_389\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_307\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_390\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_308\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2499:2528   */\n      tag_391\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_309\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_31:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_393\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_310\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_311:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_312:\n        /* \"#utility.yul\":3016:3040   */\n      tag_396\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_311\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_397:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_313:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_399\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_312\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_34:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_402\n      tag_299\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3292:3411   */\n    tag_401:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_403\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_313\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_314:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_315:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_406\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_314\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_316:\n        /* \"#utility.yul\":3872:3896   */\n      tag_408\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_315\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_37:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_410\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_316\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_317:\n        /* \"#utility.yul\":4210:4234   */\n      tag_412\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_315\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_413:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_318:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_415\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_317\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_40:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_418\n      tag_299\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4503:4622   */\n    tag_417:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_419\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_318\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_420\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_313\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_44:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_423\n      tag_299\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5000:5119   */\n    tag_422:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_424\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_318\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_425\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_426\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_313\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_48:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_429\n      tag_299\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5591:5710   */\n    tag_428:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_430\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_318\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5967   */\n    tag_319:\n        /* \"#utility.yul\":5959:5960   */\n      0x00\n        /* \"#utility.yul\":5956:5957   */\n      dup1\n        /* \"#utility.yul\":5949:5961   */\n      revert\n        /* \"#utility.yul\":5973:6090   */\n    tag_320:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6079:6080   */\n      dup1\n        /* \"#utility.yul\":6072:6084   */\n      revert\n        /* \"#utility.yul\":6096:6276   */\n    tag_258:\n        /* \"#utility.yul\":6144:6221   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6141:6142   */\n      0x00\n        /* \"#utility.yul\":6134:6222   */\n      mstore\n        /* \"#utility.yul\":6241:6245   */\n      0x41\n        /* \"#utility.yul\":6238:6239   */\n      0x04\n        /* \"#utility.yul\":6231:6246   */\n      mstore\n        /* \"#utility.yul\":6265:6269   */\n      0x24\n        /* \"#utility.yul\":6262:6263   */\n      0x00\n        /* \"#utility.yul\":6255:6270   */\n      revert\n        /* \"#utility.yul\":6282:6563   */\n    tag_321:\n        /* \"#utility.yul\":6365:6392   */\n      tag_435\n        /* \"#utility.yul\":6387:6391   */\n      dup3\n        /* \"#utility.yul\":6365:6392   */\n      tag_309\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6357:6363   */\n      dup2\n        /* \"#utility.yul\":6353:6393   */\n      add\n        /* \"#utility.yul\":6495:6501   */\n      dup2\n        /* \"#utility.yul\":6483:6493   */\n      dup2\n        /* \"#utility.yul\":6480:6502   */\n      lt\n        /* \"#utility.yul\":6459:6477   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6447:6457   */\n      dup3\n        /* \"#utility.yul\":6444:6478   */\n      gt\n        /* \"#utility.yul\":6441:6503   */\n      or\n        /* \"#utility.yul\":6438:6526   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6506:6524   */\n      tag_437\n      tag_258\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6438:6526   */\n    tag_436:\n        /* \"#utility.yul\":6546:6556   */\n      dup1\n        /* \"#utility.yul\":6542:6544   */\n      0x40\n        /* \"#utility.yul\":6535:6557   */\n      mstore\n        /* \"#utility.yul\":6325:6563   */\n      pop\n        /* \"#utility.yul\":6282:6563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:6698   */\n    tag_322:\n        /* \"#utility.yul\":6603:6609   */\n      0x00\n        /* \"#utility.yul\":6630:6650   */\n      tag_439\n      tag_298\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6620:6650   */\n      swap1\n      pop\n        /* \"#utility.yul\":6659:6692   */\n      tag_440\n        /* \"#utility.yul\":6687:6691   */\n      dup3\n        /* \"#utility.yul\":6679:6685   */\n      dup3\n        /* \"#utility.yul\":6659:6692   */\n      tag_321\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6569:6698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:7012   */\n    tag_323:\n        /* \"#utility.yul\":6766:6770   */\n      0x00\n        /* \"#utility.yul\":6856:6874   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6848:6854   */\n      dup3\n        /* \"#utility.yul\":6845:6875   */\n      gt\n        /* \"#utility.yul\":6842:6898   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":6878:6896   */\n      tag_443\n      tag_258\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6842:6898   */\n    tag_442:\n        /* \"#utility.yul\":6916:6945   */\n      tag_444\n        /* \"#utility.yul\":6938:6944   */\n      dup3\n        /* \"#utility.yul\":6916:6945   */\n      tag_309\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6908:6945   */\n      swap1\n      pop\n        /* \"#utility.yul\":7000:7004   */\n      0x20\n        /* \"#utility.yul\":6994:6998   */\n      dup2\n        /* \"#utility.yul\":6990:7005   */\n      add\n        /* \"#utility.yul\":6982:7005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6704:7012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7018:7164   */\n    tag_324:\n        /* \"#utility.yul\":7115:7121   */\n      dup3\n        /* \"#utility.yul\":7110:7113   */\n      dup2\n        /* \"#utility.yul\":7105:7108   */\n      dup4\n        /* \"#utility.yul\":7092:7122   */\n      calldatacopy\n        /* \"#utility.yul\":7156:7157   */\n      0x00\n        /* \"#utility.yul\":7147:7153   */\n      dup4\n        /* \"#utility.yul\":7142:7145   */\n      dup4\n        /* \"#utility.yul\":7138:7154   */\n      add\n        /* \"#utility.yul\":7131:7158   */\n      mstore\n        /* \"#utility.yul\":7018:7164   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7170:7595   */\n    tag_325:\n        /* \"#utility.yul\":7248:7253   */\n      0x00\n        /* \"#utility.yul\":7273:7339   */\n      tag_447\n        /* \"#utility.yul\":7289:7338   */\n      tag_448\n        /* \"#utility.yul\":7331:7337   */\n      dup5\n        /* \"#utility.yul\":7289:7338   */\n      tag_323\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7273:7339   */\n      tag_322\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7264:7339   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7368   */\n      dup3\n        /* \"#utility.yul\":7355:7360   */\n      dup2\n        /* \"#utility.yul\":7348:7369   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x20\n        /* \"#utility.yul\":7393:7398   */\n      dup2\n        /* \"#utility.yul\":7389:7405   */\n      add\n        /* \"#utility.yul\":7438:7441   */\n      dup5\n        /* \"#utility.yul\":7429:7435   */\n      dup5\n        /* \"#utility.yul\":7424:7427   */\n      dup5\n        /* \"#utility.yul\":7420:7436   */\n      add\n        /* \"#utility.yul\":7417:7442   */\n      gt\n        /* \"#utility.yul\":7414:7526   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7445:7524   */\n      tag_450\n      tag_320\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7414:7526   */\n    tag_449:\n        /* \"#utility.yul\":7535:7589   */\n      tag_451\n        /* \"#utility.yul\":7582:7588   */\n      dup5\n        /* \"#utility.yul\":7577:7580   */\n      dup3\n        /* \"#utility.yul\":7572:7575   */\n      dup6\n        /* \"#utility.yul\":7535:7589   */\n      tag_324\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7254:7595   */\n      pop\n        /* \"#utility.yul\":7170:7595   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7615:7955   */\n    tag_326:\n        /* \"#utility.yul\":7671:7676   */\n      0x00\n        /* \"#utility.yul\":7720:7723   */\n      dup3\n        /* \"#utility.yul\":7713:7717   */\n      0x1f\n        /* \"#utility.yul\":7705:7711   */\n      dup4\n        /* \"#utility.yul\":7701:7718   */\n      add\n        /* \"#utility.yul\":7697:7724   */\n      slt\n        /* \"#utility.yul\":7687:7809   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7728:7807   */\n      tag_454\n      tag_319\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7687:7809   */\n    tag_453:\n        /* \"#utility.yul\":7845:7851   */\n      dup2\n        /* \"#utility.yul\":7832:7852   */\n      calldataload\n        /* \"#utility.yul\":7870:7949   */\n      tag_455\n        /* \"#utility.yul\":7945:7948   */\n      dup5\n        /* \"#utility.yul\":7937:7943   */\n      dup3\n        /* \"#utility.yul\":7930:7934   */\n      0x20\n        /* \"#utility.yul\":7922:7928   */\n      dup7\n        /* \"#utility.yul\":7918:7935   */\n      add\n        /* \"#utility.yul\":7870:7949   */\n      tag_325\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7861:7949   */\n      swap2\n      pop\n        /* \"#utility.yul\":7677:7955   */\n      pop\n        /* \"#utility.yul\":7615:7955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8470   */\n    tag_58:\n        /* \"#utility.yul\":8030:8036   */\n      0x00\n        /* \"#utility.yul\":8079:8081   */\n      0x20\n        /* \"#utility.yul\":8067:8076   */\n      dup3\n        /* \"#utility.yul\":8058:8065   */\n      dup5\n        /* \"#utility.yul\":8054:8077   */\n      sub\n        /* \"#utility.yul\":8050:8082   */\n      slt\n        /* \"#utility.yul\":8047:8166   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8085:8164   */\n      tag_458\n      tag_299\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8047:8166   */\n    tag_457:\n        /* \"#utility.yul\":8233:8234   */\n      0x00\n        /* \"#utility.yul\":8222:8231   */\n      dup3\n        /* \"#utility.yul\":8218:8235   */\n      add\n        /* \"#utility.yul\":8205:8236   */\n      calldataload\n        /* \"#utility.yul\":8263:8281   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8255:8261   */\n      dup2\n        /* \"#utility.yul\":8252:8282   */\n      gt\n        /* \"#utility.yul\":8249:8366   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8285:8364   */\n      tag_460\n      tag_300\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8249:8366   */\n    tag_459:\n        /* \"#utility.yul\":8390:8453   */\n      tag_461\n        /* \"#utility.yul\":8445:8452   */\n      dup5\n        /* \"#utility.yul\":8436:8442   */\n      dup3\n        /* \"#utility.yul\":8425:8434   */\n      dup6\n        /* \"#utility.yul\":8421:8443   */\n      add\n        /* \"#utility.yul\":8390:8453   */\n      tag_326\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8380:8453   */\n      swap2\n      pop\n        /* \"#utility.yul\":8176:8463   */\n      pop\n        /* \"#utility.yul\":7961:8470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8594   */\n    tag_327:\n        /* \"#utility.yul\":8563:8587   */\n      tag_463\n        /* \"#utility.yul\":8581:8586   */\n      dup2\n        /* \"#utility.yul\":8563:8587   */\n      tag_311\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8558:8561   */\n      dup3\n        /* \"#utility.yul\":8551:8588   */\n      mstore\n        /* \"#utility.yul\":8476:8594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8600:8822   */\n    tag_68:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8731:8733   */\n      0x20\n        /* \"#utility.yul\":8720:8729   */\n      dup3\n        /* \"#utility.yul\":8716:8734   */\n      add\n        /* \"#utility.yul\":8708:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8744:8815   */\n      tag_465\n        /* \"#utility.yul\":8812:8813   */\n      0x00\n        /* \"#utility.yul\":8801:8810   */\n      dup4\n        /* \"#utility.yul\":8797:8814   */\n      add\n        /* \"#utility.yul\":8788:8794   */\n      dup5\n        /* \"#utility.yul\":8744:8815   */\n      tag_327\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8600:8822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:8944   */\n    tag_328:\n        /* \"#utility.yul\":8898:8919   */\n      tag_467\n        /* \"#utility.yul\":8913:8918   */\n      dup2\n        /* \"#utility.yul\":8898:8919   */\n      tag_304\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8891:8896   */\n      dup2\n        /* \"#utility.yul\":8888:8920   */\n      eq\n        /* \"#utility.yul\":8878:8938   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8931:8932   */\n      dup1\n        /* \"#utility.yul\":8924:8936   */\n      revert\n        /* \"#utility.yul\":8878:8938   */\n    tag_468:\n        /* \"#utility.yul\":8828:8944   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8950:9083   */\n    tag_329:\n        /* \"#utility.yul\":8993:8998   */\n      0x00\n        /* \"#utility.yul\":9031:9037   */\n      dup2\n        /* \"#utility.yul\":9018:9038   */\n      calldataload\n        /* \"#utility.yul\":9009:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9047:9077   */\n      tag_470\n        /* \"#utility.yul\":9071:9076   */\n      dup2\n        /* \"#utility.yul\":9047:9077   */\n      tag_328\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8950:9083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9089:9557   */\n    tag_74:\n        /* \"#utility.yul\":9154:9160   */\n      0x00\n        /* \"#utility.yul\":9162:9168   */\n      dup1\n        /* \"#utility.yul\":9211:9213   */\n      0x40\n        /* \"#utility.yul\":9199:9208   */\n      dup4\n        /* \"#utility.yul\":9190:9197   */\n      dup6\n        /* \"#utility.yul\":9186:9209   */\n      sub\n        /* \"#utility.yul\":9182:9214   */\n      slt\n        /* \"#utility.yul\":9179:9298   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_473\n      tag_299\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9179:9298   */\n    tag_472:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_474\n        /* \"#utility.yul\":9407:9414   */\n      dup6\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup7\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_318\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9352:9415   */\n      swap3\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9540   */\n      tag_475\n        /* \"#utility.yul\":9532:9539   */\n      dup6\n        /* \"#utility.yul\":9523:9529   */\n      dup3\n        /* \"#utility.yul\":9512:9521   */\n      dup7\n        /* \"#utility.yul\":9508:9530   */\n      add\n        /* \"#utility.yul\":9490:9540   */\n      tag_329\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9480:9540   */\n      swap2\n      pop\n        /* \"#utility.yul\":9435:9550   */\n      pop\n        /* \"#utility.yul\":9089:9557   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9563:9870   */\n    tag_330:\n        /* \"#utility.yul\":9624:9628   */\n      0x00\n        /* \"#utility.yul\":9714:9732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9706:9712   */\n      dup3\n        /* \"#utility.yul\":9703:9733   */\n      gt\n        /* \"#utility.yul\":9700:9756   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":9736:9754   */\n      tag_478\n      tag_258\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9700:9756   */\n    tag_477:\n        /* \"#utility.yul\":9774:9803   */\n      tag_479\n        /* \"#utility.yul\":9796:9802   */\n      dup3\n        /* \"#utility.yul\":9774:9803   */\n      tag_309\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9766:9803   */\n      swap1\n      pop\n        /* \"#utility.yul\":9858:9862   */\n      0x20\n        /* \"#utility.yul\":9852:9856   */\n      dup2\n        /* \"#utility.yul\":9848:9863   */\n      add\n        /* \"#utility.yul\":9840:9863   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9876:10299   */\n    tag_331:\n        /* \"#utility.yul\":9953:9958   */\n      0x00\n        /* \"#utility.yul\":9978:10043   */\n      tag_481\n        /* \"#utility.yul\":9994:10042   */\n      tag_482\n        /* \"#utility.yul\":10035:10041   */\n      dup5\n        /* \"#utility.yul\":9994:10042   */\n      tag_330\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9978:10043   */\n      tag_322\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9969:10043   */\n      swap1\n      pop\n        /* \"#utility.yul\":10066:10072   */\n      dup3\n        /* \"#utility.yul\":10059:10064   */\n      dup2\n        /* \"#utility.yul\":10052:10073   */\n      mstore\n        /* \"#utility.yul\":10104:10108   */\n      0x20\n        /* \"#utility.yul\":10097:10102   */\n      dup2\n        /* \"#utility.yul\":10093:10109   */\n      add\n        /* \"#utility.yul\":10142:10145   */\n      dup5\n        /* \"#utility.yul\":10133:10139   */\n      dup5\n        /* \"#utility.yul\":10128:10131   */\n      dup5\n        /* \"#utility.yul\":10124:10140   */\n      add\n        /* \"#utility.yul\":10121:10146   */\n      gt\n        /* \"#utility.yul\":10118:10230   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":10149:10228   */\n      tag_484\n      tag_320\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10118:10230   */\n    tag_483:\n        /* \"#utility.yul\":10239:10293   */\n      tag_485\n        /* \"#utility.yul\":10286:10292   */\n      dup5\n        /* \"#utility.yul\":10281:10284   */\n      dup3\n        /* \"#utility.yul\":10276:10279   */\n      dup6\n        /* \"#utility.yul\":10239:10293   */\n      tag_324\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9959:10299   */\n      pop\n        /* \"#utility.yul\":9876:10299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10656   */\n    tag_332:\n        /* \"#utility.yul\":10373:10378   */\n      0x00\n        /* \"#utility.yul\":10422:10425   */\n      dup3\n        /* \"#utility.yul\":10415:10419   */\n      0x1f\n        /* \"#utility.yul\":10407:10413   */\n      dup4\n        /* \"#utility.yul\":10403:10420   */\n      add\n        /* \"#utility.yul\":10399:10426   */\n      slt\n        /* \"#utility.yul\":10389:10511   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":10430:10509   */\n      tag_488\n      tag_319\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10389:10511   */\n    tag_487:\n        /* \"#utility.yul\":10547:10553   */\n      dup2\n        /* \"#utility.yul\":10534:10554   */\n      calldataload\n        /* \"#utility.yul\":10572:10650   */\n      tag_489\n        /* \"#utility.yul\":10646:10649   */\n      dup5\n        /* \"#utility.yul\":10638:10644   */\n      dup3\n        /* \"#utility.yul\":10631:10635   */\n      0x20\n        /* \"#utility.yul\":10623:10629   */\n      dup7\n        /* \"#utility.yul\":10619:10636   */\n      add\n        /* \"#utility.yul\":10572:10650   */\n      tag_331\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10563:10650   */\n      swap2\n      pop\n        /* \"#utility.yul\":10379:10656   */\n      pop\n        /* \"#utility.yul\":10318:10656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11605   */\n    tag_78:\n        /* \"#utility.yul\":10757:10763   */\n      0x00\n        /* \"#utility.yul\":10765:10771   */\n      dup1\n        /* \"#utility.yul\":10773:10779   */\n      0x00\n        /* \"#utility.yul\":10781:10787   */\n      dup1\n        /* \"#utility.yul\":10830:10833   */\n      0x80\n        /* \"#utility.yul\":10818:10827   */\n      dup6\n        /* \"#utility.yul\":10809:10816   */\n      dup8\n        /* \"#utility.yul\":10805:10828   */\n      sub\n        /* \"#utility.yul\":10801:10834   */\n      slt\n        /* \"#utility.yul\":10798:10918   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":10837:10916   */\n      tag_492\n      tag_299\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10798:10918   */\n    tag_491:\n        /* \"#utility.yul\":10957:10958   */\n      0x00\n        /* \"#utility.yul\":10982:11035   */\n      tag_493\n        /* \"#utility.yul\":11027:11034   */\n      dup8\n        /* \"#utility.yul\":11018:11024   */\n      dup3\n        /* \"#utility.yul\":11007:11016   */\n      dup9\n        /* \"#utility.yul\":11003:11025   */\n      add\n        /* \"#utility.yul\":10982:11035   */\n      tag_318\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10972:11035   */\n      swap5\n      pop\n        /* \"#utility.yul\":10928:11045   */\n      pop\n        /* \"#utility.yul\":11084:11086   */\n      0x20\n        /* \"#utility.yul\":11110:11163   */\n      tag_494\n        /* \"#utility.yul\":11155:11162   */\n      dup8\n        /* \"#utility.yul\":11146:11152   */\n      dup3\n        /* \"#utility.yul\":11135:11144   */\n      dup9\n        /* \"#utility.yul\":11131:11153   */\n      add\n        /* \"#utility.yul\":11110:11163   */\n      tag_318\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":11100:11163   */\n      swap4\n      pop\n        /* \"#utility.yul\":11055:11173   */\n      pop\n        /* \"#utility.yul\":11212:11214   */\n      0x40\n        /* \"#utility.yul\":11238:11291   */\n      tag_495\n        /* \"#utility.yul\":11283:11290   */\n      dup8\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11263:11272   */\n      dup9\n        /* \"#utility.yul\":11259:11281   */\n      add\n        /* \"#utility.yul\":11238:11291   */\n      tag_313\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11228:11291   */\n      swap3\n      pop\n        /* \"#utility.yul\":11183:11301   */\n      pop\n        /* \"#utility.yul\":11368:11370   */\n      0x60\n        /* \"#utility.yul\":11357:11366   */\n      dup6\n        /* \"#utility.yul\":11353:11371   */\n      add\n        /* \"#utility.yul\":11340:11372   */\n      calldataload\n        /* \"#utility.yul\":11399:11417   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11391:11397   */\n      dup2\n        /* \"#utility.yul\":11388:11418   */\n      gt\n        /* \"#utility.yul\":11385:11502   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":11421:11500   */\n      tag_497\n      tag_300\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11385:11502   */\n    tag_496:\n        /* \"#utility.yul\":11526:11588   */\n      tag_498\n        /* \"#utility.yul\":11580:11587   */\n      dup8\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup9\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11526:11588   */\n      tag_332\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11516:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":10662:11605   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12085   */\n    tag_86:\n        /* \"#utility.yul\":11679:11685   */\n      0x00\n        /* \"#utility.yul\":11687:11693   */\n      dup1\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11715:11722   */\n      dup6\n        /* \"#utility.yul\":11711:11734   */\n      sub\n        /* \"#utility.yul\":11707:11739   */\n      slt\n        /* \"#utility.yul\":11704:11823   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":11742:11821   */\n      tag_501\n      tag_299\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11704:11823   */\n    tag_500:\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_502\n        /* \"#utility.yul\":11932:11939   */\n      dup6\n        /* \"#utility.yul\":11923:11929   */\n      dup3\n        /* \"#utility.yul\":11912:11921   */\n      dup7\n        /* \"#utility.yul\":11908:11930   */\n      add\n        /* \"#utility.yul\":11887:11940   */\n      tag_318\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11877:11940   */\n      swap3\n      pop\n        /* \"#utility.yul\":11833:11950   */\n      pop\n        /* \"#utility.yul\":11989:11991   */\n      0x20\n        /* \"#utility.yul\":12015:12068   */\n      tag_503\n        /* \"#utility.yul\":12060:12067   */\n      dup6\n        /* \"#utility.yul\":12051:12057   */\n      dup3\n        /* \"#utility.yul\":12040:12049   */\n      dup7\n        /* \"#utility.yul\":12036:12058   */\n      add\n        /* \"#utility.yul\":12015:12068   */\n      tag_318\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12005:12068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11960:12078   */\n      pop\n        /* \"#utility.yul\":11611:12085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12091:12271   */\n    tag_333:\n        /* \"#utility.yul\":12139:12216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12129:12217   */\n      mstore\n        /* \"#utility.yul\":12236:12240   */\n      0x22\n        /* \"#utility.yul\":12233:12234   */\n      0x04\n        /* \"#utility.yul\":12226:12241   */\n      mstore\n        /* \"#utility.yul\":12260:12264   */\n      0x24\n        /* \"#utility.yul\":12257:12258   */\n      0x00\n        /* \"#utility.yul\":12250:12265   */\n      revert\n        /* \"#utility.yul\":12277:12597   */\n    tag_96:\n        /* \"#utility.yul\":12321:12327   */\n      0x00\n        /* \"#utility.yul\":12358:12359   */\n      0x02\n        /* \"#utility.yul\":12352:12356   */\n      dup3\n        /* \"#utility.yul\":12348:12360   */\n      div\n        /* \"#utility.yul\":12338:12360   */\n      swap1\n      pop\n        /* \"#utility.yul\":12405:12406   */\n      0x01\n        /* \"#utility.yul\":12399:12403   */\n      dup3\n        /* \"#utility.yul\":12395:12407   */\n      and\n        /* \"#utility.yul\":12426:12444   */\n      dup1\n        /* \"#utility.yul\":12416:12497   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":12482:12486   */\n      0x7f\n        /* \"#utility.yul\":12474:12480   */\n      dup3\n        /* \"#utility.yul\":12470:12487   */\n      and\n        /* \"#utility.yul\":12460:12487   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12497   */\n    tag_506:\n        /* \"#utility.yul\":12544:12546   */\n      0x20\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12533:12547   */\n      lt\n        /* \"#utility.yul\":12513:12531   */\n      dup2\n        /* \"#utility.yul\":12510:12548   */\n      sub\n        /* \"#utility.yul\":12507:12591   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":12563:12581   */\n      tag_508\n      tag_333\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12507:12591   */\n    tag_507:\n        /* \"#utility.yul\":12328:12597   */\n      pop\n        /* \"#utility.yul\":12277:12597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12603:13045   */\n    tag_119:\n        /* \"#utility.yul\":12752:12756   */\n      0x00\n        /* \"#utility.yul\":12790:12792   */\n      0x60\n        /* \"#utility.yul\":12779:12788   */\n      dup3\n        /* \"#utility.yul\":12775:12793   */\n      add\n        /* \"#utility.yul\":12767:12793   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:12874   */\n      tag_510\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12847:12853   */\n      dup7\n        /* \"#utility.yul\":12803:12874   */\n      tag_316\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12884:12956   */\n      tag_511\n        /* \"#utility.yul\":12952:12954   */\n      0x20\n        /* \"#utility.yul\":12941:12950   */\n      dup4\n        /* \"#utility.yul\":12937:12955   */\n      add\n        /* \"#utility.yul\":12928:12934   */\n      dup6\n        /* \"#utility.yul\":12884:12956   */\n      tag_327\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12966:13038   */\n      tag_512\n        /* \"#utility.yul\":13034:13036   */\n      0x40\n        /* \"#utility.yul\":13023:13032   */\n      dup4\n        /* \"#utility.yul\":13019:13037   */\n      add\n        /* \"#utility.yul\":13010:13016   */\n      dup5\n        /* \"#utility.yul\":12966:13038   */\n      tag_316\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12603:13045   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13051:13223   */\n    tag_334:\n        /* \"#utility.yul\":13191:13215   */\n      0x4e6f7420617574686f72697a656420746f206d696e7400000000000000000000\n        /* \"#utility.yul\":13187:13188   */\n      0x00\n        /* \"#utility.yul\":13179:13185   */\n      dup3\n        /* \"#utility.yul\":13175:13189   */\n      add\n        /* \"#utility.yul\":13168:13216   */\n      mstore\n        /* \"#utility.yul\":13051:13223   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13229:13595   */\n    tag_335:\n        /* \"#utility.yul\":13371:13374   */\n      0x00\n        /* \"#utility.yul\":13392:13459   */\n      tag_515\n        /* \"#utility.yul\":13456:13458   */\n      0x16\n        /* \"#utility.yul\":13451:13454   */\n      dup4\n        /* \"#utility.yul\":13392:13459   */\n      tag_307\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13385:13459   */\n      swap2\n      pop\n        /* \"#utility.yul\":13468:13561   */\n      tag_516\n        /* \"#utility.yul\":13557:13560   */\n      dup3\n        /* \"#utility.yul\":13468:13561   */\n      tag_334\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13586:13588   */\n      0x20\n        /* \"#utility.yul\":13581:13584   */\n      dup3\n        /* \"#utility.yul\":13577:13589   */\n      add\n        /* \"#utility.yul\":13570:13589   */\n      swap1\n      pop\n        /* \"#utility.yul\":13229:13595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13601:14020   */\n    tag_123:\n        /* \"#utility.yul\":13767:13771   */\n      0x00\n        /* \"#utility.yul\":13805:13807   */\n      0x20\n        /* \"#utility.yul\":13794:13803   */\n      dup3\n        /* \"#utility.yul\":13790:13808   */\n      add\n        /* \"#utility.yul\":13782:13808   */\n      swap1\n      pop\n        /* \"#utility.yul\":13854:13863   */\n      dup2\n        /* \"#utility.yul\":13848:13852   */\n      dup2\n        /* \"#utility.yul\":13844:13864   */\n      sub\n        /* \"#utility.yul\":13840:13841   */\n      0x00\n        /* \"#utility.yul\":13829:13838   */\n      dup4\n        /* \"#utility.yul\":13825:13842   */\n      add\n        /* \"#utility.yul\":13818:13865   */\n      mstore\n        /* \"#utility.yul\":13882:14013   */\n      tag_518\n        /* \"#utility.yul\":14008:14012   */\n      dup2\n        /* \"#utility.yul\":13882:14013   */\n      tag_335\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":13874:14013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13601:14020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14026:14247   */\n    tag_336:\n        /* \"#utility.yul\":14166:14200   */\n      0x4e6f7420617574686f72697a656420746f206368616e676520617574686f7269\n        /* \"#utility.yul\":14162:14163   */\n      0x00\n        /* \"#utility.yul\":14154:14160   */\n      dup3\n        /* \"#utility.yul\":14150:14164   */\n      add\n        /* \"#utility.yul\":14143:14201   */\n      mstore\n        /* \"#utility.yul\":14235:14239   */\n      0x7479000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14230:14232   */\n      0x20\n        /* \"#utility.yul\":14222:14228   */\n      dup3\n        /* \"#utility.yul\":14218:14233   */\n      add\n        /* \"#utility.yul\":14211:14240   */\n      mstore\n        /* \"#utility.yul\":14026:14247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14253:14619   */\n    tag_337:\n        /* \"#utility.yul\":14395:14398   */\n      0x00\n        /* \"#utility.yul\":14416:14483   */\n      tag_521\n        /* \"#utility.yul\":14480:14482   */\n      0x22\n        /* \"#utility.yul\":14475:14478   */\n      dup4\n        /* \"#utility.yul\":14416:14483   */\n      tag_307\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14409:14483   */\n      swap2\n      pop\n        /* \"#utility.yul\":14492:14585   */\n      tag_522\n        /* \"#utility.yul\":14581:14584   */\n      dup3\n        /* \"#utility.yul\":14492:14585   */\n      tag_336\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14610:14612   */\n      0x40\n        /* \"#utility.yul\":14605:14608   */\n      dup3\n        /* \"#utility.yul\":14601:14613   */\n      add\n        /* \"#utility.yul\":14594:14613   */\n      swap1\n      pop\n        /* \"#utility.yul\":14253:14619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14625:15044   */\n    tag_135:\n        /* \"#utility.yul\":14791:14795   */\n      0x00\n        /* \"#utility.yul\":14829:14831   */\n      0x20\n        /* \"#utility.yul\":14818:14827   */\n      dup3\n        /* \"#utility.yul\":14814:14832   */\n      add\n        /* \"#utility.yul\":14806:14832   */\n      swap1\n      pop\n        /* \"#utility.yul\":14878:14887   */\n      dup2\n        /* \"#utility.yul\":14872:14876   */\n      dup2\n        /* \"#utility.yul\":14868:14888   */\n      sub\n        /* \"#utility.yul\":14864:14865   */\n      0x00\n        /* \"#utility.yul\":14853:14862   */\n      dup4\n        /* \"#utility.yul\":14849:14866   */\n      add\n        /* \"#utility.yul\":14842:14889   */\n      mstore\n        /* \"#utility.yul\":14906:15037   */\n      tag_524\n        /* \"#utility.yul\":15032:15036   */\n      dup2\n        /* \"#utility.yul\":14906:15037   */\n      tag_337\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14898:15037   */\n      swap1\n      pop\n        /* \"#utility.yul\":14625:15044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15050:15230   */\n    tag_338:\n        /* \"#utility.yul\":15190:15222   */\n      0x4e6f7420617574686f72697a656420746f207365742062617365205552490000\n        /* \"#utility.yul\":15186:15187   */\n      0x00\n        /* \"#utility.yul\":15178:15184   */\n      dup3\n        /* \"#utility.yul\":15174:15188   */\n      add\n        /* \"#utility.yul\":15167:15223   */\n      mstore\n        /* \"#utility.yul\":15050:15230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15236:15602   */\n    tag_339:\n        /* \"#utility.yul\":15378:15381   */\n      0x00\n        /* \"#utility.yul\":15399:15466   */\n      tag_527\n        /* \"#utility.yul\":15463:15465   */\n      0x1e\n        /* \"#utility.yul\":15458:15461   */\n      dup4\n        /* \"#utility.yul\":15399:15466   */\n      tag_307\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15392:15466   */\n      swap2\n      pop\n        /* \"#utility.yul\":15475:15568   */\n      tag_528\n        /* \"#utility.yul\":15564:15567   */\n      dup3\n        /* \"#utility.yul\":15475:15568   */\n      tag_338\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15593:15595   */\n      0x20\n        /* \"#utility.yul\":15588:15591   */\n      dup3\n        /* \"#utility.yul\":15584:15596   */\n      add\n        /* \"#utility.yul\":15577:15596   */\n      swap1\n      pop\n        /* \"#utility.yul\":15236:15602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15608:16027   */\n    tag_139:\n        /* \"#utility.yul\":15774:15778   */\n      0x00\n        /* \"#utility.yul\":15812:15814   */\n      0x20\n        /* \"#utility.yul\":15801:15810   */\n      dup3\n        /* \"#utility.yul\":15797:15815   */\n      add\n        /* \"#utility.yul\":15789:15815   */\n      swap1\n      pop\n        /* \"#utility.yul\":15861:15870   */\n      dup2\n        /* \"#utility.yul\":15855:15859   */\n      dup2\n        /* \"#utility.yul\":15851:15871   */\n      sub\n        /* \"#utility.yul\":15847:15848   */\n      0x00\n        /* \"#utility.yul\":15836:15845   */\n      dup4\n        /* \"#utility.yul\":15832:15849   */\n      add\n        /* \"#utility.yul\":15825:15872   */\n      mstore\n        /* \"#utility.yul\":15889:16020   */\n      tag_530\n        /* \"#utility.yul\":16015:16019   */\n      dup2\n        /* \"#utility.yul\":15889:16020   */\n      tag_339\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15881:16020   */\n      swap1\n      pop\n        /* \"#utility.yul\":15608:16027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16033:16174   */\n    tag_340:\n        /* \"#utility.yul\":16082:16086   */\n      0x00\n        /* \"#utility.yul\":16105:16108   */\n      dup2\n        /* \"#utility.yul\":16097:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16128:16131   */\n      dup2\n        /* \"#utility.yul\":16125:16126   */\n      0x00\n        /* \"#utility.yul\":16118:16132   */\n      mstore\n        /* \"#utility.yul\":16162:16166   */\n      0x20\n        /* \"#utility.yul\":16159:16160   */\n      0x00\n        /* \"#utility.yul\":16149:16167   */\n      keccak256\n        /* \"#utility.yul\":16141:16167   */\n      swap1\n      pop\n        /* \"#utility.yul\":16033:16174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16180:16273   */\n    tag_341:\n        /* \"#utility.yul\":16217:16223   */\n      0x00\n        /* \"#utility.yul\":16264:16266   */\n      0x20\n        /* \"#utility.yul\":16259:16261   */\n      0x1f\n        /* \"#utility.yul\":16252:16257   */\n      dup4\n        /* \"#utility.yul\":16248:16262   */\n      add\n        /* \"#utility.yul\":16244:16267   */\n      div\n        /* \"#utility.yul\":16234:16267   */\n      swap1\n      pop\n        /* \"#utility.yul\":16180:16273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16279:16386   */\n    tag_342:\n        /* \"#utility.yul\":16323:16331   */\n      0x00\n        /* \"#utility.yul\":16373:16378   */\n      dup3\n        /* \"#utility.yul\":16367:16371   */\n      dup3\n        /* \"#utility.yul\":16363:16379   */\n      shl\n        /* \"#utility.yul\":16342:16379   */\n      swap1\n      pop\n        /* \"#utility.yul\":16279:16386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16392:16785   */\n    tag_343:\n        /* \"#utility.yul\":16461:16467   */\n      0x00\n        /* \"#utility.yul\":16511:16512   */\n      0x08\n        /* \"#utility.yul\":16499:16509   */\n      dup4\n        /* \"#utility.yul\":16495:16513   */\n      mul\n        /* \"#utility.yul\":16534:16631   */\n      tag_535\n        /* \"#utility.yul\":16564:16630   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16553:16562   */\n      dup3\n        /* \"#utility.yul\":16534:16631   */\n      tag_342\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16652:16691   */\n      tag_536\n        /* \"#utility.yul\":16682:16690   */\n      dup7\n        /* \"#utility.yul\":16671:16680   */\n      dup4\n        /* \"#utility.yul\":16652:16691   */\n      tag_342\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16640:16691   */\n      swap6\n      pop\n        /* \"#utility.yul\":16724:16728   */\n      dup1\n        /* \"#utility.yul\":16720:16729   */\n      not\n        /* \"#utility.yul\":16713:16718   */\n      dup5\n        /* \"#utility.yul\":16709:16730   */\n      and\n        /* \"#utility.yul\":16700:16730   */\n      swap4\n      pop\n        /* \"#utility.yul\":16773:16777   */\n      dup1\n        /* \"#utility.yul\":16763:16771   */\n      dup7\n        /* \"#utility.yul\":16759:16778   */\n      and\n        /* \"#utility.yul\":16752:16757   */\n      dup5\n        /* \"#utility.yul\":16749:16779   */\n      or\n        /* \"#utility.yul\":16739:16779   */\n      swap3\n      pop\n        /* \"#utility.yul\":16468:16785   */\n      pop\n      pop\n        /* \"#utility.yul\":16392:16785   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16791:16851   */\n    tag_344:\n        /* \"#utility.yul\":16819:16822   */\n      0x00\n        /* \"#utility.yul\":16840:16845   */\n      dup2\n        /* \"#utility.yul\":16833:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16791:16851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16857:16999   */\n    tag_345:\n        /* \"#utility.yul\":16907:16916   */\n      0x00\n        /* \"#utility.yul\":16940:16993   */\n      tag_539\n        /* \"#utility.yul\":16958:16992   */\n      tag_540\n        /* \"#utility.yul\":16967:16991   */\n      tag_541\n        /* \"#utility.yul\":16985:16990   */\n      dup5\n        /* \"#utility.yul\":16967:16991   */\n      tag_311\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16958:16992   */\n      tag_344\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16940:16993   */\n      tag_311\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16927:16993   */\n      swap1\n      pop\n        /* \"#utility.yul\":16857:16999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17005:17080   */\n    tag_346:\n        /* \"#utility.yul\":17048:17051   */\n      0x00\n        /* \"#utility.yul\":17069:17074   */\n      dup2\n        /* \"#utility.yul\":17062:17074   */\n      swap1\n      pop\n        /* \"#utility.yul\":17005:17080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17086:17355   */\n    tag_347:\n        /* \"#utility.yul\":17196:17235   */\n      tag_544\n        /* \"#utility.yul\":17227:17234   */\n      dup4\n        /* \"#utility.yul\":17196:17235   */\n      tag_345\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17257:17348   */\n      tag_545\n        /* \"#utility.yul\":17306:17347   */\n      tag_546\n        /* \"#utility.yul\":17330:17346   */\n      dup3\n        /* \"#utility.yul\":17306:17347   */\n      tag_346\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17298:17304   */\n      dup5\n        /* \"#utility.yul\":17291:17295   */\n      dup5\n        /* \"#utility.yul\":17285:17296   */\n      sload\n        /* \"#utility.yul\":17257:17348   */\n      tag_343\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17251:17255   */\n      dup3\n        /* \"#utility.yul\":17244:17349   */\n      sstore\n        /* \"#utility.yul\":17162:17355   */\n      pop\n        /* \"#utility.yul\":17086:17355   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17361:17434   */\n    tag_348:\n        /* \"#utility.yul\":17406:17409   */\n      0x00\n        /* \"#utility.yul\":17361:17434   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17440:17629   */\n    tag_349:\n        /* \"#utility.yul\":17517:17549   */\n      tag_549\n      tag_348\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17558:17623   */\n      tag_550\n        /* \"#utility.yul\":17616:17622   */\n      dup2\n        /* \"#utility.yul\":17608:17614   */\n      dup5\n        /* \"#utility.yul\":17602:17606   */\n      dup5\n        /* \"#utility.yul\":17558:17623   */\n      tag_347\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17493:17629   */\n      pop\n        /* \"#utility.yul\":17440:17629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17635:17821   */\n    tag_350:\n        /* \"#utility.yul\":17695:17815   */\n    tag_552:\n        /* \"#utility.yul\":17712:17715   */\n      dup2\n        /* \"#utility.yul\":17705:17710   */\n      dup2\n        /* \"#utility.yul\":17702:17716   */\n      lt\n        /* \"#utility.yul\":17695:17815   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":17766:17805   */\n      tag_555\n        /* \"#utility.yul\":17803:17804   */\n      0x00\n        /* \"#utility.yul\":17796:17801   */\n      dup3\n        /* \"#utility.yul\":17766:17805   */\n      tag_349\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17739:17740   */\n      0x01\n        /* \"#utility.yul\":17732:17737   */\n      dup2\n        /* \"#utility.yul\":17728:17741   */\n      add\n        /* \"#utility.yul\":17719:17741   */\n      swap1\n      pop\n        /* \"#utility.yul\":17695:17815   */\n      jump(tag_552)\n    tag_554:\n        /* \"#utility.yul\":17635:17821   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17827:18370   */\n    tag_351:\n        /* \"#utility.yul\":17928:17930   */\n      0x1f\n        /* \"#utility.yul\":17923:17926   */\n      dup3\n        /* \"#utility.yul\":17920:17931   */\n      gt\n        /* \"#utility.yul\":17917:18363   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":17962:18000   */\n      tag_558\n        /* \"#utility.yul\":17994:17999   */\n      dup2\n        /* \"#utility.yul\":17962:18000   */\n      tag_340\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18046:18075   */\n      tag_559\n        /* \"#utility.yul\":18064:18074   */\n      dup5\n        /* \"#utility.yul\":18046:18075   */\n      tag_341\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":18036:18044   */\n      dup2\n        /* \"#utility.yul\":18032:18076   */\n      add\n        /* \"#utility.yul\":18229:18231   */\n      0x20\n        /* \"#utility.yul\":18217:18227   */\n      dup6\n        /* \"#utility.yul\":18214:18232   */\n      lt\n        /* \"#utility.yul\":18211:18260   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":18250:18258   */\n      dup2\n        /* \"#utility.yul\":18235:18258   */\n      swap1\n      pop\n        /* \"#utility.yul\":18211:18260   */\n    tag_560:\n        /* \"#utility.yul\":18273:18353   */\n      tag_561\n        /* \"#utility.yul\":18329:18351   */\n      tag_562\n        /* \"#utility.yul\":18347:18350   */\n      dup6\n        /* \"#utility.yul\":18329:18351   */\n      tag_341\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18319:18327   */\n      dup4\n        /* \"#utility.yul\":18315:18352   */\n      add\n        /* \"#utility.yul\":18302:18313   */\n      dup3\n        /* \"#utility.yul\":18273:18353   */\n      tag_350\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17932:18363   */\n      pop\n      pop\n        /* \"#utility.yul\":17917:18363   */\n    tag_557:\n        /* \"#utility.yul\":17827:18370   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18376:18493   */\n    tag_352:\n        /* \"#utility.yul\":18430:18438   */\n      0x00\n        /* \"#utility.yul\":18480:18485   */\n      dup3\n        /* \"#utility.yul\":18474:18478   */\n      dup3\n        /* \"#utility.yul\":18470:18486   */\n      shr\n        /* \"#utility.yul\":18449:18486   */\n      swap1\n      pop\n        /* \"#utility.yul\":18376:18493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18499:18668   */\n    tag_353:\n        /* \"#utility.yul\":18543:18549   */\n      0x00\n        /* \"#utility.yul\":18576:18627   */\n      tag_565\n        /* \"#utility.yul\":18624:18625   */\n      0x00\n        /* \"#utility.yul\":18620:18626   */\n      not\n        /* \"#utility.yul\":18612:18617   */\n      dup5\n        /* \"#utility.yul\":18609:18610   */\n      0x08\n        /* \"#utility.yul\":18605:18618   */\n      mul\n        /* \"#utility.yul\":18576:18627   */\n      tag_352\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18572:18628   */\n      not\n        /* \"#utility.yul\":18657:18661   */\n      dup1\n        /* \"#utility.yul\":18651:18655   */\n      dup4\n        /* \"#utility.yul\":18647:18662   */\n      and\n        /* \"#utility.yul\":18637:18662   */\n      swap2\n      pop\n        /* \"#utility.yul\":18550:18668   */\n      pop\n        /* \"#utility.yul\":18499:18668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18673:18968   */\n    tag_354:\n        /* \"#utility.yul\":18749:18753   */\n      0x00\n        /* \"#utility.yul\":18895:18924   */\n      tag_567\n        /* \"#utility.yul\":18920:18923   */\n      dup4\n        /* \"#utility.yul\":18914:18918   */\n      dup4\n        /* \"#utility.yul\":18895:18924   */\n      tag_353\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18887:18924   */\n      swap2\n      pop\n        /* \"#utility.yul\":18957:18960   */\n      dup3\n        /* \"#utility.yul\":18954:18955   */\n      0x02\n        /* \"#utility.yul\":18950:18961   */\n      mul\n        /* \"#utility.yul\":18944:18948   */\n      dup3\n        /* \"#utility.yul\":18941:18962   */\n      or\n        /* \"#utility.yul\":18933:18962   */\n      swap1\n      pop\n        /* \"#utility.yul\":18673:18968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18973:20368   */\n    tag_141:\n        /* \"#utility.yul\":19090:19127   */\n      tag_569\n        /* \"#utility.yul\":19123:19126   */\n      dup3\n        /* \"#utility.yul\":19090:19127   */\n      tag_306\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19192:19210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19184:19190   */\n      dup2\n        /* \"#utility.yul\":19181:19211   */\n      gt\n        /* \"#utility.yul\":19178:19234   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":19214:19232   */\n      tag_571\n      tag_258\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19178:19234   */\n    tag_570:\n        /* \"#utility.yul\":19258:19296   */\n      tag_572\n        /* \"#utility.yul\":19290:19294   */\n      dup3\n        /* \"#utility.yul\":19284:19295   */\n      sload\n        /* \"#utility.yul\":19258:19296   */\n      tag_96\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19343:19410   */\n      tag_573\n        /* \"#utility.yul\":19403:19409   */\n      dup3\n        /* \"#utility.yul\":19395:19401   */\n      dup3\n        /* \"#utility.yul\":19389:19393   */\n      dup6\n        /* \"#utility.yul\":19343:19410   */\n      tag_351\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19437:19438   */\n      0x00\n        /* \"#utility.yul\":19461:19465   */\n      0x20\n        /* \"#utility.yul\":19448:19465   */\n      swap1\n      pop\n        /* \"#utility.yul\":19493:19495   */\n      0x1f\n        /* \"#utility.yul\":19485:19491   */\n      dup4\n        /* \"#utility.yul\":19482:19496   */\n      gt\n        /* \"#utility.yul\":19510:19511   */\n      0x01\n        /* \"#utility.yul\":19505:20123   */\n      dup2\n      eq\n      tag_575\n      jumpi\n        /* \"#utility.yul\":20167:20168   */\n      0x00\n        /* \"#utility.yul\":20184:20190   */\n      dup5\n        /* \"#utility.yul\":20181:20258   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":20233:20242   */\n      dup3\n        /* \"#utility.yul\":20228:20231   */\n      dup8\n        /* \"#utility.yul\":20224:20243   */\n      add\n        /* \"#utility.yul\":20218:20244   */\n      mload\n        /* \"#utility.yul\":20209:20244   */\n      swap1\n      pop\n        /* \"#utility.yul\":20181:20258   */\n    tag_576:\n        /* \"#utility.yul\":20284:20351   */\n      tag_577\n        /* \"#utility.yul\":20344:20350   */\n      dup6\n        /* \"#utility.yul\":20337:20342   */\n      dup3\n        /* \"#utility.yul\":20284:20351   */\n      tag_354\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20278:20282   */\n      dup7\n        /* \"#utility.yul\":20271:20352   */\n      sstore\n        /* \"#utility.yul\":20140:20362   */\n      pop\n        /* \"#utility.yul\":19475:20362   */\n      jump(tag_574)\n        /* \"#utility.yul\":19505:20123   */\n    tag_575:\n        /* \"#utility.yul\":19557:19561   */\n      0x1f\n        /* \"#utility.yul\":19553:19562   */\n      not\n        /* \"#utility.yul\":19545:19551   */\n      dup5\n        /* \"#utility.yul\":19541:19563   */\n      and\n        /* \"#utility.yul\":19591:19628   */\n      tag_578\n        /* \"#utility.yul\":19623:19627   */\n      dup7\n        /* \"#utility.yul\":19591:19628   */\n      tag_340\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19650:19651   */\n      0x00\n        /* \"#utility.yul\":19664:19872   */\n    tag_579:\n        /* \"#utility.yul\":19678:19685   */\n      dup3\n        /* \"#utility.yul\":19675:19676   */\n      dup2\n        /* \"#utility.yul\":19672:19686   */\n      lt\n        /* \"#utility.yul\":19664:19872   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":19757:19766   */\n      dup5\n        /* \"#utility.yul\":19752:19755   */\n      dup10\n        /* \"#utility.yul\":19748:19767   */\n      add\n        /* \"#utility.yul\":19742:19768   */\n      mload\n        /* \"#utility.yul\":19734:19740   */\n      dup3\n        /* \"#utility.yul\":19727:19769   */\n      sstore\n        /* \"#utility.yul\":19808:19809   */\n      0x01\n        /* \"#utility.yul\":19800:19806   */\n      dup3\n        /* \"#utility.yul\":19796:19810   */\n      add\n        /* \"#utility.yul\":19786:19810   */\n      swap2\n      pop\n        /* \"#utility.yul\":19855:19857   */\n      0x20\n        /* \"#utility.yul\":19844:19853   */\n      dup6\n        /* \"#utility.yul\":19840:19858   */\n      add\n        /* \"#utility.yul\":19827:19858   */\n      swap5\n      pop\n        /* \"#utility.yul\":19701:19705   */\n      0x20\n        /* \"#utility.yul\":19698:19699   */\n      dup2\n        /* \"#utility.yul\":19694:19706   */\n      add\n        /* \"#utility.yul\":19689:19706   */\n      swap1\n      pop\n        /* \"#utility.yul\":19664:19872   */\n      jump(tag_579)\n    tag_581:\n        /* \"#utility.yul\":19900:19906   */\n      dup7\n        /* \"#utility.yul\":19891:19898   */\n      dup4\n        /* \"#utility.yul\":19888:19907   */\n      lt\n        /* \"#utility.yul\":19885:20064   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":19958:19967   */\n      dup5\n        /* \"#utility.yul\":19953:19956   */\n      dup10\n        /* \"#utility.yul\":19949:19968   */\n      add\n        /* \"#utility.yul\":19943:19969   */\n      mload\n        /* \"#utility.yul\":20001:20049   */\n      tag_583\n        /* \"#utility.yul\":20043:20047   */\n      0x1f\n        /* \"#utility.yul\":20035:20041   */\n      dup10\n        /* \"#utility.yul\":20031:20048   */\n      and\n        /* \"#utility.yul\":20020:20029   */\n      dup3\n        /* \"#utility.yul\":20001:20049   */\n      tag_353\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":19993:19999   */\n      dup4\n        /* \"#utility.yul\":19986:20050   */\n      sstore\n        /* \"#utility.yul\":19908:20064   */\n      pop\n        /* \"#utility.yul\":19885:20064   */\n    tag_582:\n        /* \"#utility.yul\":20110:20111   */\n      0x01\n        /* \"#utility.yul\":20106:20107   */\n      0x02\n        /* \"#utility.yul\":20098:20104   */\n      dup9\n        /* \"#utility.yul\":20094:20108   */\n      mul\n        /* \"#utility.yul\":20090:20112   */\n      add\n        /* \"#utility.yul\":20084:20088   */\n      dup9\n        /* \"#utility.yul\":20077:20113   */\n      sstore\n        /* \"#utility.yul\":19512:20123   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19475:20362   */\n    tag_574:\n      pop\n        /* \"#utility.yul\":19065:20368   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18973:20368   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20374:20472   */\n    tag_355:\n        /* \"#utility.yul\":20425:20431   */\n      0x00\n        /* \"#utility.yul\":20459:20464   */\n      dup2\n        /* \"#utility.yul\":20453:20465   */\n      mload\n        /* \"#utility.yul\":20443:20465   */\n      swap1\n      pop\n        /* \"#utility.yul\":20374:20472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:20646   */\n    tag_356:\n        /* \"#utility.yul\":20561:20572   */\n      0x00\n        /* \"#utility.yul\":20595:20601   */\n      dup3\n        /* \"#utility.yul\":20590:20593   */\n      dup3\n        /* \"#utility.yul\":20583:20602   */\n      mstore\n        /* \"#utility.yul\":20635:20639   */\n      0x20\n        /* \"#utility.yul\":20630:20633   */\n      dup3\n        /* \"#utility.yul\":20626:20640   */\n      add\n        /* \"#utility.yul\":20611:20640   */\n      swap1\n      pop\n        /* \"#utility.yul\":20478:20646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20652:21025   */\n    tag_357:\n        /* \"#utility.yul\":20738:20741   */\n      0x00\n        /* \"#utility.yul\":20766:20804   */\n      tag_587\n        /* \"#utility.yul\":20798:20803   */\n      dup3\n        /* \"#utility.yul\":20766:20804   */\n      tag_355\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":20820:20890   */\n      tag_588\n        /* \"#utility.yul\":20883:20889   */\n      dup2\n        /* \"#utility.yul\":20878:20881   */\n      dup6\n        /* \"#utility.yul\":20820:20890   */\n      tag_356\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":20813:20890   */\n      swap4\n      pop\n        /* \"#utility.yul\":20899:20964   */\n      tag_589\n        /* \"#utility.yul\":20957:20963   */\n      dup2\n        /* \"#utility.yul\":20952:20955   */\n      dup6\n        /* \"#utility.yul\":20945:20949   */\n      0x20\n        /* \"#utility.yul\":20938:20943   */\n      dup7\n        /* \"#utility.yul\":20934:20950   */\n      add\n        /* \"#utility.yul\":20899:20964   */\n      tag_308\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":20989:21018   */\n      tag_590\n        /* \"#utility.yul\":21011:21017   */\n      dup2\n        /* \"#utility.yul\":20989:21018   */\n      tag_309\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20984:20987   */\n      dup5\n        /* \"#utility.yul\":20980:21019   */\n      add\n        /* \"#utility.yul\":20973:21019   */\n      swap2\n      pop\n        /* \"#utility.yul\":20742:21025   */\n      pop\n        /* \"#utility.yul\":20652:21025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21031:21671   */\n    tag_197:\n        /* \"#utility.yul\":21226:21230   */\n      0x00\n        /* \"#utility.yul\":21264:21267   */\n      0x80\n        /* \"#utility.yul\":21253:21262   */\n      dup3\n        /* \"#utility.yul\":21249:21268   */\n      add\n        /* \"#utility.yul\":21241:21268   */\n      swap1\n      pop\n        /* \"#utility.yul\":21278:21349   */\n      tag_592\n        /* \"#utility.yul\":21346:21347   */\n      0x00\n        /* \"#utility.yul\":21335:21344   */\n      dup4\n        /* \"#utility.yul\":21331:21348   */\n      add\n        /* \"#utility.yul\":21322:21328   */\n      dup8\n        /* \"#utility.yul\":21278:21349   */\n      tag_316\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":21359:21431   */\n      tag_593\n        /* \"#utility.yul\":21427:21429   */\n      0x20\n        /* \"#utility.yul\":21416:21425   */\n      dup4\n        /* \"#utility.yul\":21412:21430   */\n      add\n        /* \"#utility.yul\":21403:21409   */\n      dup7\n        /* \"#utility.yul\":21359:21431   */\n      tag_316\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":21441:21513   */\n      tag_594\n        /* \"#utility.yul\":21509:21511   */\n      0x40\n        /* \"#utility.yul\":21498:21507   */\n      dup4\n        /* \"#utility.yul\":21494:21512   */\n      add\n        /* \"#utility.yul\":21485:21491   */\n      dup6\n        /* \"#utility.yul\":21441:21513   */\n      tag_327\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":21560:21569   */\n      dup2\n        /* \"#utility.yul\":21554:21558   */\n      dup2\n        /* \"#utility.yul\":21550:21570   */\n      sub\n        /* \"#utility.yul\":21545:21547   */\n      0x60\n        /* \"#utility.yul\":21534:21543   */\n      dup4\n        /* \"#utility.yul\":21530:21548   */\n      add\n        /* \"#utility.yul\":21523:21571   */\n      mstore\n        /* \"#utility.yul\":21588:21664   */\n      tag_595\n        /* \"#utility.yul\":21659:21663   */\n      dup2\n        /* \"#utility.yul\":21650:21656   */\n      dup5\n        /* \"#utility.yul\":21588:21664   */\n      tag_357\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":21580:21664   */\n      swap1\n      pop\n        /* \"#utility.yul\":21031:21671   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21677:21818   */\n    tag_358:\n        /* \"#utility.yul\":21733:21738   */\n      0x00\n        /* \"#utility.yul\":21764:21770   */\n      dup2\n        /* \"#utility.yul\":21758:21771   */\n      mload\n        /* \"#utility.yul\":21749:21771   */\n      swap1\n      pop\n        /* \"#utility.yul\":21780:21812   */\n      tag_597\n        /* \"#utility.yul\":21806:21811   */\n      dup2\n        /* \"#utility.yul\":21780:21812   */\n      tag_302\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21677:21818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21824:22173   */\n    tag_200:\n        /* \"#utility.yul\":21893:21899   */\n      0x00\n        /* \"#utility.yul\":21942:21944   */\n      0x20\n        /* \"#utility.yul\":21930:21939   */\n      dup3\n        /* \"#utility.yul\":21921:21928   */\n      dup5\n        /* \"#utility.yul\":21917:21940   */\n      sub\n        /* \"#utility.yul\":21913:21945   */\n      slt\n        /* \"#utility.yul\":21910:22029   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":21948:22027   */\n      tag_600\n      tag_299\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21910:22029   */\n    tag_599:\n        /* \"#utility.yul\":22068:22069   */\n      0x00\n        /* \"#utility.yul\":22093:22156   */\n      tag_601\n        /* \"#utility.yul\":22148:22155   */\n      dup5\n        /* \"#utility.yul\":22139:22145   */\n      dup3\n        /* \"#utility.yul\":22128:22137   */\n      dup6\n        /* \"#utility.yul\":22124:22146   */\n      add\n        /* \"#utility.yul\":22093:22156   */\n      tag_358\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":22083:22156   */\n      swap2\n      pop\n        /* \"#utility.yul\":22039:22166   */\n      pop\n        /* \"#utility.yul\":21824:22173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22179:22327   */\n    tag_359:\n        /* \"#utility.yul\":22281:22292   */\n      0x00\n        /* \"#utility.yul\":22318:22321   */\n      dup2\n        /* \"#utility.yul\":22303:22321   */\n      swap1\n      pop\n        /* \"#utility.yul\":22179:22327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22333:22723   */\n    tag_360:\n        /* \"#utility.yul\":22439:22442   */\n      0x00\n        /* \"#utility.yul\":22467:22506   */\n      tag_604\n        /* \"#utility.yul\":22500:22505   */\n      dup3\n        /* \"#utility.yul\":22467:22506   */\n      tag_306\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":22522:22611   */\n      tag_605\n        /* \"#utility.yul\":22604:22610   */\n      dup2\n        /* \"#utility.yul\":22599:22602   */\n      dup6\n        /* \"#utility.yul\":22522:22611   */\n      tag_359\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":22515:22611   */\n      swap4\n      pop\n        /* \"#utility.yul\":22620:22685   */\n      tag_606\n        /* \"#utility.yul\":22678:22684   */\n      dup2\n        /* \"#utility.yul\":22673:22676   */\n      dup6\n        /* \"#utility.yul\":22666:22670   */\n      0x20\n        /* \"#utility.yul\":22659:22664   */\n      dup7\n        /* \"#utility.yul\":22655:22671   */\n      add\n        /* \"#utility.yul\":22620:22685   */\n      tag_308\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":22710:22716   */\n      dup1\n        /* \"#utility.yul\":22705:22708   */\n      dup5\n        /* \"#utility.yul\":22701:22717   */\n      add\n        /* \"#utility.yul\":22694:22717   */\n      swap2\n      pop\n        /* \"#utility.yul\":22443:22723   */\n      pop\n        /* \"#utility.yul\":22333:22723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22729:23164   */\n    tag_222:\n        /* \"#utility.yul\":22909:22912   */\n      0x00\n        /* \"#utility.yul\":22931:23026   */\n      tag_608\n        /* \"#utility.yul\":23022:23025   */\n      dup3\n        /* \"#utility.yul\":23013:23019   */\n      dup6\n        /* \"#utility.yul\":22931:23026   */\n      tag_360\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":22924:23026   */\n      swap2\n      pop\n        /* \"#utility.yul\":23043:23138   */\n      tag_609\n        /* \"#utility.yul\":23134:23137   */\n      dup3\n        /* \"#utility.yul\":23125:23131   */\n      dup5\n        /* \"#utility.yul\":23043:23138   */\n      tag_360\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":23036:23138   */\n      swap2\n      pop\n        /* \"#utility.yul\":23155:23158   */\n      dup2\n        /* \"#utility.yul\":23148:23158   */\n      swap1\n      pop\n        /* \"#utility.yul\":22729:23164   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23170:23502   */\n    tag_242:\n        /* \"#utility.yul\":23291:23295   */\n      0x00\n        /* \"#utility.yul\":23329:23331   */\n      0x40\n        /* \"#utility.yul\":23318:23327   */\n      dup3\n        /* \"#utility.yul\":23314:23332   */\n      add\n        /* \"#utility.yul\":23306:23332   */\n      swap1\n      pop\n        /* \"#utility.yul\":23342:23413   */\n      tag_611\n        /* \"#utility.yul\":23410:23411   */\n      0x00\n        /* \"#utility.yul\":23399:23408   */\n      dup4\n        /* \"#utility.yul\":23395:23412   */\n      add\n        /* \"#utility.yul\":23386:23392   */\n      dup6\n        /* \"#utility.yul\":23342:23413   */\n      tag_316\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":23423:23495   */\n      tag_612\n        /* \"#utility.yul\":23491:23493   */\n      0x20\n        /* \"#utility.yul\":23480:23489   */\n      dup4\n        /* \"#utility.yul\":23476:23494   */\n      add\n        /* \"#utility.yul\":23467:23473   */\n      dup5\n        /* \"#utility.yul\":23423:23495   */\n      tag_327\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":23170:23502   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23508:23688   */\n    tag_264:\n        /* \"#utility.yul\":23556:23633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23553:23554   */\n      0x00\n        /* \"#utility.yul\":23546:23634   */\n      mstore\n        /* \"#utility.yul\":23653:23657   */\n      0x12\n        /* \"#utility.yul\":23650:23651   */\n      0x04\n        /* \"#utility.yul\":23643:23658   */\n      mstore\n        /* \"#utility.yul\":23677:23681   */\n      0x24\n        /* \"#utility.yul\":23674:23675   */\n      0x00\n        /* \"#utility.yul\":23667:23682   */\n      revert\n\n    auxdata: 0xa2646970667358221220a644b78c6cabba2e00fdee45996d29bf12aa54fa47d921a2dbe016070655ac7764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2898": {
									"entryPoint": null,
									"id": 2898,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBaseURI_2916": {
									"entryPoint": 287,
									"id": 2916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9403:13",
										"nodeType": "YulBlock",
										"src": "0:9403:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "423:28:13",
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:12:13",
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nativeSrc": "433:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nativeSrc": "546:28:13",
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:13",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:13",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nativeSrc": "556:12:13",
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nativeSrc": "556:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nativeSrc": "628:54:13",
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nativeSrc": "638:38:13",
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:13",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nativeSrc": "652:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:13",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nativeSrc": "668:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nativeSrc": "648:28:13",
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:13",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:13",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nativeSrc": "716:152:13",
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:13",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nativeSrc": "726:88:13",
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nativeSrc": "726:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:13",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:13",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nativeSrc": "823:15:13",
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nativeSrc": "823:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:13",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:13",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nativeSrc": "847:15:13",
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nativeSrc": "847:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nativeSrc": "917:238:13",
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nativeSrc": "927:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nativeSrc": "957:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nativeSrc": "945:40:13",
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:13",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:13",
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nativeSrc": "1098:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nativeSrc": "1098:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nativeSrc": "1036:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nativeSrc": "1072:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nativeSrc": "1033:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nativeSrc": "1030:88:13",
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nativeSrc": "1127:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nativeSrc": "1127:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:13",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:13",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nativeSrc": "1202:88:13",
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nativeSrc": "1212:30:13",
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nativeSrc": "1222:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nativeSrc": "1251:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nativeSrc": "1251:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:13",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:13",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nativeSrc": "1363:241:13",
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:13",
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nativeSrc": "1470:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nativeSrc": "1470:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nativeSrc": "1437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nativeSrc": "1434:56:13",
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nativeSrc": "1500:37:13",
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nativeSrc": "1508:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nativeSrc": "1574:23:13",
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nativeSrc": "1582:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:13",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:13",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nativeSrc": "1672:184:13",
													"nodeType": "YulBlock",
													"src": "1672:184:13",
													"statements": [
														{
															"nativeSrc": "1682:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:13",
																"nodeType": "YulLiteral",
																"src": "1691:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:13",
																"nodeType": "YulBlock",
																"src": "1751:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:13"
																					},
																					"nativeSrc": "1772:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:13"
																							},
																							"nativeSrc": "1791:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:13"
																					},
																					"nativeSrc": "1785:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:13"
																			},
																			"nativeSrc": "1765:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:13"
																		},
																		"nativeSrc": "1765:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:13"
																},
																"nativeSrc": "1709:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:13"
															},
															"nativeSrc": "1701:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:13",
																"nodeType": "YulBlock",
																"src": "1723:19:13",
																"statements": [
																	{
																		"nativeSrc": "1725:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:13"
																			},
																			"nativeSrc": "1730:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:13",
																"nodeType": "YulBlock",
																"src": "1705:3:13",
																"statements": []
															},
															"src": "1701:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:13"
																		},
																		"nativeSrc": "1830:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																},
																"nativeSrc": "1823:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:13"
															},
															"nativeSrc": "1823:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:13",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:13",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:13",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:246:13"
											},
											{
												"body": {
													"nativeSrc": "1957:339:13",
													"nodeType": "YulBlock",
													"src": "1957:339:13",
													"statements": [
														{
															"nativeSrc": "1967:75:13",
															"nodeType": "YulAssignment",
															"src": "1967:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:13"
																		},
																		"nativeSrc": "1992:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:13"
																},
																"nativeSrc": "1976:66:13",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:13"
																},
																"nativeSrc": "2051:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:13"
															},
															"nativeSrc": "2051:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:13"
														},
														{
															"nativeSrc": "2081:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nativeSrc": "2092:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:13",
																"nodeType": "YulBlock",
																"src": "2146:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:13"
																			},
																			"nativeSrc": "2148:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:13"
																		},
																		"nativeSrc": "2148:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nativeSrc": "2123:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:13"
																},
																"nativeSrc": "2120:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:13"
															},
															"nativeSrc": "2117:112:13",
															"nodeType": "YulIf",
															"src": "2117:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:13"
																},
																"nativeSrc": "2238:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:13"
															},
															"nativeSrc": "2238:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:13",
														"nodeType": "YulTypedName",
														"src": "1930:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:13",
														"nodeType": "YulTypedName",
														"src": "1935:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:13",
														"nodeType": "YulTypedName",
														"src": "1943:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:13",
														"nodeType": "YulTypedName",
														"src": "1951:5:13",
														"type": ""
													}
												],
												"src": "1862:434:13"
											},
											{
												"body": {
													"nativeSrc": "2389:282:13",
													"nodeType": "YulBlock",
													"src": "2389:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:13",
																"nodeType": "YulBlock",
																"src": "2438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:13"
																			},
																			"nativeSrc": "2440:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:13"
																		},
																		"nativeSrc": "2440:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:13"
																				},
																				"nativeSrc": "2413:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nativeSrc": "2409:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nativeSrc": "2402:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:13"
															},
															"nativeSrc": "2399:122:13",
															"nodeType": "YulIf",
															"src": "2399:122:13"
														},
														{
															"nativeSrc": "2530:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:13"
																},
																"nativeSrc": "2544:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:13",
															"nodeType": "YulAssignment",
															"src": "2566:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nativeSrc": "2634:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:13"
																},
																"nativeSrc": "2575:90:13",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:13",
														"nodeType": "YulTypedName",
														"src": "2367:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:13",
														"nodeType": "YulTypedName",
														"src": "2375:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:13",
														"nodeType": "YulTypedName",
														"src": "2383:5:13",
														"type": ""
													}
												],
												"src": "2316:355:13"
											},
											{
												"body": {
													"nativeSrc": "2764:437:13",
													"nodeType": "YulBlock",
													"src": "2764:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2810:83:13",
																"nodeType": "YulBlock",
																"src": "2810:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2812:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2812:77:13"
																			},
																			"nativeSrc": "2812:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2812:79:13"
																		},
																		"nativeSrc": "2812:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2785:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2794:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2781:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:13"
																		},
																		"nativeSrc": "2781:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2781:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2806:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2777:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:13"
																},
																"nativeSrc": "2777:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2777:32:13"
															},
															"nativeSrc": "2774:119:13",
															"nodeType": "YulIf",
															"src": "2774:119:13"
														},
														{
															"nativeSrc": "2903:291:13",
															"nodeType": "YulBlock",
															"src": "2903:291:13",
															"statements": [
																{
																	"nativeSrc": "2918:38:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2942:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2942:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2953:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2953:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2938:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2938:3:13"
																				},
																				"nativeSrc": "2938:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2938:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2932:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2932:5:13"
																		},
																		"nativeSrc": "2932:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2932:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2922:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3003:83:13",
																		"nodeType": "YulBlock",
																		"src": "3003:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3005:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3005:77:13"
																					},
																					"nativeSrc": "3005:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3005:79:13"
																				},
																				"nativeSrc": "3005:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3005:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2975:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2975:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2983:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2972:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2972:2:13"
																		},
																		"nativeSrc": "2972:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2972:30:13"
																	},
																	"nativeSrc": "2969:117:13",
																	"nodeType": "YulIf",
																	"src": "2969:117:13"
																},
																{
																	"nativeSrc": "3100:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3100:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3156:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3167:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3152:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:13"
																				},
																				"nativeSrc": "3152:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3176:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3110:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3110:41:13"
																		},
																		"nativeSrc": "3110:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3110:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3100:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3100:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:524:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2734:9:13",
														"nodeType": "YulTypedName",
														"src": "2734:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2745:7:13",
														"nodeType": "YulTypedName",
														"src": "2745:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2757:6:13",
														"nodeType": "YulTypedName",
														"src": "2757:6:13",
														"type": ""
													}
												],
												"src": "2677:524:13"
											},
											{
												"body": {
													"nativeSrc": "3266:40:13",
													"nodeType": "YulBlock",
													"src": "3266:40:13",
													"statements": [
														{
															"nativeSrc": "3277:22:13",
															"nodeType": "YulAssignment",
															"src": "3277:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3293:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3293:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3287:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3287:5:13"
																},
																"nativeSrc": "3287:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3287:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3207:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:13",
														"nodeType": "YulTypedName",
														"src": "3249:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3259:6:13",
														"nodeType": "YulTypedName",
														"src": "3259:6:13",
														"type": ""
													}
												],
												"src": "3207:99:13"
											},
											{
												"body": {
													"nativeSrc": "3340:152:13",
													"nodeType": "YulBlock",
													"src": "3340:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3357:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3357:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3360:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3360:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3350:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:13"
																},
																"nativeSrc": "3350:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3350:88:13"
															},
															"nativeSrc": "3350:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3350:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3454:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3457:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3447:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:13"
																},
																"nativeSrc": "3447:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3447:15:13"
															},
															"nativeSrc": "3447:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3447:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3478:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3481:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3481:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3471:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:13"
																},
																"nativeSrc": "3471:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3471:15:13"
															},
															"nativeSrc": "3471:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3471:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3312:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3312:180:13"
											},
											{
												"body": {
													"nativeSrc": "3549:269:13",
													"nodeType": "YulBlock",
													"src": "3549:269:13",
													"statements": [
														{
															"nativeSrc": "3559:22:13",
															"nodeType": "YulAssignment",
															"src": "3559:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3573:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3573:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3569:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:13"
																},
																"nativeSrc": "3569:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3569:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3559:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:13"
																}
															]
														},
														{
															"nativeSrc": "3590:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3590:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3620:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3620:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3616:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:13"
																},
																"nativeSrc": "3616:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3594:18:13",
																	"nodeType": "YulTypedName",
																	"src": "3594:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3667:51:13",
																"nodeType": "YulBlock",
																"src": "3667:51:13",
																"statements": [
																	{
																		"nativeSrc": "3681:27:13",
																		"nodeType": "YulAssignment",
																		"src": "3681:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3695:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3695:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3703:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3703:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3691:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3691:3:13"
																			},
																			"nativeSrc": "3691:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3691:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3681:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3647:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3647:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:13"
																},
																"nativeSrc": "3640:26:13",
																"nodeType": "YulFunctionCall",
																"src": "3640:26:13"
															},
															"nativeSrc": "3637:81:13",
															"nodeType": "YulIf",
															"src": "3637:81:13"
														},
														{
															"body": {
																"nativeSrc": "3770:42:13",
																"nodeType": "YulBlock",
																"src": "3770:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3784:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3784:16:13"
																			},
																			"nativeSrc": "3784:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3784:18:13"
																		},
																		"nativeSrc": "3784:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3784:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3734:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3734:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3757:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3765:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3754:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3754:2:13"
																		},
																		"nativeSrc": "3754:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3754:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3731:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:13"
																},
																"nativeSrc": "3731:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3731:38:13"
															},
															"nativeSrc": "3728:84:13",
															"nodeType": "YulIf",
															"src": "3728:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3498:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3533:4:13",
														"nodeType": "YulTypedName",
														"src": "3533:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3542:6:13",
														"nodeType": "YulTypedName",
														"src": "3542:6:13",
														"type": ""
													}
												],
												"src": "3498:320:13"
											},
											{
												"body": {
													"nativeSrc": "3878:87:13",
													"nodeType": "YulBlock",
													"src": "3878:87:13",
													"statements": [
														{
															"nativeSrc": "3888:11:13",
															"nodeType": "YulAssignment",
															"src": "3888:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "3896:3:13",
																"nodeType": "YulIdentifier",
																"src": "3896:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3888:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3888:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3916:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3919:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3919:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3909:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:13"
																},
																"nativeSrc": "3909:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3909:14:13"
															},
															"nativeSrc": "3909:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "3909:14:13"
														},
														{
															"nativeSrc": "3932:26:13",
															"nodeType": "YulAssignment",
															"src": "3932:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3950:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3950:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3953:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3940:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:13"
																},
																"nativeSrc": "3940:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3940:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3932:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3932:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3824:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3865:3:13",
														"nodeType": "YulTypedName",
														"src": "3865:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3873:4:13",
														"nodeType": "YulTypedName",
														"src": "3873:4:13",
														"type": ""
													}
												],
												"src": "3824:141:13"
											},
											{
												"body": {
													"nativeSrc": "4015:49:13",
													"nodeType": "YulBlock",
													"src": "4015:49:13",
													"statements": [
														{
															"nativeSrc": "4025:33:13",
															"nodeType": "YulAssignment",
															"src": "4025:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4043:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4043:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4050:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:13"
																		},
																		"nativeSrc": "4039:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4035:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:13"
																},
																"nativeSrc": "4035:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4035:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4025:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3971:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3998:5:13",
														"nodeType": "YulTypedName",
														"src": "3998:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4008:6:13",
														"nodeType": "YulTypedName",
														"src": "4008:6:13",
														"type": ""
													}
												],
												"src": "3971:93:13"
											},
											{
												"body": {
													"nativeSrc": "4123:54:13",
													"nodeType": "YulBlock",
													"src": "4123:54:13",
													"statements": [
														{
															"nativeSrc": "4133:37:13",
															"nodeType": "YulAssignment",
															"src": "4133:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4158:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4164:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4164:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4154:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:13"
																},
																"nativeSrc": "4154:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4154:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4133:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4133:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4070:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4098:4:13",
														"nodeType": "YulTypedName",
														"src": "4098:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4104:5:13",
														"nodeType": "YulTypedName",
														"src": "4104:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4114:8:13",
														"nodeType": "YulTypedName",
														"src": "4114:8:13",
														"type": ""
													}
												],
												"src": "4070:107:13"
											},
											{
												"body": {
													"nativeSrc": "4259:317:13",
													"nodeType": "YulBlock",
													"src": "4259:317:13",
													"statements": [
														{
															"nativeSrc": "4269:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4269:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4290:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4290:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4302:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4286:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:13"
																},
																"nativeSrc": "4286:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4286:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4273:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4273:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4313:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4313:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4344:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4355:66:13",
																		"nodeType": "YulLiteral",
																		"src": "4355:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4325:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4325:18:13"
																},
																"nativeSrc": "4325:97:13",
																"nodeType": "YulFunctionCall",
																"src": "4325:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4317:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4317:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4431:51:13",
															"nodeType": "YulAssignment",
															"src": "4431:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4462:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4473:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "4473:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4443:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4443:18:13"
																},
																"nativeSrc": "4443:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4443:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4431:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4431:8:13"
																}
															]
														},
														{
															"nativeSrc": "4491:30:13",
															"nodeType": "YulAssignment",
															"src": "4491:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4504:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4504:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4515:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4515:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4511:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:13"
																		},
																		"nativeSrc": "4511:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:13"
																},
																"nativeSrc": "4500:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4500:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4491:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:13"
																}
															]
														},
														{
															"nativeSrc": "4530:40:13",
															"nodeType": "YulAssignment",
															"src": "4530:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4543:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4554:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4554:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4564:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4564:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4550:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4550:3:13"
																		},
																		"nativeSrc": "4550:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4540:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:13"
																},
																"nativeSrc": "4540:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4540:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4530:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4183:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:13",
														"nodeType": "YulTypedName",
														"src": "4220:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4227:10:13",
														"nodeType": "YulTypedName",
														"src": "4227:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4239:8:13",
														"nodeType": "YulTypedName",
														"src": "4239:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4252:6:13",
														"nodeType": "YulTypedName",
														"src": "4252:6:13",
														"type": ""
													}
												],
												"src": "4183:393:13"
											},
											{
												"body": {
													"nativeSrc": "4627:32:13",
													"nodeType": "YulBlock",
													"src": "4627:32:13",
													"statements": [
														{
															"nativeSrc": "4637:16:13",
															"nodeType": "YulAssignment",
															"src": "4637:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4648:5:13",
																"nodeType": "YulIdentifier",
																"src": "4648:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4637:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4637:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4582:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4609:5:13",
														"nodeType": "YulTypedName",
														"src": "4609:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4619:7:13",
														"nodeType": "YulTypedName",
														"src": "4619:7:13",
														"type": ""
													}
												],
												"src": "4582:77:13"
											},
											{
												"body": {
													"nativeSrc": "4697:28:13",
													"nodeType": "YulBlock",
													"src": "4697:28:13",
													"statements": [
														{
															"nativeSrc": "4707:12:13",
															"nodeType": "YulAssignment",
															"src": "4707:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4714:5:13",
																"nodeType": "YulIdentifier",
																"src": "4714:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4665:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4683:5:13",
														"nodeType": "YulTypedName",
														"src": "4683:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4693:3:13",
														"nodeType": "YulTypedName",
														"src": "4693:3:13",
														"type": ""
													}
												],
												"src": "4665:60:13"
											},
											{
												"body": {
													"nativeSrc": "4791:82:13",
													"nodeType": "YulBlock",
													"src": "4791:82:13",
													"statements": [
														{
															"nativeSrc": "4801:66:13",
															"nodeType": "YulAssignment",
															"src": "4801:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4859:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4859:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4841:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4841:17:13"
																				},
																				"nativeSrc": "4841:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4841:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4832:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "4832:8:13"
																		},
																		"nativeSrc": "4832:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4814:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4814:17:13"
																},
																"nativeSrc": "4814:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4814:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4801:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4801:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4731:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4771:5:13",
														"nodeType": "YulTypedName",
														"src": "4771:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4781:9:13",
														"nodeType": "YulTypedName",
														"src": "4781:9:13",
														"type": ""
													}
												],
												"src": "4731:142:13"
											},
											{
												"body": {
													"nativeSrc": "4926:28:13",
													"nodeType": "YulBlock",
													"src": "4926:28:13",
													"statements": [
														{
															"nativeSrc": "4936:12:13",
															"nodeType": "YulAssignment",
															"src": "4936:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4943:5:13",
																"nodeType": "YulIdentifier",
																"src": "4943:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4936:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4879:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4912:5:13",
														"nodeType": "YulTypedName",
														"src": "4912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4922:3:13",
														"nodeType": "YulTypedName",
														"src": "4922:3:13",
														"type": ""
													}
												],
												"src": "4879:75:13"
											},
											{
												"body": {
													"nativeSrc": "5036:193:13",
													"nodeType": "YulBlock",
													"src": "5036:193:13",
													"statements": [
														{
															"nativeSrc": "5046:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5046:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5101:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5101:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5070:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5070:30:13"
																},
																"nativeSrc": "5070:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5070:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5050:16:13",
																	"nodeType": "YulTypedName",
																	"src": "5050:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5125:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5165:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "5165:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5159:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5159:5:13"
																				},
																				"nativeSrc": "5159:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5159:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5172:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5172:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5204:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "5204:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5180:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "5180:23:13"
																				},
																				"nativeSrc": "5180:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5180:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5131:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "5131:27:13"
																		},
																		"nativeSrc": "5131:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5131:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:13"
																},
																"nativeSrc": "5118:105:13",
																"nodeType": "YulFunctionCall",
																"src": "5118:105:13"
															},
															"nativeSrc": "5118:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "5118:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4960:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5013:4:13",
														"nodeType": "YulTypedName",
														"src": "5013:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5019:6:13",
														"nodeType": "YulTypedName",
														"src": "5019:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5027:7:13",
														"nodeType": "YulTypedName",
														"src": "5027:7:13",
														"type": ""
													}
												],
												"src": "4960:269:13"
											},
											{
												"body": {
													"nativeSrc": "5284:24:13",
													"nodeType": "YulBlock",
													"src": "5284:24:13",
													"statements": [
														{
															"nativeSrc": "5294:8:13",
															"nodeType": "YulAssignment",
															"src": "5294:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5301:1:13",
																"nodeType": "YulLiteral",
																"src": "5301:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5294:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5235:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5280:3:13",
														"nodeType": "YulTypedName",
														"src": "5280:3:13",
														"type": ""
													}
												],
												"src": "5235:73:13"
											},
											{
												"body": {
													"nativeSrc": "5367:136:13",
													"nodeType": "YulBlock",
													"src": "5367:136:13",
													"statements": [
														{
															"nativeSrc": "5377:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5377:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5391:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5391:30:13"
																},
																"nativeSrc": "5391:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5391:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5381:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5381:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5476:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5476:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5482:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5482:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5490:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5432:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5432:43:13"
																},
																"nativeSrc": "5432:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5432:65:13"
															},
															"nativeSrc": "5432:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5432:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5314:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5353:4:13",
														"nodeType": "YulTypedName",
														"src": "5353:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5359:6:13",
														"nodeType": "YulTypedName",
														"src": "5359:6:13",
														"type": ""
													}
												],
												"src": "5314:189:13"
											},
											{
												"body": {
													"nativeSrc": "5559:136:13",
													"nodeType": "YulBlock",
													"src": "5559:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5626:63:13",
																"nodeType": "YulBlock",
																"src": "5626:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5670:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5670:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5677:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5640:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "5640:29:13"
																			},
																			"nativeSrc": "5640:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5640:39:13"
																		},
																		"nativeSrc": "5640:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5579:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5579:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5586:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5576:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5576:2:13"
																},
																"nativeSrc": "5576:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5576:14:13"
															},
															"nativeSrc": "5569:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5591:26:13",
																"nodeType": "YulBlock",
																"src": "5591:26:13",
																"statements": [
																	{
																		"nativeSrc": "5593:22:13",
																		"nodeType": "YulAssignment",
																		"src": "5593:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5606:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5606:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5613:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5602:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5602:3:13"
																			},
																			"nativeSrc": "5602:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5602:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5593:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5593:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5573:2:13",
																"nodeType": "YulBlock",
																"src": "5573:2:13",
																"statements": []
															},
															"src": "5569:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5509:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5547:5:13",
														"nodeType": "YulTypedName",
														"src": "5547:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5554:3:13",
														"nodeType": "YulTypedName",
														"src": "5554:3:13",
														"type": ""
													}
												],
												"src": "5509:186:13"
											},
											{
												"body": {
													"nativeSrc": "5780:464:13",
													"nodeType": "YulBlock",
													"src": "5780:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5806:431:13",
																"nodeType": "YulBlock",
																"src": "5806:431:13",
																"statements": [
																	{
																		"nativeSrc": "5820:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5820:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5868:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5868:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5836:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "5836:31:13"
																			},
																			"nativeSrc": "5836:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5836:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5824:8:13",
																				"nodeType": "YulTypedName",
																				"src": "5824:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5887:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5887:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5910:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "5910:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5938:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5938:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5920:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "5920:17:13"
																					},
																					"nativeSrc": "5920:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5920:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5906:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5906:3:13"
																			},
																			"nativeSrc": "5906:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5906:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5891:11:13",
																				"nodeType": "YulTypedName",
																				"src": "5891:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6107:27:13",
																			"nodeType": "YulBlock",
																			"src": "6107:27:13",
																			"statements": [
																				{
																					"nativeSrc": "6109:23:13",
																					"nodeType": "YulAssignment",
																					"src": "6109:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6124:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6124:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6109:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "6109:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6091:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6091:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6103:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6103:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6088:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6088:2:13"
																			},
																			"nativeSrc": "6088:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6088:18:13"
																		},
																		"nativeSrc": "6085:49:13",
																		"nodeType": "YulIf",
																		"src": "6085:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6176:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6176:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6193:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6193:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6221:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6221:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6203:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "6203:17:13"
																							},
																							"nativeSrc": "6203:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6203:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6189:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6189:3:13"
																					},
																					"nativeSrc": "6189:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6189:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6147:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "6147:28:13"
																			},
																			"nativeSrc": "6147:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6147:80:13"
																		},
																		"nativeSrc": "6147:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5797:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5797:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5802:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5802:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5794:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5794:2:13"
																},
																"nativeSrc": "5794:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5794:11:13"
															},
															"nativeSrc": "5791:446:13",
															"nodeType": "YulIf",
															"src": "5791:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5701:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5756:5:13",
														"nodeType": "YulTypedName",
														"src": "5756:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5763:3:13",
														"nodeType": "YulTypedName",
														"src": "5763:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5768:10:13",
														"nodeType": "YulTypedName",
														"src": "5768:10:13",
														"type": ""
													}
												],
												"src": "5701:543:13"
											},
											{
												"body": {
													"nativeSrc": "6313:54:13",
													"nodeType": "YulBlock",
													"src": "6313:54:13",
													"statements": [
														{
															"nativeSrc": "6323:37:13",
															"nodeType": "YulAssignment",
															"src": "6323:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6348:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6348:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6354:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6354:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6344:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:13"
																},
																"nativeSrc": "6344:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6344:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6323:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6323:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6250:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6288:4:13",
														"nodeType": "YulTypedName",
														"src": "6288:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6294:5:13",
														"nodeType": "YulTypedName",
														"src": "6294:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6304:8:13",
														"nodeType": "YulTypedName",
														"src": "6304:8:13",
														"type": ""
													}
												],
												"src": "6250:117:13"
											},
											{
												"body": {
													"nativeSrc": "6424:118:13",
													"nodeType": "YulBlock",
													"src": "6424:118:13",
													"statements": [
														{
															"nativeSrc": "6434:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6434:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6483:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6483:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6486:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6486:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6479:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6479:3:13"
																				},
																				"nativeSrc": "6479:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6479:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6498:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:13"
																				},
																				"nativeSrc": "6494:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6494:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6450:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "6450:28:13"
																		},
																		"nativeSrc": "6450:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6446:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:13"
																},
																"nativeSrc": "6446:56:13",
																"nodeType": "YulFunctionCall",
																"src": "6446:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6438:4:13",
																	"nodeType": "YulTypedName",
																	"src": "6438:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6511:25:13",
															"nodeType": "YulAssignment",
															"src": "6511:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6525:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6525:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6531:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6521:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:13"
																},
																"nativeSrc": "6521:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6521:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6373:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6401:4:13",
														"nodeType": "YulTypedName",
														"src": "6401:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6407:5:13",
														"nodeType": "YulTypedName",
														"src": "6407:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6417:6:13",
														"nodeType": "YulTypedName",
														"src": "6417:6:13",
														"type": ""
													}
												],
												"src": "6373:169:13"
											},
											{
												"body": {
													"nativeSrc": "6628:214:13",
													"nodeType": "YulBlock",
													"src": "6628:214:13",
													"statements": [
														{
															"nativeSrc": "6761:37:13",
															"nodeType": "YulAssignment",
															"src": "6761:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6788:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6788:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6794:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6769:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6769:18:13"
																},
																"nativeSrc": "6769:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6769:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:13"
																}
															]
														},
														{
															"nativeSrc": "6807:29:13",
															"nodeType": "YulAssignment",
															"src": "6807:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6818:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6818:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6828:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6828:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6831:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6831:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6824:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:13"
																		},
																		"nativeSrc": "6824:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6815:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6815:2:13"
																},
																"nativeSrc": "6815:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6815:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6807:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6547:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6609:4:13",
														"nodeType": "YulTypedName",
														"src": "6609:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6615:3:13",
														"nodeType": "YulTypedName",
														"src": "6615:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6623:4:13",
														"nodeType": "YulTypedName",
														"src": "6623:4:13",
														"type": ""
													}
												],
												"src": "6547:295:13"
											},
											{
												"body": {
													"nativeSrc": "6939:1303:13",
													"nodeType": "YulBlock",
													"src": "6939:1303:13",
													"statements": [
														{
															"nativeSrc": "6950:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6950:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6997:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6964:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6964:32:13"
																},
																"nativeSrc": "6964:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6964:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6954:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6954:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7086:22:13",
																"nodeType": "YulBlock",
																"src": "7086:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7088:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:13"
																			},
																			"nativeSrc": "7088:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:13"
																		},
																		"nativeSrc": "7088:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7058:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7058:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7066:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7066:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7055:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:13"
																},
																"nativeSrc": "7055:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7055:30:13"
															},
															"nativeSrc": "7052:56:13",
															"nodeType": "YulIf",
															"src": "7052:56:13"
														},
														{
															"nativeSrc": "7118:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7118:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7164:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7164:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7158:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "7158:5:13"
																		},
																		"nativeSrc": "7158:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7158:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7132:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "7132:25:13"
																},
																"nativeSrc": "7132:38:13",
																"nodeType": "YulFunctionCall",
																"src": "7132:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7122:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7122:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7263:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7263:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7269:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7277:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7217:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "7217:45:13"
																},
																"nativeSrc": "7217:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7217:67:13"
															},
															"nativeSrc": "7217:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7217:67:13"
														},
														{
															"nativeSrc": "7294:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7294:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7311:1:13",
																"nodeType": "YulLiteral",
																"src": "7311:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7298:9:13",
																	"nodeType": "YulTypedName",
																	"src": "7298:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7322:17:13",
															"nodeType": "YulAssignment",
															"src": "7322:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7335:4:13",
																"nodeType": "YulLiteral",
																"src": "7335:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7322:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "7322:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7386:611:13",
																		"nodeType": "YulBlock",
																		"src": "7386:611:13",
																		"statements": [
																			{
																				"nativeSrc": "7400:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7400:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7419:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7419:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7431:4:13",
																									"nodeType": "YulLiteral",
																									"src": "7431:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7427:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7427:3:13"
																							},
																							"nativeSrc": "7427:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7427:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7415:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7415:3:13"
																					},
																					"nativeSrc": "7415:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7415:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7404:7:13",
																						"nodeType": "YulTypedName",
																						"src": "7404:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7451:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7451:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7497:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7497:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7465:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "7465:31:13"
																					},
																					"nativeSrc": "7465:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7465:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7455:6:13",
																						"nodeType": "YulTypedName",
																						"src": "7455:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7515:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7515:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7524:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7524:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7519:1:13",
																						"nodeType": "YulTypedName",
																						"src": "7519:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7583:163:13",
																					"nodeType": "YulBlock",
																					"src": "7583:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7608:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7608:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7626:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "7626:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7631:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "7631:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7622:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7622:3:13"
																												},
																												"nativeSrc": "7622:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7622:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7616:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "7616:5:13"
																										},
																										"nativeSrc": "7616:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7616:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7601:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7601:6:13"
																								},
																								"nativeSrc": "7601:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7601:42:13"
																							},
																							"nativeSrc": "7601:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7601:42:13"
																						},
																						{
																							"nativeSrc": "7660:24:13",
																							"nodeType": "YulAssignment",
																							"src": "7660:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7674:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7674:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7682:1:13",
																										"nodeType": "YulLiteral",
																										"src": "7682:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7670:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7670:3:13"
																								},
																								"nativeSrc": "7670:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7670:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7660:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7660:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7701:31:13",
																							"nodeType": "YulAssignment",
																							"src": "7701:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7718:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "7718:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7729:2:13",
																										"nodeType": "YulLiteral",
																										"src": "7729:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7714:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7714:3:13"
																								},
																								"nativeSrc": "7714:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7714:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7701:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "7701:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7549:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "7549:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7552:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7552:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7546:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7546:2:13"
																					},
																					"nativeSrc": "7546:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7546:14:13"
																				},
																				"nativeSrc": "7538:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7561:21:13",
																					"nodeType": "YulBlock",
																					"src": "7561:21:13",
																					"statements": [
																						{
																							"nativeSrc": "7563:17:13",
																							"nodeType": "YulAssignment",
																							"src": "7563:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7572:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "7572:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7575:4:13",
																										"nodeType": "YulLiteral",
																										"src": "7575:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7568:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7568:3:13"
																								},
																								"nativeSrc": "7568:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7568:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7563:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "7563:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7542:3:13",
																					"nodeType": "YulBlock",
																					"src": "7542:3:13",
																					"statements": []
																				},
																				"src": "7538:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "7782:156:13",
																					"nodeType": "YulBlock",
																					"src": "7782:156:13",
																					"statements": [
																						{
																							"nativeSrc": "7800:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7800:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7827:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7827:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7832:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7832:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7823:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7823:3:13"
																										},
																										"nativeSrc": "7823:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7823:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7817:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7817:5:13"
																								},
																								"nativeSrc": "7817:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7817:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7804:9:13",
																									"nodeType": "YulTypedName",
																									"src": "7804:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7867:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7867:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7894:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7894:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7909:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "7909:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7917:4:13",
																														"nodeType": "YulLiteral",
																														"src": "7917:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7905:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7905:3:13"
																												},
																												"nativeSrc": "7905:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7905:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7875:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "7875:18:13"
																										},
																										"nativeSrc": "7875:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7875:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7860:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7860:6:13"
																								},
																								"nativeSrc": "7860:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7860:64:13"
																							},
																							"nativeSrc": "7860:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7860:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7765:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7765:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7774:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7774:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7762:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7762:2:13"
																					},
																					"nativeSrc": "7762:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7762:19:13"
																				},
																				"nativeSrc": "7759:179:13",
																				"nodeType": "YulIf",
																				"src": "7759:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7958:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7958:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7972:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "7972:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7980:1:13",
																											"nodeType": "YulLiteral",
																											"src": "7980:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7968:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7968:3:13"
																									},
																									"nativeSrc": "7968:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7968:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7984:1:13",
																									"nodeType": "YulLiteral",
																									"src": "7984:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7964:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7964:3:13"
																							},
																							"nativeSrc": "7964:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7964:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7951:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7951:6:13"
																					},
																					"nativeSrc": "7951:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7951:36:13"
																				},
																				"nativeSrc": "7951:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7951:36:13"
																			}
																		]
																	},
																	"nativeSrc": "7379:618:13",
																	"nodeType": "YulCase",
																	"src": "7379:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7384:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8014:222:13",
																		"nodeType": "YulBlock",
																		"src": "8014:222:13",
																		"statements": [
																			{
																				"nativeSrc": "8028:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8028:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8041:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8041:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8032:5:13",
																						"nodeType": "YulTypedName",
																						"src": "8032:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8065:67:13",
																					"nodeType": "YulBlock",
																					"src": "8065:67:13",
																					"statements": [
																						{
																							"nativeSrc": "8083:35:13",
																							"nodeType": "YulAssignment",
																							"src": "8083:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8102:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8102:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8107:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8107:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8098:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8098:3:13"
																										},
																										"nativeSrc": "8098:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8098:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8092:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8092:5:13"
																								},
																								"nativeSrc": "8092:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8092:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8083:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8083:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8058:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8058:6:13"
																				},
																				"nativeSrc": "8055:77:13",
																				"nodeType": "YulIf",
																				"src": "8055:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8152:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8211:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8211:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8218:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8218:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8158:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "8158:52:13"
																							},
																							"nativeSrc": "8158:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8158:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8145:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:13"
																					},
																					"nativeSrc": "8145:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8145:81:13"
																				},
																				"nativeSrc": "8145:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8145:81:13"
																			}
																		]
																	},
																	"nativeSrc": "8006:230:13",
																	"nodeType": "YulCase",
																	"src": "8006:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7359:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7356:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7356:2:13"
																},
																"nativeSrc": "7356:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7356:14:13"
															},
															"nativeSrc": "7349:887:13",
															"nodeType": "YulSwitch",
															"src": "7349:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6847:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6928:4:13",
														"nodeType": "YulTypedName",
														"src": "6928:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6934:3:13",
														"nodeType": "YulTypedName",
														"src": "6934:3:13",
														"type": ""
													}
												],
												"src": "6847:1395:13"
											},
											{
												"body": {
													"nativeSrc": "8344:73:13",
													"nodeType": "YulBlock",
													"src": "8344:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8361:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8361:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8366:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8366:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:13"
																},
																"nativeSrc": "8354:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8354:19:13"
															},
															"nativeSrc": "8354:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "8354:19:13"
														},
														{
															"nativeSrc": "8382:29:13",
															"nodeType": "YulAssignment",
															"src": "8382:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8401:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8401:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8406:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:13"
																},
																"nativeSrc": "8397:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8397:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8382:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "8382:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8248:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8316:3:13",
														"nodeType": "YulTypedName",
														"src": "8316:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8321:6:13",
														"nodeType": "YulTypedName",
														"src": "8321:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8332:11:13",
														"nodeType": "YulTypedName",
														"src": "8332:11:13",
														"type": ""
													}
												],
												"src": "8248:169:13"
											},
											{
												"body": {
													"nativeSrc": "8529:74:13",
													"nodeType": "YulBlock",
													"src": "8529:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8551:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8551:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8559:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8559:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8547:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8547:3:13"
																		},
																		"nativeSrc": "8547:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8547:14:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f20736574206261736520555249",
																		"kind": "string",
																		"nativeSrc": "8563:32:13",
																		"nodeType": "YulLiteral",
																		"src": "8563:32:13",
																		"type": "",
																		"value": "Not authorized to set base URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8540:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8540:6:13"
																},
																"nativeSrc": "8540:56:13",
																"nodeType": "YulFunctionCall",
																"src": "8540:56:13"
															},
															"nativeSrc": "8540:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "8540:56:13"
														}
													]
												},
												"name": "store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
												"nativeSrc": "8423:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8521:6:13",
														"nodeType": "YulTypedName",
														"src": "8521:6:13",
														"type": ""
													}
												],
												"src": "8423:180:13"
											},
											{
												"body": {
													"nativeSrc": "8755:220:13",
													"nodeType": "YulBlock",
													"src": "8755:220:13",
													"statements": [
														{
															"nativeSrc": "8765:74:13",
															"nodeType": "YulAssignment",
															"src": "8765:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8831:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8831:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8836:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8772:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8772:58:13"
																},
																"nativeSrc": "8772:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8772:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8765:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8765:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8937:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8937:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
																	"nativeSrc": "8848:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8848:88:13"
																},
																"nativeSrc": "8848:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8848:93:13"
															},
															"nativeSrc": "8848:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8848:93:13"
														},
														{
															"nativeSrc": "8950:19:13",
															"nodeType": "YulAssignment",
															"src": "8950:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8961:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8966:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8966:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8957:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:13"
																},
																"nativeSrc": "8957:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8957:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8950:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8950:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8609:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8743:3:13",
														"nodeType": "YulTypedName",
														"src": "8743:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8751:3:13",
														"nodeType": "YulTypedName",
														"src": "8751:3:13",
														"type": ""
													}
												],
												"src": "8609:366:13"
											},
											{
												"body": {
													"nativeSrc": "9152:248:13",
													"nodeType": "YulBlock",
													"src": "9152:248:13",
													"statements": [
														{
															"nativeSrc": "9162:26:13",
															"nodeType": "YulAssignment",
															"src": "9162:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9174:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9174:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9185:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9185:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:13"
																},
																"nativeSrc": "9170:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9170:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9162:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9209:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9209:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9220:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9205:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9205:3:13"
																		},
																		"nativeSrc": "9205:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9205:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9228:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9228:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9234:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9234:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9224:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9224:3:13"
																		},
																		"nativeSrc": "9224:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9198:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9198:6:13"
																},
																"nativeSrc": "9198:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9198:47:13"
															},
															"nativeSrc": "9198:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9198:47:13"
														},
														{
															"nativeSrc": "9254:139:13",
															"nodeType": "YulAssignment",
															"src": "9254:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9388:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9388:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9262:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9262:124:13"
																},
																"nativeSrc": "9262:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9262:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9254:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8981:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9132:9:13",
														"nodeType": "YulTypedName",
														"src": "9132:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9147:4:13",
														"nodeType": "YulTypedName",
														"src": "9147:4:13",
														"type": ""
													}
												],
												"src": "8981:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to set base URI\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002c5238038062002c5283398181016040528101906200003691906200034b565b6040518060400160405280600481526020017f584e4654000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f584e465400000000000000000000000000000000000000000000000000000000815250815f9081620000b29190620005d1565b508060019081620000c49190620005d1565b5050503360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000118816200011f60201b60201c565b5062000733565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a89062000713565b60405180910390fd5b8060079081620001c29190620005d1565b5050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200022782620001df565b810181811067ffffffffffffffff82111715620002495762000248620001ef565b5b80604052505050565b5f6200025d620001c6565b90506200026b82826200021c565b919050565b5f67ffffffffffffffff8211156200028d576200028c620001ef565b5b6200029882620001df565b9050602081019050919050565b5f5b83811015620002c4578082015181840152602081019050620002a7565b5f8484015250505050565b5f620002e5620002df8462000270565b62000252565b905082815260208101848484011115620003045762000303620001db565b5b62000311848285620002a5565b509392505050565b5f82601f83011262000330576200032f620001d7565b5b815162000342848260208601620002cf565b91505092915050565b5f60208284031215620003635762000362620001cf565b5b5f82015167ffffffffffffffff811115620003835762000382620001d3565b5b620003918482850162000319565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620003e957607f821691505b602082108103620003ff57620003fe620003a4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000426565b6200046f868362000426565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004b9620004b3620004ad8462000487565b62000490565b62000487565b9050919050565b5f819050919050565b620004d48362000499565b620004ec620004e382620004c0565b84845462000432565b825550505050565b5f90565b62000502620004f4565b6200050f818484620004c9565b505050565b5b8181101562000536576200052a5f82620004f8565b60018101905062000515565b5050565b601f82111562000585576200054f8162000405565b6200055a8462000417565b810160208510156200056a578190505b62000582620005798562000417565b83018262000514565b50505b505050565b5f82821c905092915050565b5f620005a75f19846008026200058a565b1980831691505092915050565b5f620005c1838362000596565b9150826002028217905092915050565b620005dc826200039a565b67ffffffffffffffff811115620005f857620005f7620001ef565b5b620006048254620003d1565b620006118282856200053a565b5f60209050601f83116001811462000647575f841562000632578287015190505b6200063e8582620005b4565b865550620006ad565b601f198416620006578662000405565b5f5b82811015620006805784890151825560018201915060208501945060208101905062000659565b86831015620006a057848901516200069c601f89168262000596565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a656420746f2073657420626173652055524900005f82015250565b5f620006fb601e83620006b5565b91506200070882620006c5565b602082019050919050565b5f6020820190508181035f8301526200072c81620006ed565b9050919050565b61251180620007415f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806355f804b311610095578063a22cb46511610064578063a22cb465146102a6578063b88d4fde146102c2578063c87b56dd146102de578063e985e9c51461030e576100fe565b806355f804b31461020c5780636352211e1461022857806370a082311461025857806395d89b4114610288576100fe565b806323b872dd116100d157806323b872dd1461019c57806340d097c3146101b857806342842e0e146101d457806354797b8f146101f0576100fe565b806301ffc9a71461010257806306fdde0314610132578063081812fc14610150578063095ea7b314610180575b5f80fd5b61011c600480360381019061011791906118f3565b61033e565b6040516101299190611938565b60405180910390f35b61013a61041f565b60405161014791906119db565b60405180910390f35b61016a60048036038101906101659190611a2e565b6104ae565b6040516101779190611a98565b60405180910390f35b61019a60048036038101906101959190611adb565b6104c9565b005b6101b660048036038101906101b19190611b19565b6104df565b005b6101d260048036038101906101cd9190611b69565b6105de565b005b6101ee60048036038101906101e99190611b19565b610692565b005b61020a60048036038101906102059190611b69565b6106b1565b005b61022660048036038101906102219190611cc0565b610783565b005b610242600480360381019061023d9190611a2e565b610825565b60405161024f9190611a98565b60405180910390f35b610272600480360381019061026d9190611b69565b610836565b60405161027f9190611d16565b60405180910390f35b6102906108ec565b60405161029d91906119db565b60405180910390f35b6102c060048036038101906102bb9190611d59565b61097c565b005b6102dc60048036038101906102d79190611e35565b610992565b005b6102f860048036038101906102f39190611a2e565b6109af565b60405161030591906119db565b60405180910390f35b61032860048036038101906103239190611eb5565b6109c1565b6040516103359190611938565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610418575061041782610a4f565b5b9050919050565b60605f805461042d90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611f20565b80156104a45780601f1061047b576101008083540402835291602001916104a4565b820191905f5260205f20905b81548152906001019060200180831161048757829003601f168201915b5050505050905090565b5f6104b882610ab8565b506104c282610b3e565b9050919050565b6104db82826104d6610b77565b610b7e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105469190611a98565b60405180910390fd5b5f610562838361055d610b77565b610b90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105cf93929190611f50565b60405180910390fd5b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066490611fcf565b60405180910390fd5b6106776006610d9b565b5f6106826006610daf565b905061068e8282610dbb565b5050565b6106ac83838360405180602001604052805f815250610992565b505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107379061205d565b60405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610809906120c5565b60405180910390fd5b80600790816108219190612280565b5050565b5f61082f82610ab8565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a7575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161089e9190611a98565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546108fb90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461092790611f20565b80156109725780601f1061094957610100808354040283529160200191610972565b820191905f5260205f20905b81548152906001019060200180831161095557829003601f168201915b5050505050905090565b61098e610987610b77565b8383610dd8565b5050565b61099d8484846104df565b6109a984848484610f41565b50505050565b60606109ba826110f3565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ac383611159565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b2c9190611d16565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b8b8383836001611192565b505050565b5f80610b9b84611159565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bdc57610bdb818486611351565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c6757610c1b5f855f80611192565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ce657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b610dd4828260405180602001604052805f815250611414565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e4857816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e3f9190611a98565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f349190611938565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156110ed578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f84610b77565b8685856040518563ffffffff1660e01b8152600401610fa694939291906123a1565b6020604051808303815f875af1925050508015610fe157506040513d601f19601f82011682018060405250810190610fde91906123ff565b60015b611062573d805f811461100f576040519150601f19603f3d011682016040523d82523d5f602084013e611014565b606091505b505f81510361105a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110519190611a98565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110eb57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110e29190611a98565b60405180910390fd5b505b50505050565b60606110fe82610ab8565b505f61110861142f565b90505f8151116111265760405180602001604052805f815250611151565b80611130846114bf565b604051602001611141929190612464565b6040516020818303038152906040525b915050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111ca57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112fc575f6111d984610ab8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561124357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611256575061125481846109c1565b155b1561129857826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161128f9190611a98565b60405180910390fd5b81156112fa57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61135c838383611589565b61140f575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113c79190611d16565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611406929190612487565b60405180910390fd5b505050565b61141e8383611649565b61142a5f848484610f41565b505050565b60606007805461143e90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461146a90611f20565b80156114b55780601f1061148c576101008083540402835291602001916114b5565b820191905f5260205f20905b81548152906001019060200180831161149857829003601f168201915b5050505050905090565b60605f60016114cd8461173c565b0190505f8167ffffffffffffffff8111156114eb576114ea611b9c565b5b6040519080825280601f01601f19166020018201604052801561151d5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561157e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611573576115726124ae565b5b0494505f850361152a575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561164057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611601575061160084846109c1565b5b8061163f57508273ffffffffffffffffffffffffffffffffffffffff1661162783610b3e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116b09190611a98565b60405180910390fd5b5f6116c583835f610b90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611737575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161172e9190611a98565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611798577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161178e5761178d6124ae565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117d5576d04ee2d6d415b85acef810000000083816117cb576117ca6124ae565b5b0492506020810190505b662386f26fc10000831061180457662386f26fc1000083816117fa576117f96124ae565b5b0492506010810190505b6305f5e100831061182d576305f5e1008381611823576118226124ae565b5b0492506008810190505b6127108310611852576127108381611848576118476124ae565b5b0492506004810190505b60648310611875576064838161186b5761186a6124ae565b5b0492506002810190505b600a8310611884576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118d28161189e565b81146118dc575f80fd5b50565b5f813590506118ed816118c9565b92915050565b5f6020828403121561190857611907611896565b5b5f611915848285016118df565b91505092915050565b5f8115159050919050565b6119328161191e565b82525050565b5f60208201905061194b5f830184611929565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561198857808201518184015260208101905061196d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6119ad82611951565b6119b7818561195b565b93506119c781856020860161196b565b6119d081611993565b840191505092915050565b5f6020820190508181035f8301526119f381846119a3565b905092915050565b5f819050919050565b611a0d816119fb565b8114611a17575f80fd5b50565b5f81359050611a2881611a04565b92915050565b5f60208284031215611a4357611a42611896565b5b5f611a5084828501611a1a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a8282611a59565b9050919050565b611a9281611a78565b82525050565b5f602082019050611aab5f830184611a89565b92915050565b611aba81611a78565b8114611ac4575f80fd5b50565b5f81359050611ad581611ab1565b92915050565b5f8060408385031215611af157611af0611896565b5b5f611afe85828601611ac7565b9250506020611b0f85828601611a1a565b9150509250929050565b5f805f60608486031215611b3057611b2f611896565b5b5f611b3d86828701611ac7565b9350506020611b4e86828701611ac7565b9250506040611b5f86828701611a1a565b9150509250925092565b5f60208284031215611b7e57611b7d611896565b5b5f611b8b84828501611ac7565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611bd282611993565b810181811067ffffffffffffffff82111715611bf157611bf0611b9c565b5b80604052505050565b5f611c0361188d565b9050611c0f8282611bc9565b919050565b5f67ffffffffffffffff821115611c2e57611c2d611b9c565b5b611c3782611993565b9050602081019050919050565b828183375f83830152505050565b5f611c64611c5f84611c14565b611bfa565b905082815260208101848484011115611c8057611c7f611b98565b5b611c8b848285611c44565b509392505050565b5f82601f830112611ca757611ca6611b94565b5b8135611cb7848260208601611c52565b91505092915050565b5f60208284031215611cd557611cd4611896565b5b5f82013567ffffffffffffffff811115611cf257611cf161189a565b5b611cfe84828501611c93565b91505092915050565b611d10816119fb565b82525050565b5f602082019050611d295f830184611d07565b92915050565b611d388161191e565b8114611d42575f80fd5b50565b5f81359050611d5381611d2f565b92915050565b5f8060408385031215611d6f57611d6e611896565b5b5f611d7c85828601611ac7565b9250506020611d8d85828601611d45565b9150509250929050565b5f67ffffffffffffffff821115611db157611db0611b9c565b5b611dba82611993565b9050602081019050919050565b5f611dd9611dd484611d97565b611bfa565b905082815260208101848484011115611df557611df4611b98565b5b611e00848285611c44565b509392505050565b5f82601f830112611e1c57611e1b611b94565b5b8135611e2c848260208601611dc7565b91505092915050565b5f805f8060808587031215611e4d57611e4c611896565b5b5f611e5a87828801611ac7565b9450506020611e6b87828801611ac7565b9350506040611e7c87828801611a1a565b925050606085013567ffffffffffffffff811115611e9d57611e9c61189a565b5b611ea987828801611e08565b91505092959194509250565b5f8060408385031215611ecb57611eca611896565b5b5f611ed885828601611ac7565b9250506020611ee985828601611ac7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f3757607f821691505b602082108103611f4a57611f49611ef3565b5b50919050565b5f606082019050611f635f830186611a89565b611f706020830185611d07565b611f7d6040830184611a89565b949350505050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f611fb960168361195b565b9150611fc482611f85565b602082019050919050565b5f6020820190508181035f830152611fe681611fad565b9050919050565b7f4e6f7420617574686f72697a656420746f206368616e676520617574686f72695f8201527f7479000000000000000000000000000000000000000000000000000000000000602082015250565b5f61204760228361195b565b915061205282611fed565b604082019050919050565b5f6020820190508181035f8301526120748161203b565b9050919050565b7f4e6f7420617574686f72697a656420746f2073657420626173652055524900005f82015250565b5f6120af601e8361195b565b91506120ba8261207b565b602082019050919050565b5f6020820190508181035f8301526120dc816120a3565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261213f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612104565b6121498683612104565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61218461217f61217a846119fb565b612161565b6119fb565b9050919050565b5f819050919050565b61219d8361216a565b6121b16121a98261218b565b848454612110565b825550505050565b5f90565b6121c56121b9565b6121d0818484612194565b505050565b5b818110156121f3576121e85f826121bd565b6001810190506121d6565b5050565b601f82111561223857612209816120e3565b612212846120f5565b81016020851015612221578190505b61223561222d856120f5565b8301826121d5565b50505b505050565b5f82821c905092915050565b5f6122585f198460080261223d565b1980831691505092915050565b5f6122708383612249565b9150826002028217905092915050565b61228982611951565b67ffffffffffffffff8111156122a2576122a1611b9c565b5b6122ac8254611f20565b6122b78282856121f7565b5f60209050601f8311600181146122e8575f84156122d6578287015190505b6122e08582612265565b865550612347565b601f1984166122f6866120e3565b5f5b8281101561231d578489015182556001820191506020850194506020810190506122f8565b8683101561233a5784890151612336601f891682612249565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6123738261234f565b61237d8185612359565b935061238d81856020860161196b565b61239681611993565b840191505092915050565b5f6080820190506123b45f830187611a89565b6123c16020830186611a89565b6123ce6040830185611d07565b81810360608301526123e08184612369565b905095945050505050565b5f815190506123f9816118c9565b92915050565b5f6020828403121561241457612413611896565b5b5f612421848285016123eb565b91505092915050565b5f81905092915050565b5f61243e82611951565b612448818561242a565b935061245881856020860161196b565b80840191505092915050565b5f61246f8285612434565b915061247b8284612434565b91508190509392505050565b5f60408201905061249a5f830185611a89565b6124a76020830184611d07565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220a644b78c6cabba2e00fdee45996d29bf12aa54fa47d921a2dbe016070655ac7764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C52 CODESIZE SUB DUP1 PUSH3 0x2C52 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x584E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x584E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x5D1 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC4 SWAP2 SWAP1 PUSH3 0x5D1 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x118 DUP2 PUSH3 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x733 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A8 SWAP1 PUSH3 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH3 0x1C2 SWAP2 SWAP1 PUSH3 0x5D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x227 DUP3 PUSH3 0x1DF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x249 JUMPI PUSH3 0x248 PUSH3 0x1EF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x25D PUSH3 0x1C6 JUMP JUMPDEST SWAP1 POP PUSH3 0x26B DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x28D JUMPI PUSH3 0x28C PUSH3 0x1EF JUMP JUMPDEST JUMPDEST PUSH3 0x298 DUP3 PUSH3 0x1DF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2C4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A7 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E5 PUSH3 0x2DF DUP5 PUSH3 0x270 JUMP JUMPDEST PUSH3 0x252 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x304 JUMPI PUSH3 0x303 PUSH3 0x1DB JUMP JUMPDEST JUMPDEST PUSH3 0x311 DUP5 DUP3 DUP6 PUSH3 0x2A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x330 JUMPI PUSH3 0x32F PUSH3 0x1D7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x342 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x363 JUMPI PUSH3 0x362 PUSH3 0x1CF JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x383 JUMPI PUSH3 0x382 PUSH3 0x1D3 JUMP JUMPDEST JUMPDEST PUSH3 0x391 DUP5 DUP3 DUP6 ADD PUSH3 0x319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3E9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3FF JUMPI PUSH3 0x3FE PUSH3 0x3A4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x463 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x426 JUMP JUMPDEST PUSH3 0x46F DUP7 DUP4 PUSH3 0x426 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4B9 PUSH3 0x4B3 PUSH3 0x4AD DUP5 PUSH3 0x487 JUMP JUMPDEST PUSH3 0x490 JUMP JUMPDEST PUSH3 0x487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4D4 DUP4 PUSH3 0x499 JUMP JUMPDEST PUSH3 0x4EC PUSH3 0x4E3 DUP3 PUSH3 0x4C0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x432 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x502 PUSH3 0x4F4 JUMP JUMPDEST PUSH3 0x50F DUP2 DUP5 DUP5 PUSH3 0x4C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x536 JUMPI PUSH3 0x52A PUSH0 DUP3 PUSH3 0x4F8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x515 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x585 JUMPI PUSH3 0x54F DUP2 PUSH3 0x405 JUMP JUMPDEST PUSH3 0x55A DUP5 PUSH3 0x417 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x56A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x582 PUSH3 0x579 DUP6 PUSH3 0x417 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x514 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5A7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x58A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5C1 DUP4 DUP4 PUSH3 0x596 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5DC DUP3 PUSH3 0x39A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5F8 JUMPI PUSH3 0x5F7 PUSH3 0x1EF JUMP JUMPDEST JUMPDEST PUSH3 0x604 DUP3 SLOAD PUSH3 0x3D1 JUMP JUMPDEST PUSH3 0x611 DUP3 DUP3 DUP6 PUSH3 0x53A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x647 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x632 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x63E DUP6 DUP3 PUSH3 0x5B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6AD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x657 DUP7 PUSH3 0x405 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x680 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x659 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6A0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x69C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x596 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F207365742062617365205552490000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x6FB PUSH1 0x1E DUP4 PUSH3 0x6B5 JUMP JUMPDEST SWAP2 POP PUSH3 0x708 DUP3 PUSH3 0x6C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x72C DUP2 PUSH3 0x6ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2511 DUP1 PUSH3 0x741 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x288 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x54797B8F EQ PUSH2 0x1F0 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x408 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x418 JUMPI POP PUSH2 0x417 DUP3 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4B8 DUP3 PUSH2 0xAB8 JUMP JUMPDEST POP PUSH2 0x4C2 DUP3 PUSH2 0xB3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DB DUP3 DUP3 PUSH2 0x4D6 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x562 DUP4 DUP4 PUSH2 0x55D PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x664 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 PUSH1 0x6 PUSH2 0xD9B JUMP JUMPDEST PUSH0 PUSH2 0x682 PUSH1 0x6 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP PUSH2 0x68E DUP3 DUP3 PUSH2 0xDBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6AC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x992 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x737 SWAP1 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x2280 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82F DUP3 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8FB SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x927 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x972 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x949 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x972 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x955 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98E PUSH2 0x987 PUSH2 0xB77 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99D DUP5 DUP5 DUP5 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x9A9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF41 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9BA DUP3 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAC3 DUP4 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB35 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1192 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB9B DUP5 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDC JUMPI PUSH2 0xBDB DUP2 DUP5 DUP7 PUSH2 0x1351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC67 JUMPI PUSH2 0xC1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1414 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE48 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x10ED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF84 PUSH2 0xB77 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFE1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1062 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x105A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10EB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10FE DUP3 PUSH2 0xAB8 JUMP JUMPDEST POP PUSH0 PUSH2 0x1108 PUSH2 0x142F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1151 JUMP JUMPDEST DUP1 PUSH2 0x1130 DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1141 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11CA JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12FC JUMPI PUSH0 PUSH2 0x11D9 DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1243 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH2 0x1254 DUP2 DUP5 PUSH2 0x9C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1298 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x12FA JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x135C DUP4 DUP4 DUP4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x140F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP3 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x141E DUP4 DUP4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x142A PUSH0 DUP5 DUP5 DUP5 PUSH2 0xF41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x143E SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x146A SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x148C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1498 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x14CD DUP5 PUSH2 0x173C JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x152A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1601 JUMPI POP PUSH2 0x1600 DUP5 DUP5 PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x163F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1627 DUP4 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B0 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x16C5 DUP4 DUP4 PUSH0 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1798 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x17D5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1804 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x182D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1823 JUMPI PUSH2 0x1822 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1852 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1875 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1884 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP2 EQ PUSH2 0x18DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18ED DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1915 DUP5 DUP3 DUP6 ADD PUSH2 0x18DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1932 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH0 DUP4 ADD DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1988 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AD DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x19B7 DUP2 DUP6 PUSH2 0x195B JUMP JUMPDEST SWAP4 POP PUSH2 0x19C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x1993 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F3 DUP2 DUP5 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A28 DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A50 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A82 DUP3 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A92 DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAB PUSH0 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD5 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFE DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B0F DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B30 JUMPI PUSH2 0x1B2F PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3D DUP7 DUP3 DUP8 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B4E DUP7 DUP3 DUP8 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B5F DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8B DUP5 DUP3 DUP6 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1BD2 DUP3 PUSH2 0x1993 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C03 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C0F DUP3 DUP3 PUSH2 0x1BC9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x1C37 DUP3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C64 PUSH2 0x1C5F DUP5 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8B DUP5 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CB7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x189A JUMP JUMPDEST JUMPDEST PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D10 DUP2 PUSH2 0x19FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D29 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D53 DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8D DUP6 DUP3 DUP7 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x1DBA DUP3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD9 PUSH2 0x1DD4 DUP5 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH2 0x1E00 DUP5 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1E4C PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E5A DUP8 DUP3 DUP9 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E6B DUP8 DUP3 DUP9 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E7C DUP8 DUP3 DUP9 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x189A JUMP JUMPDEST JUMPDEST PUSH2 0x1EA9 DUP8 DUP3 DUP9 ADD PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECB JUMPI PUSH2 0x1ECA PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED8 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F37 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F63 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x1F70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB9 PUSH1 0x16 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC4 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206368616E676520617574686F7269 PUSH0 DUP3 ADD MSTORE PUSH32 0x7479000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2047 PUSH1 0x22 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2052 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2074 DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F207365742062617365205552490000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF PUSH1 0x1E DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x20BA DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DC DUP2 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x213F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x2149 DUP7 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2184 PUSH2 0x217F PUSH2 0x217A DUP5 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x21B1 PUSH2 0x21A9 DUP3 PUSH2 0x218B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2110 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21C5 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x21D0 DUP2 DUP5 DUP5 PUSH2 0x2194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21F3 JUMPI PUSH2 0x21E8 PUSH0 DUP3 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2209 DUP2 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x2212 DUP5 PUSH2 0x20F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2221 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2235 PUSH2 0x222D DUP6 PUSH2 0x20F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x223D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2270 DUP4 DUP4 PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2289 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A2 JUMPI PUSH2 0x22A1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x22AC DUP3 SLOAD PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x22B7 DUP3 DUP3 DUP6 PUSH2 0x21F7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22E8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22D6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22E0 DUP6 DUP3 PUSH2 0x2265 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22F6 DUP7 PUSH2 0x20E3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x233A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2336 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2249 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2373 DUP3 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x237D DUP2 DUP6 PUSH2 0x2359 JUMP JUMPDEST SWAP4 POP PUSH2 0x238D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST PUSH2 0x2396 DUP2 PUSH2 0x1993 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23B4 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x23C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x23CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D07 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23E0 DUP2 DUP5 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23F9 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2414 JUMPI PUSH2 0x2413 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2421 DUP5 DUP3 DUP6 ADD PUSH2 0x23EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x243E DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x2448 DUP2 DUP6 PUSH2 0x242A JUMP JUMPDEST SWAP4 POP PUSH2 0x2458 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246F DUP3 DUP6 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x247B DUP3 DUP5 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x249A PUSH0 DUP4 ADD DUP6 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x24A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PREVRANDAO 0xB7 DUP13 PUSH13 0xABBA2E00FDEE45996D29BF12AA SLOAD STATICCALL SELFBALANCE 0xD9 0x21 LOG2 0xDB 0xE0 AND SMOD MOD SSTORE 0xAC PUSH24 0x64736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "170:1732:12:-:0;;;441:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;531:10:12::1;511:17;;:30;;;;;;;;;;;;;;;;;;604:21;615:9;604:10;;;:21;;:::i;:::-;441:191:::0;170:1732;;711:176;793:17;;;;;;;;;;;779:31;;:10;:31;;;771:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;873:7;855:15;:25;;;;;;:::i;:::-;;711:176;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;8248:169::-;8332:11;8366:6;8361:3;8354:19;8406:4;8401:3;8397:14;8382:29;;8248:169;;;;:::o;8423:180::-;8563:32;8559:1;8551:6;8547:14;8540:56;8423:180;:::o;8609:366::-;8751:3;8772:67;8836:2;8831:3;8772:67;:::i;:::-;8765:74;;8848:93;8937:3;8848:93;:::i;:::-;8966:2;8961:3;8957:12;8950:19;;8609:366;;;:::o;8981:419::-;9147:4;9185:2;9174:9;9170:18;9162:26;;9234:9;9228:4;9224:20;9220:1;9209:9;9205:17;9198:47;9262:131;9388:4;9262:131;:::i;:::-;9254:139;;8981:419;;;:::o;170:1732:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 4498,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 2942,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2925": {
									"entryPoint": 5167,
									"id": 2925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 4945,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 3905,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_523": {
									"entryPoint": 2878,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 5513,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 5705,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": 2935,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 4441,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 2744,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_767": {
									"entryPoint": 3515,
									"id": 767,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_793": {
									"entryPoint": 5140,
									"id": 793,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 3544,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 2960,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 1225,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 2102,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1356": {
									"entryPoint": 3503,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_374": {
									"entryPoint": 1198,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1370": {
									"entryPoint": 3483,
									"id": 1370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_407": {
									"entryPoint": 2497,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2577": {
									"entryPoint": 5948,
									"id": 2577,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_287": {
									"entryPoint": 1055,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 2085,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_2955": {
									"entryPoint": 1502,
									"id": 2955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1682,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 2450,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 2428,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_2916": {
									"entryPoint": 1923,
									"id": 2916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1690": {
									"entryPoint": 2639,
									"id": 1690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 830,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 2284,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1480": {
									"entryPoint": 5311,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2970": {
									"entryPoint": 2479,
									"id": 2970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 4339,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1247,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferMintingAuthority_2988": {
									"entryPoint": 1713,
									"id": 2988,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4": {
									"entryPoint": 8315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23691:13",
										"nodeType": "YulBlock",
										"src": "0:23691:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:184:13",
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nativeSrc": "1870:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:13",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:13",
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nativeSrc": "1960:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nativeSrc": "1979:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nativeSrc": "1973:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nativeSrc": "1953:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nativeSrc": "1953:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nativeSrc": "1897:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nativeSrc": "1889:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:13",
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nativeSrc": "1913:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nativeSrc": "1918:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:13",
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nativeSrc": "2018:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nativeSrc": "2011:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nativeSrc": "2011:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nativeSrc": "2098:54:13",
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nativeSrc": "2108:38:13",
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nativeSrc": "2122:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nativeSrc": "2138:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nativeSrc": "2118:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:13",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:13",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nativeSrc": "2250:285:13",
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nativeSrc": "2260:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nativeSrc": "2274:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:13",
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nativeSrc": "2329:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nativeSrc": "2444:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nativeSrc": "2409:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nativeSrc": "2409:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nativeSrc": "2483:46:13",
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nativeSrc": "2499:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nativeSrc": "2490:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:13",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:13",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:13",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nativeSrc": "2659:195:13",
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nativeSrc": "2669:26:13",
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nativeSrc": "2677:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nativeSrc": "2712:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nativeSrc": "2705:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nativeSrc": "2705:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nativeSrc": "2761:86:13",
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nativeSrc": "2769:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:13",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:13",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:13",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nativeSrc": "2905:32:13",
													"nodeType": "YulBlock",
													"src": "2905:32:13",
													"statements": [
														{
															"nativeSrc": "2915:16:13",
															"nodeType": "YulAssignment",
															"src": "2915:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:13",
																"nodeType": "YulIdentifier",
																"src": "2926:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:13",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:13",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:77:13"
											},
											{
												"body": {
													"nativeSrc": "2986:79:13",
													"nodeType": "YulBlock",
													"src": "2986:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:13",
																"nodeType": "YulBlock",
																"src": "3043:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:13"
																			},
																			"nativeSrc": "3045:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:13"
																		},
																		"nativeSrc": "3045:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:13"
																				},
																				"nativeSrc": "3016:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:13"
																		},
																		"nativeSrc": "3006:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:13"
																},
																"nativeSrc": "2999:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:13"
															},
															"nativeSrc": "2996:63:13",
															"nodeType": "YulIf",
															"src": "2996:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:13",
														"nodeType": "YulTypedName",
														"src": "2979:5:13",
														"type": ""
													}
												],
												"src": "2943:122:13"
											},
											{
												"body": {
													"nativeSrc": "3123:87:13",
													"nodeType": "YulBlock",
													"src": "3123:87:13",
													"statements": [
														{
															"nativeSrc": "3133:29:13",
															"nodeType": "YulAssignment",
															"src": "3133:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:13"
																},
																"nativeSrc": "3142:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:13"
																},
																"nativeSrc": "3171:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:13"
															},
															"nativeSrc": "3171:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:13",
														"nodeType": "YulTypedName",
														"src": "3101:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:13",
														"nodeType": "YulTypedName",
														"src": "3109:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:13",
														"nodeType": "YulTypedName",
														"src": "3117:5:13",
														"type": ""
													}
												],
												"src": "3071:139:13"
											},
											{
												"body": {
													"nativeSrc": "3282:263:13",
													"nodeType": "YulBlock",
													"src": "3282:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:13",
																"nodeType": "YulBlock",
																"src": "3328:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:13"
																			},
																			"nativeSrc": "3330:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:13"
																		},
																		"nativeSrc": "3330:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:13"
																		},
																		"nativeSrc": "3299:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:13"
																},
																"nativeSrc": "3295:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:13"
															},
															"nativeSrc": "3292:119:13",
															"nodeType": "YulIf",
															"src": "3292:119:13"
														},
														{
															"nativeSrc": "3421:117:13",
															"nodeType": "YulBlock",
															"src": "3421:117:13",
															"statements": [
																{
																	"nativeSrc": "3436:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:13"
																				},
																				"nativeSrc": "3496:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:13"
																		},
																		"nativeSrc": "3475:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:13",
														"nodeType": "YulTypedName",
														"src": "3252:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:13",
														"nodeType": "YulTypedName",
														"src": "3263:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:13",
														"nodeType": "YulTypedName",
														"src": "3275:6:13",
														"type": ""
													}
												],
												"src": "3216:329:13"
											},
											{
												"body": {
													"nativeSrc": "3596:81:13",
													"nodeType": "YulBlock",
													"src": "3596:81:13",
													"statements": [
														{
															"nativeSrc": "3606:65:13",
															"nodeType": "YulAssignment",
															"src": "3606:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:13"
																},
																"nativeSrc": "3617:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:13",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:13",
														"nodeType": "YulTypedName",
														"src": "3588:7:13",
														"type": ""
													}
												],
												"src": "3551:126:13"
											},
											{
												"body": {
													"nativeSrc": "3728:51:13",
													"nodeType": "YulBlock",
													"src": "3728:51:13",
													"statements": [
														{
															"nativeSrc": "3738:35:13",
															"nodeType": "YulAssignment",
															"src": "3738:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:13"
																},
																"nativeSrc": "3749:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:13",
														"nodeType": "YulTypedName",
														"src": "3710:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:13",
														"nodeType": "YulTypedName",
														"src": "3720:7:13",
														"type": ""
													}
												],
												"src": "3683:96:13"
											},
											{
												"body": {
													"nativeSrc": "3850:53:13",
													"nodeType": "YulBlock",
													"src": "3850:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:13"
																		},
																		"nativeSrc": "3872:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:13"
																},
																"nativeSrc": "3860:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:13"
															},
															"nativeSrc": "3860:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:13",
														"nodeType": "YulTypedName",
														"src": "3838:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:13",
														"nodeType": "YulTypedName",
														"src": "3845:3:13",
														"type": ""
													}
												],
												"src": "3785:118:13"
											},
											{
												"body": {
													"nativeSrc": "4007:124:13",
													"nodeType": "YulBlock",
													"src": "4007:124:13",
													"statements": [
														{
															"nativeSrc": "4017:26:13",
															"nodeType": "YulAssignment",
															"src": "4017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:13"
																},
																"nativeSrc": "4025:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:13"
																		},
																		"nativeSrc": "4106:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:13"
																},
																"nativeSrc": "4053:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:13"
															},
															"nativeSrc": "4053:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:13",
														"nodeType": "YulTypedName",
														"src": "3979:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:13",
														"nodeType": "YulTypedName",
														"src": "3991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:13",
														"nodeType": "YulTypedName",
														"src": "4002:4:13",
														"type": ""
													}
												],
												"src": "3909:222:13"
											},
											{
												"body": {
													"nativeSrc": "4180:79:13",
													"nodeType": "YulBlock",
													"src": "4180:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:13",
																"nodeType": "YulBlock",
																"src": "4237:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:13"
																			},
																			"nativeSrc": "4239:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:13"
																		},
																		"nativeSrc": "4239:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:13"
																				},
																				"nativeSrc": "4210:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:13"
																		},
																		"nativeSrc": "4200:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:13"
																},
																"nativeSrc": "4193:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:13"
															},
															"nativeSrc": "4190:63:13",
															"nodeType": "YulIf",
															"src": "4190:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:13",
														"nodeType": "YulTypedName",
														"src": "4173:5:13",
														"type": ""
													}
												],
												"src": "4137:122:13"
											},
											{
												"body": {
													"nativeSrc": "4317:87:13",
													"nodeType": "YulBlock",
													"src": "4317:87:13",
													"statements": [
														{
															"nativeSrc": "4327:29:13",
															"nodeType": "YulAssignment",
															"src": "4327:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:13"
																},
																"nativeSrc": "4336:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:13"
																},
																"nativeSrc": "4365:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:13"
															},
															"nativeSrc": "4365:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:13",
														"nodeType": "YulTypedName",
														"src": "4295:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:13",
														"nodeType": "YulTypedName",
														"src": "4303:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:13",
														"nodeType": "YulTypedName",
														"src": "4311:5:13",
														"type": ""
													}
												],
												"src": "4265:139:13"
											},
											{
												"body": {
													"nativeSrc": "4493:391:13",
													"nodeType": "YulBlock",
													"src": "4493:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:13",
																"nodeType": "YulBlock",
																"src": "4539:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:13"
																			},
																			"nativeSrc": "4541:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:13"
																		},
																		"nativeSrc": "4541:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:13"
																		},
																		"nativeSrc": "4510:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:13"
																},
																"nativeSrc": "4506:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:13"
															},
															"nativeSrc": "4503:119:13",
															"nodeType": "YulIf",
															"src": "4503:119:13"
														},
														{
															"nativeSrc": "4632:117:13",
															"nodeType": "YulBlock",
															"src": "4632:117:13",
															"statements": [
																{
																	"nativeSrc": "4647:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:13"
																				},
																				"nativeSrc": "4707:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:13"
																		},
																		"nativeSrc": "4686:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:13",
															"nodeType": "YulBlock",
															"src": "4759:118:13",
															"statements": [
																{
																	"nativeSrc": "4774:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:13"
																				},
																				"nativeSrc": "4835:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:13"
																		},
																		"nativeSrc": "4814:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:13",
														"nodeType": "YulTypedName",
														"src": "4455:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:13",
														"nodeType": "YulTypedName",
														"src": "4466:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:13",
														"nodeType": "YulTypedName",
														"src": "4478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:13",
														"nodeType": "YulTypedName",
														"src": "4486:6:13",
														"type": ""
													}
												],
												"src": "4410:474:13"
											},
											{
												"body": {
													"nativeSrc": "4990:519:13",
													"nodeType": "YulBlock",
													"src": "4990:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:13",
																"nodeType": "YulBlock",
																"src": "5036:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:13"
																			},
																			"nativeSrc": "5038:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:13"
																		},
																		"nativeSrc": "5038:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:13"
																		},
																		"nativeSrc": "5007:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:13"
																},
																"nativeSrc": "5003:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:13"
															},
															"nativeSrc": "5000:119:13",
															"nodeType": "YulIf",
															"src": "5000:119:13"
														},
														{
															"nativeSrc": "5129:117:13",
															"nodeType": "YulBlock",
															"src": "5129:117:13",
															"statements": [
																{
																	"nativeSrc": "5144:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:13"
																				},
																				"nativeSrc": "5204:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:13"
																		},
																		"nativeSrc": "5183:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:13",
															"nodeType": "YulBlock",
															"src": "5256:118:13",
															"statements": [
																{
																	"nativeSrc": "5271:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:13"
																				},
																				"nativeSrc": "5332:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:13"
																		},
																		"nativeSrc": "5311:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:13",
															"nodeType": "YulBlock",
															"src": "5384:118:13",
															"statements": [
																{
																	"nativeSrc": "5399:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:13"
																				},
																				"nativeSrc": "5460:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:13"
																		},
																		"nativeSrc": "5439:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:13",
														"nodeType": "YulTypedName",
														"src": "4944:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:13",
														"nodeType": "YulTypedName",
														"src": "4955:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:13",
														"nodeType": "YulTypedName",
														"src": "4967:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:13",
														"nodeType": "YulTypedName",
														"src": "4975:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:13",
														"nodeType": "YulTypedName",
														"src": "4983:6:13",
														"type": ""
													}
												],
												"src": "4890:619:13"
											},
											{
												"body": {
													"nativeSrc": "5581:263:13",
													"nodeType": "YulBlock",
													"src": "5581:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:13",
																"nodeType": "YulBlock",
																"src": "5627:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:13"
																			},
																			"nativeSrc": "5629:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:13"
																		},
																		"nativeSrc": "5629:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:13"
																		},
																		"nativeSrc": "5598:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:13"
																},
																"nativeSrc": "5594:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:13"
															},
															"nativeSrc": "5591:119:13",
															"nodeType": "YulIf",
															"src": "5591:119:13"
														},
														{
															"nativeSrc": "5720:117:13",
															"nodeType": "YulBlock",
															"src": "5720:117:13",
															"statements": [
																{
																	"nativeSrc": "5735:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:13"
																				},
																				"nativeSrc": "5795:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:13"
																		},
																		"nativeSrc": "5774:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:13",
														"nodeType": "YulTypedName",
														"src": "5551:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:13",
														"nodeType": "YulTypedName",
														"src": "5562:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:13",
														"nodeType": "YulTypedName",
														"src": "5574:6:13",
														"type": ""
													}
												],
												"src": "5515:329:13"
											},
											{
												"body": {
													"nativeSrc": "5939:28:13",
													"nodeType": "YulBlock",
													"src": "5939:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5956:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5956:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5959:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5959:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5949:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:13"
																},
																"nativeSrc": "5949:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5949:12:13"
															},
															"nativeSrc": "5949:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5949:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5850:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5850:117:13"
											},
											{
												"body": {
													"nativeSrc": "6062:28:13",
													"nodeType": "YulBlock",
													"src": "6062:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:13"
																},
																"nativeSrc": "6072:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6072:12:13"
															},
															"nativeSrc": "6072:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6072:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5973:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5973:117:13"
											},
											{
												"body": {
													"nativeSrc": "6124:152:13",
													"nodeType": "YulBlock",
													"src": "6124:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6141:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6141:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6144:77:13",
																		"nodeType": "YulLiteral",
																		"src": "6144:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6134:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:13"
																},
																"nativeSrc": "6134:88:13",
																"nodeType": "YulFunctionCall",
																"src": "6134:88:13"
															},
															"nativeSrc": "6134:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "6134:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6238:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6238:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6241:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:13"
																},
																"nativeSrc": "6231:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6231:15:13"
															},
															"nativeSrc": "6231:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6231:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6262:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6262:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6265:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6255:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:13"
																},
																"nativeSrc": "6255:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6255:15:13"
															},
															"nativeSrc": "6255:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6255:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6096:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6096:180:13"
											},
											{
												"body": {
													"nativeSrc": "6325:238:13",
													"nodeType": "YulBlock",
													"src": "6325:238:13",
													"statements": [
														{
															"nativeSrc": "6335:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6335:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6357:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6357:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6387:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6387:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6365:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "6365:21:13"
																		},
																		"nativeSrc": "6365:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6365:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6353:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:13"
																},
																"nativeSrc": "6353:40:13",
																"nodeType": "YulFunctionCall",
																"src": "6353:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6339:10:13",
																	"nodeType": "YulTypedName",
																	"src": "6339:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6504:22:13",
																"nodeType": "YulBlock",
																"src": "6504:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6506:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6506:16:13"
																			},
																			"nativeSrc": "6506:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6506:18:13"
																		},
																		"nativeSrc": "6506:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6506:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6447:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "6447:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:18:13",
																				"nodeType": "YulLiteral",
																				"src": "6459:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6444:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6444:2:13"
																		},
																		"nativeSrc": "6444:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6483:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "6483:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6495:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6480:2:13"
																		},
																		"nativeSrc": "6480:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6480:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6441:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6441:2:13"
																},
																"nativeSrc": "6441:62:13",
																"nodeType": "YulFunctionCall",
																"src": "6441:62:13"
															},
															"nativeSrc": "6438:88:13",
															"nodeType": "YulIf",
															"src": "6438:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6542:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6542:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6546:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "6546:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6535:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:13"
																},
																"nativeSrc": "6535:22:13",
																"nodeType": "YulFunctionCall",
																"src": "6535:22:13"
															},
															"nativeSrc": "6535:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "6535:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6282:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6311:6:13",
														"nodeType": "YulTypedName",
														"src": "6311:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6319:4:13",
														"nodeType": "YulTypedName",
														"src": "6319:4:13",
														"type": ""
													}
												],
												"src": "6282:281:13"
											},
											{
												"body": {
													"nativeSrc": "6610:88:13",
													"nodeType": "YulBlock",
													"src": "6610:88:13",
													"statements": [
														{
															"nativeSrc": "6620:30:13",
															"nodeType": "YulAssignment",
															"src": "6620:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6630:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6630:18:13"
																},
																"nativeSrc": "6630:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6630:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6679:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6679:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6687:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6687:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6659:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "6659:19:13"
																},
																"nativeSrc": "6659:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6659:33:13"
															},
															"nativeSrc": "6659:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6659:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6569:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6594:4:13",
														"nodeType": "YulTypedName",
														"src": "6594:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6603:6:13",
														"nodeType": "YulTypedName",
														"src": "6603:6:13",
														"type": ""
													}
												],
												"src": "6569:129:13"
											},
											{
												"body": {
													"nativeSrc": "6771:241:13",
													"nodeType": "YulBlock",
													"src": "6771:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6876:22:13",
																"nodeType": "YulBlock",
																"src": "6876:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6878:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6878:16:13"
																			},
																			"nativeSrc": "6878:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6878:18:13"
																		},
																		"nativeSrc": "6878:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6878:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6848:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6856:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6856:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6845:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6845:2:13"
																},
																"nativeSrc": "6845:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6845:30:13"
															},
															"nativeSrc": "6842:56:13",
															"nodeType": "YulIf",
															"src": "6842:56:13"
														},
														{
															"nativeSrc": "6908:37:13",
															"nodeType": "YulAssignment",
															"src": "6908:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6938:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6916:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "6916:21:13"
																},
																"nativeSrc": "6916:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6916:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6908:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6908:4:13"
																}
															]
														},
														{
															"nativeSrc": "6982:23:13",
															"nodeType": "YulAssignment",
															"src": "6982:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6994:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6994:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7000:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6990:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:13"
																},
																"nativeSrc": "6990:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6990:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6982:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6704:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6755:6:13",
														"nodeType": "YulTypedName",
														"src": "6755:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6766:4:13",
														"nodeType": "YulTypedName",
														"src": "6766:4:13",
														"type": ""
													}
												],
												"src": "6704:308:13"
											},
											{
												"body": {
													"nativeSrc": "7082:82:13",
													"nodeType": "YulBlock",
													"src": "7082:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7105:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7105:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7110:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7110:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7115:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7115:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7092:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7092:12:13"
																},
																"nativeSrc": "7092:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7092:30:13"
															},
															"nativeSrc": "7092:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7092:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7142:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7142:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7147:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7147:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7138:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7138:3:13"
																		},
																		"nativeSrc": "7138:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7156:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7156:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7131:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:13"
																},
																"nativeSrc": "7131:27:13",
																"nodeType": "YulFunctionCall",
																"src": "7131:27:13"
															},
															"nativeSrc": "7131:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "7131:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7018:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7064:3:13",
														"nodeType": "YulTypedName",
														"src": "7064:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7069:3:13",
														"nodeType": "YulTypedName",
														"src": "7069:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7074:6:13",
														"nodeType": "YulTypedName",
														"src": "7074:6:13",
														"type": ""
													}
												],
												"src": "7018:146:13"
											},
											{
												"body": {
													"nativeSrc": "7254:341:13",
													"nodeType": "YulBlock",
													"src": "7254:341:13",
													"statements": [
														{
															"nativeSrc": "7264:75:13",
															"nodeType": "YulAssignment",
															"src": "7264:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7331:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7331:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7289:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "7289:41:13"
																		},
																		"nativeSrc": "7289:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7273:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "7273:15:13"
																},
																"nativeSrc": "7273:66:13",
																"nodeType": "YulFunctionCall",
																"src": "7273:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7264:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7264:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7355:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7355:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7362:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7362:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7348:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:13"
																},
																"nativeSrc": "7348:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7348:21:13"
															},
															"nativeSrc": "7348:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7348:21:13"
														},
														{
															"nativeSrc": "7378:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7393:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7393:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7400:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7389:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7389:3:13"
																},
																"nativeSrc": "7389:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7389:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7382:3:13",
																	"nodeType": "YulTypedName",
																	"src": "7382:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7443:83:13",
																"nodeType": "YulBlock",
																"src": "7443:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7445:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7445:77:13"
																			},
																			"nativeSrc": "7445:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7445:79:13"
																		},
																		"nativeSrc": "7445:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7445:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7424:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7424:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7429:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7429:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7420:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:13"
																		},
																		"nativeSrc": "7420:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7420:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7438:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7417:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7417:2:13"
																},
																"nativeSrc": "7417:25:13",
																"nodeType": "YulFunctionCall",
																"src": "7417:25:13"
															},
															"nativeSrc": "7414:112:13",
															"nodeType": "YulIf",
															"src": "7414:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7572:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7577:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7577:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7582:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7582:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7535:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "7535:36:13"
																},
																"nativeSrc": "7535:54:13",
																"nodeType": "YulFunctionCall",
																"src": "7535:54:13"
															},
															"nativeSrc": "7535:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "7535:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7170:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7227:3:13",
														"nodeType": "YulTypedName",
														"src": "7227:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7232:6:13",
														"nodeType": "YulTypedName",
														"src": "7232:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7240:3:13",
														"nodeType": "YulTypedName",
														"src": "7240:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7248:5:13",
														"nodeType": "YulTypedName",
														"src": "7248:5:13",
														"type": ""
													}
												],
												"src": "7170:425:13"
											},
											{
												"body": {
													"nativeSrc": "7677:278:13",
													"nodeType": "YulBlock",
													"src": "7677:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7726:83:13",
																"nodeType": "YulBlock",
																"src": "7726:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7728:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7728:77:13"
																			},
																			"nativeSrc": "7728:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7728:79:13"
																		},
																		"nativeSrc": "7728:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7705:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7705:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7713:4:13",
																						"nodeType": "YulLiteral",
																						"src": "7713:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7701:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:13"
																				},
																				"nativeSrc": "7701:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7701:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7720:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7697:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:13"
																		},
																		"nativeSrc": "7697:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7697:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7690:6:13"
																},
																"nativeSrc": "7690:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7690:35:13"
															},
															"nativeSrc": "7687:122:13",
															"nodeType": "YulIf",
															"src": "7687:122:13"
														},
														{
															"nativeSrc": "7818:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7818:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7845:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7845:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7832:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7832:12:13"
																},
																"nativeSrc": "7832:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7832:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7822:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7822:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7861:88:13",
															"nodeType": "YulAssignment",
															"src": "7861:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7922:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7922:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7930:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7930:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:13"
																		},
																		"nativeSrc": "7918:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7937:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7937:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7945:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7870:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "7870:47:13"
																},
																"nativeSrc": "7870:79:13",
																"nodeType": "YulFunctionCall",
																"src": "7870:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7861:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7861:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7615:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7655:6:13",
														"nodeType": "YulTypedName",
														"src": "7655:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7663:3:13",
														"nodeType": "YulTypedName",
														"src": "7663:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7671:5:13",
														"nodeType": "YulTypedName",
														"src": "7671:5:13",
														"type": ""
													}
												],
												"src": "7615:340:13"
											},
											{
												"body": {
													"nativeSrc": "8037:433:13",
													"nodeType": "YulBlock",
													"src": "8037:433:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8083:83:13",
																"nodeType": "YulBlock",
																"src": "8083:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8085:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8085:77:13"
																			},
																			"nativeSrc": "8085:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8085:79:13"
																		},
																		"nativeSrc": "8085:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8085:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8058:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8058:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8067:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8067:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:13"
																		},
																		"nativeSrc": "8054:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8054:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8079:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8079:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8050:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:13"
																},
																"nativeSrc": "8050:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8050:32:13"
															},
															"nativeSrc": "8047:119:13",
															"nodeType": "YulIf",
															"src": "8047:119:13"
														},
														{
															"nativeSrc": "8176:287:13",
															"nodeType": "YulBlock",
															"src": "8176:287:13",
															"statements": [
																{
																	"nativeSrc": "8191:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8191:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8222:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8222:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8233:1:13",
																						"nodeType": "YulLiteral",
																						"src": "8233:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8218:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8218:3:13"
																				},
																				"nativeSrc": "8218:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8218:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8205:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "8205:12:13"
																		},
																		"nativeSrc": "8205:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8195:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8195:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8283:83:13",
																		"nodeType": "YulBlock",
																		"src": "8283:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8285:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "8285:77:13"
																					},
																					"nativeSrc": "8285:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8285:79:13"
																				},
																				"nativeSrc": "8285:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8285:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8255:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8255:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8263:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8263:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8252:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8252:2:13"
																		},
																		"nativeSrc": "8252:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8252:30:13"
																	},
																	"nativeSrc": "8249:117:13",
																	"nodeType": "YulIf",
																	"src": "8249:117:13"
																},
																{
																	"nativeSrc": "8380:73:13",
																	"nodeType": "YulAssignment",
																	"src": "8380:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8425:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8425:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8436:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8436:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8421:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8421:3:13"
																				},
																				"nativeSrc": "8421:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8421:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8445:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8445:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8390:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "8390:30:13"
																		},
																		"nativeSrc": "8390:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8380:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8380:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7961:509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8007:9:13",
														"nodeType": "YulTypedName",
														"src": "8007:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8018:7:13",
														"nodeType": "YulTypedName",
														"src": "8018:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8030:6:13",
														"nodeType": "YulTypedName",
														"src": "8030:6:13",
														"type": ""
													}
												],
												"src": "7961:509:13"
											},
											{
												"body": {
													"nativeSrc": "8541:53:13",
													"nodeType": "YulBlock",
													"src": "8541:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8558:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8558:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8581:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8581:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8563:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "8563:17:13"
																		},
																		"nativeSrc": "8563:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8563:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8551:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:13"
																},
																"nativeSrc": "8551:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8551:37:13"
															},
															"nativeSrc": "8551:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "8551:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8476:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8529:5:13",
														"nodeType": "YulTypedName",
														"src": "8529:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8536:3:13",
														"nodeType": "YulTypedName",
														"src": "8536:3:13",
														"type": ""
													}
												],
												"src": "8476:118:13"
											},
											{
												"body": {
													"nativeSrc": "8698:124:13",
													"nodeType": "YulBlock",
													"src": "8698:124:13",
													"statements": [
														{
															"nativeSrc": "8708:26:13",
															"nodeType": "YulAssignment",
															"src": "8708:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8720:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8731:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:13"
																},
																"nativeSrc": "8716:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8716:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8788:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8788:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8812:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:13"
																		},
																		"nativeSrc": "8797:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8744:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8744:43:13"
																},
																"nativeSrc": "8744:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8744:71:13"
															},
															"nativeSrc": "8744:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8744:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8600:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8670:9:13",
														"nodeType": "YulTypedName",
														"src": "8670:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8682:6:13",
														"nodeType": "YulTypedName",
														"src": "8682:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8693:4:13",
														"nodeType": "YulTypedName",
														"src": "8693:4:13",
														"type": ""
													}
												],
												"src": "8600:222:13"
											},
											{
												"body": {
													"nativeSrc": "8868:76:13",
													"nodeType": "YulBlock",
													"src": "8868:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8922:16:13",
																"nodeType": "YulBlock",
																"src": "8922:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8931:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8931:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8934:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8934:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8924:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8924:6:13"
																			},
																			"nativeSrc": "8924:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8924:12:13"
																		},
																		"nativeSrc": "8924:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8891:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8891:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8913:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8913:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8898:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8898:14:13"
																				},
																				"nativeSrc": "8898:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8898:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8888:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8888:2:13"
																		},
																		"nativeSrc": "8888:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8881:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:13"
																},
																"nativeSrc": "8881:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8881:40:13"
															},
															"nativeSrc": "8878:60:13",
															"nodeType": "YulIf",
															"src": "8878:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8828:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8861:5:13",
														"nodeType": "YulTypedName",
														"src": "8861:5:13",
														"type": ""
													}
												],
												"src": "8828:116:13"
											},
											{
												"body": {
													"nativeSrc": "8999:84:13",
													"nodeType": "YulBlock",
													"src": "8999:84:13",
													"statements": [
														{
															"nativeSrc": "9009:29:13",
															"nodeType": "YulAssignment",
															"src": "9009:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9031:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9031:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9018:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9018:12:13"
																},
																"nativeSrc": "9018:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9018:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9009:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9009:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9071:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9071:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9047:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "9047:23:13"
																},
																"nativeSrc": "9047:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9047:30:13"
															},
															"nativeSrc": "9047:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9047:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8950:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8977:6:13",
														"nodeType": "YulTypedName",
														"src": "8977:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8985:3:13",
														"nodeType": "YulTypedName",
														"src": "8985:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8993:5:13",
														"nodeType": "YulTypedName",
														"src": "8993:5:13",
														"type": ""
													}
												],
												"src": "8950:133:13"
											},
											{
												"body": {
													"nativeSrc": "9169:388:13",
													"nodeType": "YulBlock",
													"src": "9169:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:13",
																"nodeType": "YulBlock",
																"src": "9215:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:13"
																			},
																			"nativeSrc": "9217:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:13"
																		},
																		"nativeSrc": "9217:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9190:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9190:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9199:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9186:3:13"
																		},
																		"nativeSrc": "9186:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9186:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9211:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9182:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9182:3:13"
																},
																"nativeSrc": "9182:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9182:32:13"
															},
															"nativeSrc": "9179:119:13",
															"nodeType": "YulIf",
															"src": "9179:119:13"
														},
														{
															"nativeSrc": "9308:117:13",
															"nodeType": "YulBlock",
															"src": "9308:117:13",
															"statements": [
																{
																	"nativeSrc": "9323:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:13"
																				},
																				"nativeSrc": "9383:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:13"
																		},
																		"nativeSrc": "9362:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:115:13",
															"nodeType": "YulBlock",
															"src": "9435:115:13",
															"statements": [
																{
																	"nativeSrc": "9450:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:60:13",
																	"nodeType": "YulAssignment",
																	"src": "9480:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9512:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9512:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9523:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9523:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9508:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9508:3:13"
																				},
																				"nativeSrc": "9508:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9508:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9532:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9532:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9490:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9490:17:13"
																		},
																		"nativeSrc": "9490:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9089:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9131:9:13",
														"nodeType": "YulTypedName",
														"src": "9131:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9142:7:13",
														"nodeType": "YulTypedName",
														"src": "9142:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9154:6:13",
														"nodeType": "YulTypedName",
														"src": "9154:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9162:6:13",
														"nodeType": "YulTypedName",
														"src": "9162:6:13",
														"type": ""
													}
												],
												"src": "9089:468:13"
											},
											{
												"body": {
													"nativeSrc": "9629:241:13",
													"nodeType": "YulBlock",
													"src": "9629:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9734:22:13",
																"nodeType": "YulBlock",
																"src": "9734:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9736:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9736:16:13"
																			},
																			"nativeSrc": "9736:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9736:18:13"
																		},
																		"nativeSrc": "9736:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9736:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9706:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9714:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9714:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9703:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9703:2:13"
																},
																"nativeSrc": "9703:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9703:30:13"
															},
															"nativeSrc": "9700:56:13",
															"nodeType": "YulIf",
															"src": "9700:56:13"
														},
														{
															"nativeSrc": "9766:37:13",
															"nodeType": "YulAssignment",
															"src": "9766:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9796:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9796:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9774:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "9774:21:13"
																},
																"nativeSrc": "9774:29:13",
																"nodeType": "YulFunctionCall",
																"src": "9774:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9766:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9766:4:13"
																}
															]
														},
														{
															"nativeSrc": "9840:23:13",
															"nodeType": "YulAssignment",
															"src": "9840:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9852:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9852:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9858:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:13"
																},
																"nativeSrc": "9848:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9848:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9840:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9563:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9613:6:13",
														"nodeType": "YulTypedName",
														"src": "9613:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9624:4:13",
														"nodeType": "YulTypedName",
														"src": "9624:4:13",
														"type": ""
													}
												],
												"src": "9563:307:13"
											},
											{
												"body": {
													"nativeSrc": "9959:340:13",
													"nodeType": "YulBlock",
													"src": "9959:340:13",
													"statements": [
														{
															"nativeSrc": "9969:74:13",
															"nodeType": "YulAssignment",
															"src": "9969:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10035:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10035:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9994:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "9994:40:13"
																		},
																		"nativeSrc": "9994:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9978:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9978:15:13"
																},
																"nativeSrc": "9978:65:13",
																"nodeType": "YulFunctionCall",
																"src": "9978:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9969:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9969:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10059:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10059:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10066:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10052:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:13"
																},
																"nativeSrc": "10052:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10052:21:13"
															},
															"nativeSrc": "10052:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10052:21:13"
														},
														{
															"nativeSrc": "10082:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10082:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10097:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10104:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10104:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10093:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:13"
																},
																"nativeSrc": "10093:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10093:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10086:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10086:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10147:83:13",
																"nodeType": "YulBlock",
																"src": "10147:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10149:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10149:77:13"
																			},
																			"nativeSrc": "10149:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10149:79:13"
																		},
																		"nativeSrc": "10149:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10149:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10128:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10128:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10133:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10133:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10124:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10124:3:13"
																		},
																		"nativeSrc": "10124:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10124:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10142:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10142:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10121:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10121:2:13"
																},
																"nativeSrc": "10121:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10121:25:13"
															},
															"nativeSrc": "10118:112:13",
															"nodeType": "YulIf",
															"src": "10118:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10276:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10276:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10286:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10239:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "10239:36:13"
																},
																"nativeSrc": "10239:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10239:54:13"
															},
															"nativeSrc": "10239:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10239:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9876:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9932:3:13",
														"nodeType": "YulTypedName",
														"src": "9932:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9937:6:13",
														"nodeType": "YulTypedName",
														"src": "9937:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9945:3:13",
														"nodeType": "YulTypedName",
														"src": "9945:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9953:5:13",
														"nodeType": "YulTypedName",
														"src": "9953:5:13",
														"type": ""
													}
												],
												"src": "9876:423:13"
											},
											{
												"body": {
													"nativeSrc": "10379:277:13",
													"nodeType": "YulBlock",
													"src": "10379:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10428:83:13",
																"nodeType": "YulBlock",
																"src": "10428:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10430:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10430:77:13"
																			},
																			"nativeSrc": "10430:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10430:79:13"
																		},
																		"nativeSrc": "10430:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10430:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10407:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10407:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10415:4:13",
																						"nodeType": "YulLiteral",
																						"src": "10415:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10403:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10403:3:13"
																				},
																				"nativeSrc": "10403:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10403:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10422:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10422:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10399:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10399:3:13"
																		},
																		"nativeSrc": "10399:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10392:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10392:6:13"
																},
																"nativeSrc": "10392:35:13",
																"nodeType": "YulFunctionCall",
																"src": "10392:35:13"
															},
															"nativeSrc": "10389:122:13",
															"nodeType": "YulIf",
															"src": "10389:122:13"
														},
														{
															"nativeSrc": "10520:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10520:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10547:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10547:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10534:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10534:12:13"
																},
																"nativeSrc": "10534:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10534:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10524:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10524:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10563:87:13",
															"nodeType": "YulAssignment",
															"src": "10563:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10623:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10623:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10631:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10631:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10619:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10619:3:13"
																		},
																		"nativeSrc": "10619:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10619:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10638:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10638:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10646:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10646:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10572:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "10572:46:13"
																},
																"nativeSrc": "10572:78:13",
																"nodeType": "YulFunctionCall",
																"src": "10572:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10563:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10563:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10318:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10357:6:13",
														"nodeType": "YulTypedName",
														"src": "10357:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10365:3:13",
														"nodeType": "YulTypedName",
														"src": "10365:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10373:5:13",
														"nodeType": "YulTypedName",
														"src": "10373:5:13",
														"type": ""
													}
												],
												"src": "10318:338:13"
											},
											{
												"body": {
													"nativeSrc": "10788:817:13",
													"nodeType": "YulBlock",
													"src": "10788:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10835:83:13",
																"nodeType": "YulBlock",
																"src": "10835:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10837:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10837:77:13"
																			},
																			"nativeSrc": "10837:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10837:79:13"
																		},
																		"nativeSrc": "10837:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10837:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10809:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10809:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10805:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10805:3:13"
																		},
																		"nativeSrc": "10805:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10805:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10830:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10830:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10801:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10801:3:13"
																},
																"nativeSrc": "10801:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10801:33:13"
															},
															"nativeSrc": "10798:120:13",
															"nodeType": "YulIf",
															"src": "10798:120:13"
														},
														{
															"nativeSrc": "10928:117:13",
															"nodeType": "YulBlock",
															"src": "10928:117:13",
															"statements": [
																{
																	"nativeSrc": "10943:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10943:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10957:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10957:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10947:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10947:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10972:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10972:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11007:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11007:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11018:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11018:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11003:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11003:3:13"
																				},
																				"nativeSrc": "11003:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11003:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11027:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11027:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10982:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10982:20:13"
																		},
																		"nativeSrc": "10982:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10982:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10972:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10972:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11055:118:13",
															"nodeType": "YulBlock",
															"src": "11055:118:13",
															"statements": [
																{
																	"nativeSrc": "11070:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11070:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11084:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11084:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11074:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11074:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11100:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11100:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11135:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11135:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11146:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11146:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11131:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11131:3:13"
																				},
																				"nativeSrc": "11131:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11131:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11155:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11155:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11110:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11110:20:13"
																		},
																		"nativeSrc": "11110:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11100:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11100:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11183:118:13",
															"nodeType": "YulBlock",
															"src": "11183:118:13",
															"statements": [
																{
																	"nativeSrc": "11198:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11198:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11212:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11202:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11202:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11228:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11228:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11263:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11263:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11274:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11274:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11259:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11259:3:13"
																				},
																				"nativeSrc": "11259:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11259:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11283:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11283:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11238:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11238:20:13"
																		},
																		"nativeSrc": "11238:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11228:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11228:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11311:287:13",
															"nodeType": "YulBlock",
															"src": "11311:287:13",
															"statements": [
																{
																	"nativeSrc": "11326:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:2:13",
																						"nodeType": "YulLiteral",
																						"src": "11368:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:13"
																				},
																				"nativeSrc": "11353:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:13"
																		},
																		"nativeSrc": "11340:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11419:83:13",
																		"nodeType": "YulBlock",
																		"src": "11419:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11421:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11421:77:13"
																					},
																					"nativeSrc": "11421:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11421:79:13"
																				},
																				"nativeSrc": "11421:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11421:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11391:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11391:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11399:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11399:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11388:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11388:2:13"
																		},
																		"nativeSrc": "11388:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:30:13"
																	},
																	"nativeSrc": "11385:117:13",
																	"nodeType": "YulIf",
																	"src": "11385:117:13"
																},
																{
																	"nativeSrc": "11516:72:13",
																	"nodeType": "YulAssignment",
																	"src": "11516:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:13"
																				},
																				"nativeSrc": "11556:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11526:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "11526:29:13"
																		},
																		"nativeSrc": "11526:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11526:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11516:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11516:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10662:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10734:9:13",
														"nodeType": "YulTypedName",
														"src": "10734:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10745:7:13",
														"nodeType": "YulTypedName",
														"src": "10745:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10757:6:13",
														"nodeType": "YulTypedName",
														"src": "10757:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10765:6:13",
														"nodeType": "YulTypedName",
														"src": "10765:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10773:6:13",
														"nodeType": "YulTypedName",
														"src": "10773:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10781:6:13",
														"nodeType": "YulTypedName",
														"src": "10781:6:13",
														"type": ""
													}
												],
												"src": "10662:943:13"
											},
											{
												"body": {
													"nativeSrc": "11694:391:13",
													"nodeType": "YulBlock",
													"src": "11694:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11740:83:13",
																"nodeType": "YulBlock",
																"src": "11740:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11742:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11742:77:13"
																			},
																			"nativeSrc": "11742:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11742:79:13"
																		},
																		"nativeSrc": "11742:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11742:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11715:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11715:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11711:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:13"
																		},
																		"nativeSrc": "11711:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11736:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:13"
																},
																"nativeSrc": "11707:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11707:32:13"
															},
															"nativeSrc": "11704:119:13",
															"nodeType": "YulIf",
															"src": "11704:119:13"
														},
														{
															"nativeSrc": "11833:117:13",
															"nodeType": "YulBlock",
															"src": "11833:117:13",
															"statements": [
																{
																	"nativeSrc": "11848:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11848:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11862:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11852:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11852:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11877:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11877:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11912:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11912:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11923:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11923:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:13"
																				},
																				"nativeSrc": "11908:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11932:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11932:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11887:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11887:20:13"
																		},
																		"nativeSrc": "11887:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11877:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11877:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11960:118:13",
															"nodeType": "YulBlock",
															"src": "11960:118:13",
															"statements": [
																{
																	"nativeSrc": "11975:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11975:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11979:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11979:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12005:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12005:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12036:3:13"
																				},
																				"nativeSrc": "12036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12015:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12015:20:13"
																		},
																		"nativeSrc": "12015:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12015:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12005:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12005:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11611:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11656:9:13",
														"nodeType": "YulTypedName",
														"src": "11656:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11667:7:13",
														"nodeType": "YulTypedName",
														"src": "11667:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11679:6:13",
														"nodeType": "YulTypedName",
														"src": "11679:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11687:6:13",
														"nodeType": "YulTypedName",
														"src": "11687:6:13",
														"type": ""
													}
												],
												"src": "11611:474:13"
											},
											{
												"body": {
													"nativeSrc": "12119:152:13",
													"nodeType": "YulBlock",
													"src": "12119:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12136:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12139:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:13"
																},
																"nativeSrc": "12129:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12129:88:13"
															},
															"nativeSrc": "12129:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12129:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12233:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12236:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12226:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:13"
																},
																"nativeSrc": "12226:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12226:15:13"
															},
															"nativeSrc": "12226:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12226:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12257:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12257:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12260:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12250:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:13"
																},
																"nativeSrc": "12250:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12250:15:13"
															},
															"nativeSrc": "12250:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12250:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12091:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:180:13"
											},
											{
												"body": {
													"nativeSrc": "12328:269:13",
													"nodeType": "YulBlock",
													"src": "12328:269:13",
													"statements": [
														{
															"nativeSrc": "12338:22:13",
															"nodeType": "YulAssignment",
															"src": "12338:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12352:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12352:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12348:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:13"
																},
																"nativeSrc": "12348:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12348:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:13"
																}
															]
														},
														{
															"nativeSrc": "12369:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12369:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12399:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12399:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12405:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12395:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:13"
																},
																"nativeSrc": "12395:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12395:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12373:18:13",
																	"nodeType": "YulTypedName",
																	"src": "12373:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12446:51:13",
																"nodeType": "YulBlock",
																"src": "12446:51:13",
																"statements": [
																	{
																		"nativeSrc": "12460:27:13",
																		"nodeType": "YulAssignment",
																		"src": "12460:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12474:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "12474:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12482:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12482:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12470:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12470:3:13"
																			},
																			"nativeSrc": "12470:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12470:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12460:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12426:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12426:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12419:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12419:6:13"
																},
																"nativeSrc": "12419:26:13",
																"nodeType": "YulFunctionCall",
																"src": "12419:26:13"
															},
															"nativeSrc": "12416:81:13",
															"nodeType": "YulIf",
															"src": "12416:81:13"
														},
														{
															"body": {
																"nativeSrc": "12549:42:13",
																"nodeType": "YulBlock",
																"src": "12549:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12563:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12563:16:13"
																			},
																			"nativeSrc": "12563:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12563:18:13"
																		},
																		"nativeSrc": "12563:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12563:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12513:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12513:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12536:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12536:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12544:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12533:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12533:2:13"
																		},
																		"nativeSrc": "12533:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12533:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12510:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12510:2:13"
																},
																"nativeSrc": "12510:38:13",
																"nodeType": "YulFunctionCall",
																"src": "12510:38:13"
															},
															"nativeSrc": "12507:84:13",
															"nodeType": "YulIf",
															"src": "12507:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12277:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12312:4:13",
														"nodeType": "YulTypedName",
														"src": "12312:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12321:6:13",
														"nodeType": "YulTypedName",
														"src": "12321:6:13",
														"type": ""
													}
												],
												"src": "12277:320:13"
											},
											{
												"body": {
													"nativeSrc": "12757:288:13",
													"nodeType": "YulBlock",
													"src": "12757:288:13",
													"statements": [
														{
															"nativeSrc": "12767:26:13",
															"nodeType": "YulAssignment",
															"src": "12767:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12779:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12779:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12790:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12790:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12775:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:13"
																},
																"nativeSrc": "12775:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12775:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12767:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12767:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12847:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12847:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12860:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12871:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12856:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:13"
																		},
																		"nativeSrc": "12856:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12803:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12803:43:13"
																},
																"nativeSrc": "12803:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12803:71:13"
															},
															"nativeSrc": "12803:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12803:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12928:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12941:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12941:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12952:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12937:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:13"
																		},
																		"nativeSrc": "12937:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12937:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12884:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12884:43:13"
																},
																"nativeSrc": "12884:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12884:72:13"
															},
															"nativeSrc": "12884:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12884:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13010:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13023:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13034:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13034:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13019:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:13"
																		},
																		"nativeSrc": "13019:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13019:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12966:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12966:43:13"
																},
																"nativeSrc": "12966:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12966:72:13"
															},
															"nativeSrc": "12966:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12966:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12603:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12713:9:13",
														"nodeType": "YulTypedName",
														"src": "12713:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12725:6:13",
														"nodeType": "YulTypedName",
														"src": "12725:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12733:6:13",
														"nodeType": "YulTypedName",
														"src": "12733:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12741:6:13",
														"nodeType": "YulTypedName",
														"src": "12741:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12752:4:13",
														"nodeType": "YulTypedName",
														"src": "12752:4:13",
														"type": ""
													}
												],
												"src": "12603:442:13"
											},
											{
												"body": {
													"nativeSrc": "13157:66:13",
													"nodeType": "YulBlock",
													"src": "13157:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13179:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13179:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13187:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13187:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13175:3:13"
																		},
																		"nativeSrc": "13175:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13175:14:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "13191:24:13",
																		"nodeType": "YulLiteral",
																		"src": "13191:24:13",
																		"type": "",
																		"value": "Not authorized to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13168:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13168:6:13"
																},
																"nativeSrc": "13168:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13168:48:13"
															},
															"nativeSrc": "13168:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13168:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
												"nativeSrc": "13051:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13149:6:13",
														"nodeType": "YulTypedName",
														"src": "13149:6:13",
														"type": ""
													}
												],
												"src": "13051:172:13"
											},
											{
												"body": {
													"nativeSrc": "13375:220:13",
													"nodeType": "YulBlock",
													"src": "13375:220:13",
													"statements": [
														{
															"nativeSrc": "13385:74:13",
															"nodeType": "YulAssignment",
															"src": "13385:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13451:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13451:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13456:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13392:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13392:58:13"
																},
																"nativeSrc": "13392:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13392:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13385:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13385:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13557:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13557:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																	"nativeSrc": "13468:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13468:88:13"
																},
																"nativeSrc": "13468:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13468:93:13"
															},
															"nativeSrc": "13468:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13468:93:13"
														},
														{
															"nativeSrc": "13570:19:13",
															"nodeType": "YulAssignment",
															"src": "13570:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13581:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13581:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13586:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13586:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:13"
																},
																"nativeSrc": "13577:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13577:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13570:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13229:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13363:3:13",
														"nodeType": "YulTypedName",
														"src": "13363:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13371:3:13",
														"nodeType": "YulTypedName",
														"src": "13371:3:13",
														"type": ""
													}
												],
												"src": "13229:366:13"
											},
											{
												"body": {
													"nativeSrc": "13772:248:13",
													"nodeType": "YulBlock",
													"src": "13772:248:13",
													"statements": [
														{
															"nativeSrc": "13782:26:13",
															"nodeType": "YulAssignment",
															"src": "13782:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13794:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13794:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13805:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13805:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13790:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13790:3:13"
																},
																"nativeSrc": "13790:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13790:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13782:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13782:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13829:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13829:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13840:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13840:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13825:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13825:3:13"
																		},
																		"nativeSrc": "13825:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13825:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13848:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13848:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13854:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13854:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13844:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13844:3:13"
																		},
																		"nativeSrc": "13844:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13844:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13818:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13818:6:13"
																},
																"nativeSrc": "13818:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13818:47:13"
															},
															"nativeSrc": "13818:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13818:47:13"
														},
														{
															"nativeSrc": "13874:139:13",
															"nodeType": "YulAssignment",
															"src": "13874:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14008:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14008:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13882:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13882:124:13"
																},
																"nativeSrc": "13882:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13882:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13874:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13601:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13752:9:13",
														"nodeType": "YulTypedName",
														"src": "13752:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13767:4:13",
														"nodeType": "YulTypedName",
														"src": "13767:4:13",
														"type": ""
													}
												],
												"src": "13601:419:13"
											},
											{
												"body": {
													"nativeSrc": "14132:115:13",
													"nodeType": "YulBlock",
													"src": "14132:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14154:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14154:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14162:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14162:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14150:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14150:3:13"
																		},
																		"nativeSrc": "14150:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14150:14:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206368616e676520617574686f7269",
																		"kind": "string",
																		"nativeSrc": "14166:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14166:34:13",
																		"type": "",
																		"value": "Not authorized to change authori"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14143:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14143:6:13"
																},
																"nativeSrc": "14143:58:13",
																"nodeType": "YulFunctionCall",
																"src": "14143:58:13"
															},
															"nativeSrc": "14143:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "14143:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14222:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14222:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14230:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14230:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14218:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14218:3:13"
																		},
																		"nativeSrc": "14218:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14218:15:13"
																	},
																	{
																		"hexValue": "7479",
																		"kind": "string",
																		"nativeSrc": "14235:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14235:4:13",
																		"type": "",
																		"value": "ty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14211:6:13"
																},
																"nativeSrc": "14211:29:13",
																"nodeType": "YulFunctionCall",
																"src": "14211:29:13"
															},
															"nativeSrc": "14211:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "14211:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e",
												"nativeSrc": "14026:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14124:6:13",
														"nodeType": "YulTypedName",
														"src": "14124:6:13",
														"type": ""
													}
												],
												"src": "14026:221:13"
											},
											{
												"body": {
													"nativeSrc": "14399:220:13",
													"nodeType": "YulBlock",
													"src": "14399:220:13",
													"statements": [
														{
															"nativeSrc": "14409:74:13",
															"nodeType": "YulAssignment",
															"src": "14409:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14475:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14475:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14480:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14480:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14416:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14416:58:13"
																},
																"nativeSrc": "14416:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14416:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14409:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14409:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14581:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14581:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e",
																	"nativeSrc": "14492:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14492:88:13"
																},
																"nativeSrc": "14492:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14492:93:13"
															},
															"nativeSrc": "14492:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14492:93:13"
														},
														{
															"nativeSrc": "14594:19:13",
															"nodeType": "YulAssignment",
															"src": "14594:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14605:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14605:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14610:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14610:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14601:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14601:3:13"
																},
																"nativeSrc": "14601:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14601:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14253:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14387:3:13",
														"nodeType": "YulTypedName",
														"src": "14387:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14395:3:13",
														"nodeType": "YulTypedName",
														"src": "14395:3:13",
														"type": ""
													}
												],
												"src": "14253:366:13"
											},
											{
												"body": {
													"nativeSrc": "14796:248:13",
													"nodeType": "YulBlock",
													"src": "14796:248:13",
													"statements": [
														{
															"nativeSrc": "14806:26:13",
															"nodeType": "YulAssignment",
															"src": "14806:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14818:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14818:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14829:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14814:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14814:3:13"
																},
																"nativeSrc": "14814:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14814:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14806:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14806:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14853:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14864:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14864:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14849:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14849:3:13"
																		},
																		"nativeSrc": "14849:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14849:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14872:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14872:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14878:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14878:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14868:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:13"
																		},
																		"nativeSrc": "14868:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14868:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14842:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14842:6:13"
																},
																"nativeSrc": "14842:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14842:47:13"
															},
															"nativeSrc": "14842:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14842:47:13"
														},
														{
															"nativeSrc": "14898:139:13",
															"nodeType": "YulAssignment",
															"src": "14898:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15032:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15032:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14906:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14906:124:13"
																},
																"nativeSrc": "14906:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14906:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14898:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14898:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14625:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14776:9:13",
														"nodeType": "YulTypedName",
														"src": "14776:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14791:4:13",
														"nodeType": "YulTypedName",
														"src": "14791:4:13",
														"type": ""
													}
												],
												"src": "14625:419:13"
											},
											{
												"body": {
													"nativeSrc": "15156:74:13",
													"nodeType": "YulBlock",
													"src": "15156:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15178:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15178:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15186:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15186:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15174:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15174:3:13"
																		},
																		"nativeSrc": "15174:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15174:14:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f20736574206261736520555249",
																		"kind": "string",
																		"nativeSrc": "15190:32:13",
																		"nodeType": "YulLiteral",
																		"src": "15190:32:13",
																		"type": "",
																		"value": "Not authorized to set base URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15167:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15167:6:13"
																},
																"nativeSrc": "15167:56:13",
																"nodeType": "YulFunctionCall",
																"src": "15167:56:13"
															},
															"nativeSrc": "15167:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "15167:56:13"
														}
													]
												},
												"name": "store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
												"nativeSrc": "15050:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15148:6:13",
														"nodeType": "YulTypedName",
														"src": "15148:6:13",
														"type": ""
													}
												],
												"src": "15050:180:13"
											},
											{
												"body": {
													"nativeSrc": "15382:220:13",
													"nodeType": "YulBlock",
													"src": "15382:220:13",
													"statements": [
														{
															"nativeSrc": "15392:74:13",
															"nodeType": "YulAssignment",
															"src": "15392:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15458:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15458:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15463:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15463:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15399:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15399:58:13"
																},
																"nativeSrc": "15399:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15399:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15392:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15392:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15564:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15564:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
																	"nativeSrc": "15475:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15475:88:13"
																},
																"nativeSrc": "15475:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15475:93:13"
															},
															"nativeSrc": "15475:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15475:93:13"
														},
														{
															"nativeSrc": "15577:19:13",
															"nodeType": "YulAssignment",
															"src": "15577:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15588:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15588:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15593:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15593:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15584:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15584:3:13"
																},
																"nativeSrc": "15584:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15584:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15577:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15236:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15370:3:13",
														"nodeType": "YulTypedName",
														"src": "15370:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15378:3:13",
														"nodeType": "YulTypedName",
														"src": "15378:3:13",
														"type": ""
													}
												],
												"src": "15236:366:13"
											},
											{
												"body": {
													"nativeSrc": "15779:248:13",
													"nodeType": "YulBlock",
													"src": "15779:248:13",
													"statements": [
														{
															"nativeSrc": "15789:26:13",
															"nodeType": "YulAssignment",
															"src": "15789:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15801:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15801:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15812:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15812:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15797:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15797:3:13"
																},
																"nativeSrc": "15797:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15797:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15789:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15789:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15836:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15836:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15847:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15847:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15832:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15832:3:13"
																		},
																		"nativeSrc": "15832:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15832:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15855:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15855:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15861:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15861:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15851:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15851:3:13"
																		},
																		"nativeSrc": "15851:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15851:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15825:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15825:6:13"
																},
																"nativeSrc": "15825:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15825:47:13"
															},
															"nativeSrc": "15825:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15825:47:13"
														},
														{
															"nativeSrc": "15881:139:13",
															"nodeType": "YulAssignment",
															"src": "15881:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16015:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16015:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15889:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15889:124:13"
																},
																"nativeSrc": "15889:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15889:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15881:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15881:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15608:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15759:9:13",
														"nodeType": "YulTypedName",
														"src": "15759:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15774:4:13",
														"nodeType": "YulTypedName",
														"src": "15774:4:13",
														"type": ""
													}
												],
												"src": "15608:419:13"
											},
											{
												"body": {
													"nativeSrc": "16087:87:13",
													"nodeType": "YulBlock",
													"src": "16087:87:13",
													"statements": [
														{
															"nativeSrc": "16097:11:13",
															"nodeType": "YulAssignment",
															"src": "16097:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "16105:3:13",
																"nodeType": "YulIdentifier",
																"src": "16105:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16097:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16097:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16125:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16125:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16128:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16128:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:13"
																},
																"nativeSrc": "16118:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16118:14:13"
															},
															"nativeSrc": "16118:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "16118:14:13"
														},
														{
															"nativeSrc": "16141:26:13",
															"nodeType": "YulAssignment",
															"src": "16141:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16159:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16159:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16162:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16162:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16149:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16149:9:13"
																},
																"nativeSrc": "16149:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16149:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16141:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16141:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16033:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16074:3:13",
														"nodeType": "YulTypedName",
														"src": "16074:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16082:4:13",
														"nodeType": "YulTypedName",
														"src": "16082:4:13",
														"type": ""
													}
												],
												"src": "16033:141:13"
											},
											{
												"body": {
													"nativeSrc": "16224:49:13",
													"nodeType": "YulBlock",
													"src": "16224:49:13",
													"statements": [
														{
															"nativeSrc": "16234:33:13",
															"nodeType": "YulAssignment",
															"src": "16234:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16252:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "16252:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16259:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16259:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16248:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16248:3:13"
																		},
																		"nativeSrc": "16248:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16248:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16264:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16244:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16244:3:13"
																},
																"nativeSrc": "16244:23:13",
																"nodeType": "YulFunctionCall",
																"src": "16244:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16234:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16234:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16180:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16207:5:13",
														"nodeType": "YulTypedName",
														"src": "16207:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16217:6:13",
														"nodeType": "YulTypedName",
														"src": "16217:6:13",
														"type": ""
													}
												],
												"src": "16180:93:13"
											},
											{
												"body": {
													"nativeSrc": "16332:54:13",
													"nodeType": "YulBlock",
													"src": "16332:54:13",
													"statements": [
														{
															"nativeSrc": "16342:37:13",
															"nodeType": "YulAssignment",
															"src": "16342:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16367:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16367:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16373:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16373:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16363:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16363:3:13"
																},
																"nativeSrc": "16363:16:13",
																"nodeType": "YulFunctionCall",
																"src": "16363:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16342:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "16342:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16279:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16307:4:13",
														"nodeType": "YulTypedName",
														"src": "16307:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16313:5:13",
														"nodeType": "YulTypedName",
														"src": "16313:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16323:8:13",
														"nodeType": "YulTypedName",
														"src": "16323:8:13",
														"type": ""
													}
												],
												"src": "16279:107:13"
											},
											{
												"body": {
													"nativeSrc": "16468:317:13",
													"nodeType": "YulBlock",
													"src": "16468:317:13",
													"statements": [
														{
															"nativeSrc": "16478:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16478:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16499:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "16499:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16511:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16511:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16495:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16495:3:13"
																},
																"nativeSrc": "16495:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16495:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16482:9:13",
																	"nodeType": "YulTypedName",
																	"src": "16482:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16522:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16522:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16553:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16553:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16564:66:13",
																		"nodeType": "YulLiteral",
																		"src": "16564:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16534:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16534:18:13"
																},
																"nativeSrc": "16534:97:13",
																"nodeType": "YulFunctionCall",
																"src": "16534:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16526:4:13",
																	"nodeType": "YulTypedName",
																	"src": "16526:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16640:51:13",
															"nodeType": "YulAssignment",
															"src": "16640:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16671:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16671:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16682:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "16682:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16652:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16652:18:13"
																},
																"nativeSrc": "16652:39:13",
																"nodeType": "YulFunctionCall",
																"src": "16652:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16640:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "16640:8:13"
																}
															]
														},
														{
															"nativeSrc": "16700:30:13",
															"nodeType": "YulAssignment",
															"src": "16700:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16713:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16713:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16724:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16724:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16720:3:13"
																		},
																		"nativeSrc": "16720:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16720:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16709:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16709:3:13"
																},
																"nativeSrc": "16709:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16709:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16700:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16700:5:13"
																}
															]
														},
														{
															"nativeSrc": "16739:40:13",
															"nodeType": "YulAssignment",
															"src": "16739:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16752:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16752:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16763:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "16763:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16773:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16773:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16759:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:13"
																		},
																		"nativeSrc": "16759:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16749:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16749:2:13"
																},
																"nativeSrc": "16749:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16749:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16739:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16739:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16392:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16429:5:13",
														"nodeType": "YulTypedName",
														"src": "16429:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16436:10:13",
														"nodeType": "YulTypedName",
														"src": "16436:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16448:8:13",
														"nodeType": "YulTypedName",
														"src": "16448:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16461:6:13",
														"nodeType": "YulTypedName",
														"src": "16461:6:13",
														"type": ""
													}
												],
												"src": "16392:393:13"
											},
											{
												"body": {
													"nativeSrc": "16823:28:13",
													"nodeType": "YulBlock",
													"src": "16823:28:13",
													"statements": [
														{
															"nativeSrc": "16833:12:13",
															"nodeType": "YulAssignment",
															"src": "16833:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "16840:5:13",
																"nodeType": "YulIdentifier",
																"src": "16840:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16833:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16791:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16809:5:13",
														"nodeType": "YulTypedName",
														"src": "16809:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16819:3:13",
														"nodeType": "YulTypedName",
														"src": "16819:3:13",
														"type": ""
													}
												],
												"src": "16791:60:13"
											},
											{
												"body": {
													"nativeSrc": "16917:82:13",
													"nodeType": "YulBlock",
													"src": "16917:82:13",
													"statements": [
														{
															"nativeSrc": "16927:66:13",
															"nodeType": "YulAssignment",
															"src": "16927:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16985:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "16985:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16967:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "16967:17:13"
																				},
																				"nativeSrc": "16967:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16967:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16958:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "16958:8:13"
																		},
																		"nativeSrc": "16958:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16958:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16940:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16940:17:13"
																},
																"nativeSrc": "16940:53:13",
																"nodeType": "YulFunctionCall",
																"src": "16940:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16927:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16927:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16857:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16897:5:13",
														"nodeType": "YulTypedName",
														"src": "16897:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16907:9:13",
														"nodeType": "YulTypedName",
														"src": "16907:9:13",
														"type": ""
													}
												],
												"src": "16857:142:13"
											},
											{
												"body": {
													"nativeSrc": "17052:28:13",
													"nodeType": "YulBlock",
													"src": "17052:28:13",
													"statements": [
														{
															"nativeSrc": "17062:12:13",
															"nodeType": "YulAssignment",
															"src": "17062:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "17069:5:13",
																"nodeType": "YulIdentifier",
																"src": "17069:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17062:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17062:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17005:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17038:5:13",
														"nodeType": "YulTypedName",
														"src": "17038:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17048:3:13",
														"nodeType": "YulTypedName",
														"src": "17048:3:13",
														"type": ""
													}
												],
												"src": "17005:75:13"
											},
											{
												"body": {
													"nativeSrc": "17162:193:13",
													"nodeType": "YulBlock",
													"src": "17162:193:13",
													"statements": [
														{
															"nativeSrc": "17172:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17172:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17227:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "17227:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17196:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "17196:30:13"
																},
																"nativeSrc": "17196:39:13",
																"nodeType": "YulFunctionCall",
																"src": "17196:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17176:16:13",
																	"nodeType": "YulTypedName",
																	"src": "17176:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17251:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17251:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17291:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "17291:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17285:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17285:5:13"
																				},
																				"nativeSrc": "17285:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17285:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17298:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17298:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17330:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "17330:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17306:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "17306:23:13"
																				},
																				"nativeSrc": "17306:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17306:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17257:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "17257:27:13"
																		},
																		"nativeSrc": "17257:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17257:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17244:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17244:6:13"
																},
																"nativeSrc": "17244:105:13",
																"nodeType": "YulFunctionCall",
																"src": "17244:105:13"
															},
															"nativeSrc": "17244:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "17244:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17086:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17139:4:13",
														"nodeType": "YulTypedName",
														"src": "17139:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17145:6:13",
														"nodeType": "YulTypedName",
														"src": "17145:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17153:7:13",
														"nodeType": "YulTypedName",
														"src": "17153:7:13",
														"type": ""
													}
												],
												"src": "17086:269:13"
											},
											{
												"body": {
													"nativeSrc": "17410:24:13",
													"nodeType": "YulBlock",
													"src": "17410:24:13",
													"statements": [
														{
															"nativeSrc": "17420:8:13",
															"nodeType": "YulAssignment",
															"src": "17420:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "17427:1:13",
																"nodeType": "YulLiteral",
																"src": "17427:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17420:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17420:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17361:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17406:3:13",
														"nodeType": "YulTypedName",
														"src": "17406:3:13",
														"type": ""
													}
												],
												"src": "17361:73:13"
											},
											{
												"body": {
													"nativeSrc": "17493:136:13",
													"nodeType": "YulBlock",
													"src": "17493:136:13",
													"statements": [
														{
															"nativeSrc": "17503:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17503:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17517:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "17517:30:13"
																},
																"nativeSrc": "17517:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17517:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17507:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17507:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17602:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17602:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17608:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17608:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17616:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17616:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17558:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17558:43:13"
																},
																"nativeSrc": "17558:65:13",
																"nodeType": "YulFunctionCall",
																"src": "17558:65:13"
															},
															"nativeSrc": "17558:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "17558:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17440:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17479:4:13",
														"nodeType": "YulTypedName",
														"src": "17479:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17485:6:13",
														"nodeType": "YulTypedName",
														"src": "17485:6:13",
														"type": ""
													}
												],
												"src": "17440:189:13"
											},
											{
												"body": {
													"nativeSrc": "17685:136:13",
													"nodeType": "YulBlock",
													"src": "17685:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17752:63:13",
																"nodeType": "YulBlock",
																"src": "17752:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17796:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17796:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17803:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17803:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17766:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "17766:29:13"
																			},
																			"nativeSrc": "17766:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17766:39:13"
																		},
																		"nativeSrc": "17766:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17766:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17705:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17705:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17712:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17712:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17702:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17702:2:13"
																},
																"nativeSrc": "17702:14:13",
																"nodeType": "YulFunctionCall",
																"src": "17702:14:13"
															},
															"nativeSrc": "17695:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17717:26:13",
																"nodeType": "YulBlock",
																"src": "17717:26:13",
																"statements": [
																	{
																		"nativeSrc": "17719:22:13",
																		"nodeType": "YulAssignment",
																		"src": "17719:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17732:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17732:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17739:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17739:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17728:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17728:3:13"
																			},
																			"nativeSrc": "17728:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17728:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17719:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17719:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17699:2:13",
																"nodeType": "YulBlock",
																"src": "17699:2:13",
																"statements": []
															},
															"src": "17695:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17635:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17673:5:13",
														"nodeType": "YulTypedName",
														"src": "17673:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17680:3:13",
														"nodeType": "YulTypedName",
														"src": "17680:3:13",
														"type": ""
													}
												],
												"src": "17635:186:13"
											},
											{
												"body": {
													"nativeSrc": "17906:464:13",
													"nodeType": "YulBlock",
													"src": "17906:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17932:431:13",
																"nodeType": "YulBlock",
																"src": "17932:431:13",
																"statements": [
																	{
																		"nativeSrc": "17946:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17946:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17994:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "17994:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17962:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "17962:31:13"
																			},
																			"nativeSrc": "17962:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17962:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17950:8:13",
																				"nodeType": "YulTypedName",
																				"src": "17950:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18013:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18013:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18036:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "18036:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18064:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "18064:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18046:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "18046:17:13"
																					},
																					"nativeSrc": "18046:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "18046:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18032:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18032:3:13"
																			},
																			"nativeSrc": "18032:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18032:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18017:11:13",
																				"nodeType": "YulTypedName",
																				"src": "18017:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18233:27:13",
																			"nodeType": "YulBlock",
																			"src": "18233:27:13",
																			"statements": [
																				{
																					"nativeSrc": "18235:23:13",
																					"nodeType": "YulAssignment",
																					"src": "18235:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18250:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "18250:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18235:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "18235:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18217:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "18217:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18229:2:13",
																					"nodeType": "YulLiteral",
																					"src": "18229:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18214:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18214:2:13"
																			},
																			"nativeSrc": "18214:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18214:18:13"
																		},
																		"nativeSrc": "18211:49:13",
																		"nodeType": "YulIf",
																		"src": "18211:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18302:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "18302:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18319:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "18319:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18347:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "18347:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18329:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "18329:17:13"
																							},
																							"nativeSrc": "18329:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "18329:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18315:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "18315:3:13"
																					},
																					"nativeSrc": "18315:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "18315:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18273:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "18273:28:13"
																			},
																			"nativeSrc": "18273:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18273:80:13"
																		},
																		"nativeSrc": "18273:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18273:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17923:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17923:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17928:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17928:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17920:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17920:2:13"
																},
																"nativeSrc": "17920:11:13",
																"nodeType": "YulFunctionCall",
																"src": "17920:11:13"
															},
															"nativeSrc": "17917:446:13",
															"nodeType": "YulIf",
															"src": "17917:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17827:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17882:5:13",
														"nodeType": "YulTypedName",
														"src": "17882:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17889:3:13",
														"nodeType": "YulTypedName",
														"src": "17889:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17894:10:13",
														"nodeType": "YulTypedName",
														"src": "17894:10:13",
														"type": ""
													}
												],
												"src": "17827:543:13"
											},
											{
												"body": {
													"nativeSrc": "18439:54:13",
													"nodeType": "YulBlock",
													"src": "18439:54:13",
													"statements": [
														{
															"nativeSrc": "18449:37:13",
															"nodeType": "YulAssignment",
															"src": "18449:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18474:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18474:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18480:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18480:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18470:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18470:3:13"
																},
																"nativeSrc": "18470:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18470:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18449:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "18449:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18376:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18414:4:13",
														"nodeType": "YulTypedName",
														"src": "18414:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18420:5:13",
														"nodeType": "YulTypedName",
														"src": "18420:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18430:8:13",
														"nodeType": "YulTypedName",
														"src": "18430:8:13",
														"type": ""
													}
												],
												"src": "18376:117:13"
											},
											{
												"body": {
													"nativeSrc": "18550:118:13",
													"nodeType": "YulBlock",
													"src": "18550:118:13",
													"statements": [
														{
															"nativeSrc": "18560:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18560:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18609:1:13",
																						"nodeType": "YulLiteral",
																						"src": "18609:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18612:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "18612:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18605:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18605:3:13"
																				},
																				"nativeSrc": "18605:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18605:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18624:1:13",
																						"nodeType": "YulLiteral",
																						"src": "18624:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18620:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18620:3:13"
																				},
																				"nativeSrc": "18620:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18620:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18576:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "18576:28:13"
																		},
																		"nativeSrc": "18576:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18576:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18572:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18572:3:13"
																},
																"nativeSrc": "18572:56:13",
																"nodeType": "YulFunctionCall",
																"src": "18572:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18564:4:13",
																	"nodeType": "YulTypedName",
																	"src": "18564:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18637:25:13",
															"nodeType": "YulAssignment",
															"src": "18637:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18651:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18651:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18657:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18657:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18647:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18647:3:13"
																},
																"nativeSrc": "18647:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18647:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18637:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18637:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18499:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18527:4:13",
														"nodeType": "YulTypedName",
														"src": "18527:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18533:5:13",
														"nodeType": "YulTypedName",
														"src": "18533:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18543:6:13",
														"nodeType": "YulTypedName",
														"src": "18543:6:13",
														"type": ""
													}
												],
												"src": "18499:169:13"
											},
											{
												"body": {
													"nativeSrc": "18754:214:13",
													"nodeType": "YulBlock",
													"src": "18754:214:13",
													"statements": [
														{
															"nativeSrc": "18887:37:13",
															"nodeType": "YulAssignment",
															"src": "18887:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18914:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18914:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18920:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18920:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18895:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "18895:18:13"
																},
																"nativeSrc": "18895:29:13",
																"nodeType": "YulFunctionCall",
																"src": "18895:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18887:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18887:4:13"
																}
															]
														},
														{
															"nativeSrc": "18933:29:13",
															"nodeType": "YulAssignment",
															"src": "18933:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18944:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18944:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18954:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18954:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18957:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18957:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18950:3:13"
																		},
																		"nativeSrc": "18950:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18950:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18941:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18941:2:13"
																},
																"nativeSrc": "18941:21:13",
																"nodeType": "YulFunctionCall",
																"src": "18941:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18933:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18933:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18673:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18735:4:13",
														"nodeType": "YulTypedName",
														"src": "18735:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18741:3:13",
														"nodeType": "YulTypedName",
														"src": "18741:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18749:4:13",
														"nodeType": "YulTypedName",
														"src": "18749:4:13",
														"type": ""
													}
												],
												"src": "18673:295:13"
											},
											{
												"body": {
													"nativeSrc": "19065:1303:13",
													"nodeType": "YulBlock",
													"src": "19065:1303:13",
													"statements": [
														{
															"nativeSrc": "19076:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19076:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19123:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19123:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19090:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "19090:32:13"
																},
																"nativeSrc": "19090:37:13",
																"nodeType": "YulFunctionCall",
																"src": "19090:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19080:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19080:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19212:22:13",
																"nodeType": "YulBlock",
																"src": "19212:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19214:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19214:16:13"
																			},
																			"nativeSrc": "19214:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19214:18:13"
																		},
																		"nativeSrc": "19214:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19214:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19184:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19184:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19192:18:13",
																		"nodeType": "YulLiteral",
																		"src": "19192:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19181:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19181:2:13"
																},
																"nativeSrc": "19181:30:13",
																"nodeType": "YulFunctionCall",
																"src": "19181:30:13"
															},
															"nativeSrc": "19178:56:13",
															"nodeType": "YulIf",
															"src": "19178:56:13"
														},
														{
															"nativeSrc": "19244:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19244:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19290:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19290:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19284:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "19284:5:13"
																		},
																		"nativeSrc": "19284:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19284:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19258:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "19258:25:13"
																},
																"nativeSrc": "19258:38:13",
																"nodeType": "YulFunctionCall",
																"src": "19258:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19248:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19248:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19389:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19389:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19395:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19395:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19403:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19403:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19343:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "19343:45:13"
																},
																"nativeSrc": "19343:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19343:67:13"
															},
															"nativeSrc": "19343:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "19343:67:13"
														},
														{
															"nativeSrc": "19420:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19420:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "19437:1:13",
																"nodeType": "YulLiteral",
																"src": "19437:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19424:9:13",
																	"nodeType": "YulTypedName",
																	"src": "19424:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19448:17:13",
															"nodeType": "YulAssignment",
															"src": "19448:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "19461:4:13",
																"nodeType": "YulLiteral",
																"src": "19461:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19448:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "19448:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19512:611:13",
																		"nodeType": "YulBlock",
																		"src": "19512:611:13",
																		"statements": [
																			{
																				"nativeSrc": "19526:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19526:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19545:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19545:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19557:4:13",
																									"nodeType": "YulLiteral",
																									"src": "19557:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19553:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19553:3:13"
																							},
																							"nativeSrc": "19553:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19553:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19541:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "19541:3:13"
																					},
																					"nativeSrc": "19541:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19541:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19530:7:13",
																						"nodeType": "YulTypedName",
																						"src": "19530:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19577:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19577:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19623:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "19623:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19591:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "19591:31:13"
																					},
																					"nativeSrc": "19591:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19591:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19581:6:13",
																						"nodeType": "YulTypedName",
																						"src": "19581:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19641:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19641:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19650:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19650:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19645:1:13",
																						"nodeType": "YulTypedName",
																						"src": "19645:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19709:163:13",
																					"nodeType": "YulBlock",
																					"src": "19709:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19734:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "19734:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19752:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "19752:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19757:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "19757:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19748:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "19748:3:13"
																												},
																												"nativeSrc": "19748:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "19748:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19742:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "19742:5:13"
																										},
																										"nativeSrc": "19742:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "19742:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19727:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "19727:6:13"
																								},
																								"nativeSrc": "19727:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19727:42:13"
																							},
																							"nativeSrc": "19727:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "19727:42:13"
																						},
																						{
																							"nativeSrc": "19786:24:13",
																							"nodeType": "YulAssignment",
																							"src": "19786:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19800:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "19800:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19808:1:13",
																										"nodeType": "YulLiteral",
																										"src": "19808:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19796:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19796:3:13"
																								},
																								"nativeSrc": "19796:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19796:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19786:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "19786:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19827:31:13",
																							"nodeType": "YulAssignment",
																							"src": "19827:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19844:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "19844:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19855:2:13",
																										"nodeType": "YulLiteral",
																										"src": "19855:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19840:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19840:3:13"
																								},
																								"nativeSrc": "19840:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19840:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19827:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "19827:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19675:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "19675:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19678:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "19678:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19672:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "19672:2:13"
																					},
																					"nativeSrc": "19672:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19672:14:13"
																				},
																				"nativeSrc": "19664:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19687:21:13",
																					"nodeType": "YulBlock",
																					"src": "19687:21:13",
																					"statements": [
																						{
																							"nativeSrc": "19689:17:13",
																							"nodeType": "YulAssignment",
																							"src": "19689:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19698:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "19698:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19701:4:13",
																										"nodeType": "YulLiteral",
																										"src": "19701:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19694:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "19694:3:13"
																								},
																								"nativeSrc": "19694:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19694:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19689:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "19689:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19668:3:13",
																					"nodeType": "YulBlock",
																					"src": "19668:3:13",
																					"statements": []
																				},
																				"src": "19664:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "19908:156:13",
																					"nodeType": "YulBlock",
																					"src": "19908:156:13",
																					"statements": [
																						{
																							"nativeSrc": "19926:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19926:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19953:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "19953:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19958:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "19958:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19949:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "19949:3:13"
																										},
																										"nativeSrc": "19949:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "19949:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19943:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "19943:5:13"
																								},
																								"nativeSrc": "19943:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19943:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19930:9:13",
																									"nodeType": "YulTypedName",
																									"src": "19930:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19993:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "19993:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20020:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "20020:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20035:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "20035:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20043:4:13",
																														"nodeType": "YulLiteral",
																														"src": "20043:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20031:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "20031:3:13"
																												},
																												"nativeSrc": "20031:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "20031:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20001:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "20001:18:13"
																										},
																										"nativeSrc": "20001:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "20001:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19986:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "19986:6:13"
																								},
																								"nativeSrc": "19986:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "19986:64:13"
																							},
																							"nativeSrc": "19986:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "19986:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19891:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "19891:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19900:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19900:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19888:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "19888:2:13"
																					},
																					"nativeSrc": "19888:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19888:19:13"
																				},
																				"nativeSrc": "19885:179:13",
																				"nodeType": "YulIf",
																				"src": "19885:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20084:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "20084:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20098:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "20098:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20106:1:13",
																											"nodeType": "YulLiteral",
																											"src": "20106:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20094:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "20094:3:13"
																									},
																									"nativeSrc": "20094:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "20094:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20110:1:13",
																									"nodeType": "YulLiteral",
																									"src": "20110:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20090:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20090:3:13"
																							},
																							"nativeSrc": "20090:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20090:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20077:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20077:6:13"
																					},
																					"nativeSrc": "20077:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20077:36:13"
																				},
																				"nativeSrc": "20077:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "20077:36:13"
																			}
																		]
																	},
																	"nativeSrc": "19505:618:13",
																	"nodeType": "YulCase",
																	"src": "19505:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19510:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19510:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20140:222:13",
																		"nodeType": "YulBlock",
																		"src": "20140:222:13",
																		"statements": [
																			{
																				"nativeSrc": "20154:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20154:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20167:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20167:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20158:5:13",
																						"nodeType": "YulTypedName",
																						"src": "20158:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20191:67:13",
																					"nodeType": "YulBlock",
																					"src": "20191:67:13",
																					"statements": [
																						{
																							"nativeSrc": "20209:35:13",
																							"nodeType": "YulAssignment",
																							"src": "20209:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20228:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "20228:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20233:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "20233:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20224:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "20224:3:13"
																										},
																										"nativeSrc": "20224:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "20224:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20218:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20218:5:13"
																								},
																								"nativeSrc": "20218:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "20218:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20209:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20209:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20184:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "20184:6:13"
																				},
																				"nativeSrc": "20181:77:13",
																				"nodeType": "YulIf",
																				"src": "20181:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20278:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "20278:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20337:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "20337:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20344:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "20344:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20284:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "20284:52:13"
																							},
																							"nativeSrc": "20284:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20284:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20271:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20271:6:13"
																					},
																					"nativeSrc": "20271:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20271:81:13"
																				},
																				"nativeSrc": "20271:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "20271:81:13"
																			}
																		]
																	},
																	"nativeSrc": "20132:230:13",
																	"nodeType": "YulCase",
																	"src": "20132:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19485:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19493:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19493:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19482:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19482:2:13"
																},
																"nativeSrc": "19482:14:13",
																"nodeType": "YulFunctionCall",
																"src": "19482:14:13"
															},
															"nativeSrc": "19475:887:13",
															"nodeType": "YulSwitch",
															"src": "19475:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18973:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19054:4:13",
														"nodeType": "YulTypedName",
														"src": "19054:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19060:3:13",
														"nodeType": "YulTypedName",
														"src": "19060:3:13",
														"type": ""
													}
												],
												"src": "18973:1395:13"
											},
											{
												"body": {
													"nativeSrc": "20432:40:13",
													"nodeType": "YulBlock",
													"src": "20432:40:13",
													"statements": [
														{
															"nativeSrc": "20443:22:13",
															"nodeType": "YulAssignment",
															"src": "20443:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20459:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20459:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20453:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20453:5:13"
																},
																"nativeSrc": "20453:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20453:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20443:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20443:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20374:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20415:5:13",
														"nodeType": "YulTypedName",
														"src": "20415:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20425:6:13",
														"nodeType": "YulTypedName",
														"src": "20425:6:13",
														"type": ""
													}
												],
												"src": "20374:98:13"
											},
											{
												"body": {
													"nativeSrc": "20573:73:13",
													"nodeType": "YulBlock",
													"src": "20573:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20590:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20590:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20595:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20595:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20583:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20583:6:13"
																},
																"nativeSrc": "20583:19:13",
																"nodeType": "YulFunctionCall",
																"src": "20583:19:13"
															},
															"nativeSrc": "20583:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "20583:19:13"
														},
														{
															"nativeSrc": "20611:29:13",
															"nodeType": "YulAssignment",
															"src": "20611:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20630:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20630:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20635:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20635:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20626:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20626:3:13"
																},
																"nativeSrc": "20626:14:13",
																"nodeType": "YulFunctionCall",
																"src": "20626:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20611:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "20611:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20478:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20545:3:13",
														"nodeType": "YulTypedName",
														"src": "20545:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20550:6:13",
														"nodeType": "YulTypedName",
														"src": "20550:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20561:11:13",
														"nodeType": "YulTypedName",
														"src": "20561:11:13",
														"type": ""
													}
												],
												"src": "20478:168:13"
											},
											{
												"body": {
													"nativeSrc": "20742:283:13",
													"nodeType": "YulBlock",
													"src": "20742:283:13",
													"statements": [
														{
															"nativeSrc": "20752:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20752:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20798:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20798:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20766:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "20766:31:13"
																},
																"nativeSrc": "20766:38:13",
																"nodeType": "YulFunctionCall",
																"src": "20766:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20756:6:13",
																	"nodeType": "YulTypedName",
																	"src": "20756:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20813:77:13",
															"nodeType": "YulAssignment",
															"src": "20813:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20878:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20878:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20883:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20883:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20820:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "20820:57:13"
																},
																"nativeSrc": "20820:70:13",
																"nodeType": "YulFunctionCall",
																"src": "20820:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20813:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20813:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20938:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20938:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20945:4:13",
																				"nodeType": "YulLiteral",
																				"src": "20945:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20934:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20934:3:13"
																		},
																		"nativeSrc": "20934:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20934:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20952:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20952:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20957:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20957:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20899:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "20899:34:13"
																},
																"nativeSrc": "20899:65:13",
																"nodeType": "YulFunctionCall",
																"src": "20899:65:13"
															},
															"nativeSrc": "20899:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "20899:65:13"
														},
														{
															"nativeSrc": "20973:46:13",
															"nodeType": "YulAssignment",
															"src": "20973:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20984:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20984:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21011:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21011:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20989:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "20989:21:13"
																		},
																		"nativeSrc": "20989:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20989:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20980:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20980:3:13"
																},
																"nativeSrc": "20980:39:13",
																"nodeType": "YulFunctionCall",
																"src": "20980:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20973:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20973:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20652:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20723:5:13",
														"nodeType": "YulTypedName",
														"src": "20723:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20730:3:13",
														"nodeType": "YulTypedName",
														"src": "20730:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20738:3:13",
														"nodeType": "YulTypedName",
														"src": "20738:3:13",
														"type": ""
													}
												],
												"src": "20652:373:13"
											},
											{
												"body": {
													"nativeSrc": "21231:440:13",
													"nodeType": "YulBlock",
													"src": "21231:440:13",
													"statements": [
														{
															"nativeSrc": "21241:27:13",
															"nodeType": "YulAssignment",
															"src": "21241:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21253:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21253:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21264:3:13",
																		"nodeType": "YulLiteral",
																		"src": "21264:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21249:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21249:3:13"
																},
																"nativeSrc": "21249:19:13",
																"nodeType": "YulFunctionCall",
																"src": "21249:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21241:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21241:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21322:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21322:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21335:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21335:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21346:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21346:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21331:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21331:3:13"
																		},
																		"nativeSrc": "21331:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21331:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21278:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21278:43:13"
																},
																"nativeSrc": "21278:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21278:71:13"
															},
															"nativeSrc": "21278:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21278:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21403:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21403:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21416:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21427:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21427:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21412:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21412:3:13"
																		},
																		"nativeSrc": "21412:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21412:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21359:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21359:43:13"
																},
																"nativeSrc": "21359:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21359:72:13"
															},
															"nativeSrc": "21359:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21359:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21485:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21498:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21498:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21509:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21509:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21494:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21494:3:13"
																		},
																		"nativeSrc": "21494:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21494:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21441:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21441:43:13"
																},
																"nativeSrc": "21441:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21441:72:13"
															},
															"nativeSrc": "21441:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21441:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21534:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21534:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21545:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21545:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21530:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21530:3:13"
																		},
																		"nativeSrc": "21530:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21530:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21554:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21554:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21560:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21560:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21550:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21550:3:13"
																		},
																		"nativeSrc": "21550:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21550:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21523:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21523:6:13"
																},
																"nativeSrc": "21523:48:13",
																"nodeType": "YulFunctionCall",
																"src": "21523:48:13"
															},
															"nativeSrc": "21523:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "21523:48:13"
														},
														{
															"nativeSrc": "21580:84:13",
															"nodeType": "YulAssignment",
															"src": "21580:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21650:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21650:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21659:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21659:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21588:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "21588:61:13"
																},
																"nativeSrc": "21588:76:13",
																"nodeType": "YulFunctionCall",
																"src": "21588:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21580:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21580:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21031:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21179:9:13",
														"nodeType": "YulTypedName",
														"src": "21179:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21191:6:13",
														"nodeType": "YulTypedName",
														"src": "21191:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21199:6:13",
														"nodeType": "YulTypedName",
														"src": "21199:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21207:6:13",
														"nodeType": "YulTypedName",
														"src": "21207:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21215:6:13",
														"nodeType": "YulTypedName",
														"src": "21215:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21226:4:13",
														"nodeType": "YulTypedName",
														"src": "21226:4:13",
														"type": ""
													}
												],
												"src": "21031:640:13"
											},
											{
												"body": {
													"nativeSrc": "21739:79:13",
													"nodeType": "YulBlock",
													"src": "21739:79:13",
													"statements": [
														{
															"nativeSrc": "21749:22:13",
															"nodeType": "YulAssignment",
															"src": "21749:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21764:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21764:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21758:5:13"
																},
																"nativeSrc": "21758:13:13",
																"nodeType": "YulFunctionCall",
																"src": "21758:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21749:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21749:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21806:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21806:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21780:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "21780:25:13"
																},
																"nativeSrc": "21780:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21780:32:13"
															},
															"nativeSrc": "21780:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "21780:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21677:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21717:6:13",
														"nodeType": "YulTypedName",
														"src": "21717:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21725:3:13",
														"nodeType": "YulTypedName",
														"src": "21725:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21733:5:13",
														"nodeType": "YulTypedName",
														"src": "21733:5:13",
														"type": ""
													}
												],
												"src": "21677:141:13"
											},
											{
												"body": {
													"nativeSrc": "21900:273:13",
													"nodeType": "YulBlock",
													"src": "21900:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21946:83:13",
																"nodeType": "YulBlock",
																"src": "21946:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21948:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "21948:77:13"
																			},
																			"nativeSrc": "21948:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21948:79:13"
																		},
																		"nativeSrc": "21948:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21948:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21921:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21921:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21930:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21930:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21917:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21917:3:13"
																		},
																		"nativeSrc": "21917:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21917:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21942:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21942:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21913:3:13"
																},
																"nativeSrc": "21913:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21913:32:13"
															},
															"nativeSrc": "21910:119:13",
															"nodeType": "YulIf",
															"src": "21910:119:13"
														},
														{
															"nativeSrc": "22039:127:13",
															"nodeType": "YulBlock",
															"src": "22039:127:13",
															"statements": [
																{
																	"nativeSrc": "22054:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22054:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22068:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22068:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22058:6:13",
																			"nodeType": "YulTypedName",
																			"src": "22058:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22083:73:13",
																	"nodeType": "YulAssignment",
																	"src": "22083:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22128:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "22128:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22139:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "22139:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22124:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "22124:3:13"
																				},
																				"nativeSrc": "22124:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22124:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22148:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "22148:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22093:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "22093:30:13"
																		},
																		"nativeSrc": "22093:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22093:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22083:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "22083:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21824:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21870:9:13",
														"nodeType": "YulTypedName",
														"src": "21870:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21881:7:13",
														"nodeType": "YulTypedName",
														"src": "21881:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21893:6:13",
														"nodeType": "YulTypedName",
														"src": "21893:6:13",
														"type": ""
													}
												],
												"src": "21824:349:13"
											},
											{
												"body": {
													"nativeSrc": "22293:34:13",
													"nodeType": "YulBlock",
													"src": "22293:34:13",
													"statements": [
														{
															"nativeSrc": "22303:18:13",
															"nodeType": "YulAssignment",
															"src": "22303:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "22318:3:13",
																"nodeType": "YulIdentifier",
																"src": "22318:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22303:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "22303:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "22179:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22265:3:13",
														"nodeType": "YulTypedName",
														"src": "22265:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22270:6:13",
														"nodeType": "YulTypedName",
														"src": "22270:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22281:11:13",
														"nodeType": "YulTypedName",
														"src": "22281:11:13",
														"type": ""
													}
												],
												"src": "22179:148:13"
											},
											{
												"body": {
													"nativeSrc": "22443:280:13",
													"nodeType": "YulBlock",
													"src": "22443:280:13",
													"statements": [
														{
															"nativeSrc": "22453:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "22453:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22500:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "22500:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22467:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "22467:32:13"
																},
																"nativeSrc": "22467:39:13",
																"nodeType": "YulFunctionCall",
																"src": "22467:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22457:6:13",
																	"nodeType": "YulTypedName",
																	"src": "22457:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22515:96:13",
															"nodeType": "YulAssignment",
															"src": "22515:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22599:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22599:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22604:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22604:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22522:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "22522:76:13"
																},
																"nativeSrc": "22522:89:13",
																"nodeType": "YulFunctionCall",
																"src": "22522:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22515:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22515:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22659:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "22659:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22666:4:13",
																				"nodeType": "YulLiteral",
																				"src": "22666:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22655:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22655:3:13"
																		},
																		"nativeSrc": "22655:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22655:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22673:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22673:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22678:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22678:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22620:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "22620:34:13"
																},
																"nativeSrc": "22620:65:13",
																"nodeType": "YulFunctionCall",
																"src": "22620:65:13"
															},
															"nativeSrc": "22620:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "22620:65:13"
														},
														{
															"nativeSrc": "22694:23:13",
															"nodeType": "YulAssignment",
															"src": "22694:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22705:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22705:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22710:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22710:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22701:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22701:3:13"
																},
																"nativeSrc": "22701:16:13",
																"nodeType": "YulFunctionCall",
																"src": "22701:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22694:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22694:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "22333:390:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22424:5:13",
														"nodeType": "YulTypedName",
														"src": "22424:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22431:3:13",
														"nodeType": "YulTypedName",
														"src": "22431:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22439:3:13",
														"nodeType": "YulTypedName",
														"src": "22439:3:13",
														"type": ""
													}
												],
												"src": "22333:390:13"
											},
											{
												"body": {
													"nativeSrc": "22913:251:13",
													"nodeType": "YulBlock",
													"src": "22913:251:13",
													"statements": [
														{
															"nativeSrc": "22924:102:13",
															"nodeType": "YulAssignment",
															"src": "22924:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23013:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23013:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23022:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23022:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22931:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "22931:81:13"
																},
																"nativeSrc": "22931:95:13",
																"nodeType": "YulFunctionCall",
																"src": "22931:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22924:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22924:3:13"
																}
															]
														},
														{
															"nativeSrc": "23036:102:13",
															"nodeType": "YulAssignment",
															"src": "23036:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23125:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23125:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23134:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23134:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23043:81:13",
																	"nodeType": "YulIdentifier",
																	"src": "23043:81:13"
																},
																"nativeSrc": "23043:95:13",
																"nodeType": "YulFunctionCall",
																"src": "23043:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23036:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23036:3:13"
																}
															]
														},
														{
															"nativeSrc": "23148:10:13",
															"nodeType": "YulAssignment",
															"src": "23148:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "23155:3:13",
																"nodeType": "YulIdentifier",
																"src": "23155:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23148:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23148:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "22729:435:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22884:3:13",
														"nodeType": "YulTypedName",
														"src": "22884:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22890:6:13",
														"nodeType": "YulTypedName",
														"src": "22890:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22898:6:13",
														"nodeType": "YulTypedName",
														"src": "22898:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22909:3:13",
														"nodeType": "YulTypedName",
														"src": "22909:3:13",
														"type": ""
													}
												],
												"src": "22729:435:13"
											},
											{
												"body": {
													"nativeSrc": "23296:206:13",
													"nodeType": "YulBlock",
													"src": "23296:206:13",
													"statements": [
														{
															"nativeSrc": "23306:26:13",
															"nodeType": "YulAssignment",
															"src": "23306:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23318:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23318:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23329:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23329:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23314:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23314:3:13"
																},
																"nativeSrc": "23314:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23314:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23306:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23306:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23386:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23386:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23399:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23399:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23410:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23410:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23395:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23395:3:13"
																		},
																		"nativeSrc": "23395:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23395:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23342:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23342:43:13"
																},
																"nativeSrc": "23342:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23342:71:13"
															},
															"nativeSrc": "23342:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23342:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23467:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23480:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23480:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23491:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23491:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23476:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23476:3:13"
																		},
																		"nativeSrc": "23476:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23476:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23423:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23423:43:13"
																},
																"nativeSrc": "23423:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23423:72:13"
															},
															"nativeSrc": "23423:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23423:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23170:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23260:9:13",
														"nodeType": "YulTypedName",
														"src": "23260:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23272:6:13",
														"nodeType": "YulTypedName",
														"src": "23272:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23280:6:13",
														"nodeType": "YulTypedName",
														"src": "23280:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23291:4:13",
														"nodeType": "YulTypedName",
														"src": "23291:4:13",
														"type": ""
													}
												],
												"src": "23170:332:13"
											},
											{
												"body": {
													"nativeSrc": "23536:152:13",
													"nodeType": "YulBlock",
													"src": "23536:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23553:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23553:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23556:77:13",
																		"nodeType": "YulLiteral",
																		"src": "23556:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23546:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23546:6:13"
																},
																"nativeSrc": "23546:88:13",
																"nodeType": "YulFunctionCall",
																"src": "23546:88:13"
															},
															"nativeSrc": "23546:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "23546:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23650:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23650:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23653:4:13",
																		"nodeType": "YulLiteral",
																		"src": "23653:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23643:6:13"
																},
																"nativeSrc": "23643:15:13",
																"nodeType": "YulFunctionCall",
																"src": "23643:15:13"
															},
															"nativeSrc": "23643:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "23643:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23674:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23674:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23677:4:13",
																		"nodeType": "YulLiteral",
																		"src": "23677:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23667:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23667:6:13"
																},
																"nativeSrc": "23667:15:13",
																"nodeType": "YulFunctionCall",
																"src": "23667:15:13"
															},
															"nativeSrc": "23667:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "23667:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "23508:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "23508:180:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to change authori\")\n\n        mstore(add(memPtr, 32), \"ty\")\n\n    }\n\n    function abi_encode_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to set base URI\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806355f804b311610095578063a22cb46511610064578063a22cb465146102a6578063b88d4fde146102c2578063c87b56dd146102de578063e985e9c51461030e576100fe565b806355f804b31461020c5780636352211e1461022857806370a082311461025857806395d89b4114610288576100fe565b806323b872dd116100d157806323b872dd1461019c57806340d097c3146101b857806342842e0e146101d457806354797b8f146101f0576100fe565b806301ffc9a71461010257806306fdde0314610132578063081812fc14610150578063095ea7b314610180575b5f80fd5b61011c600480360381019061011791906118f3565b61033e565b6040516101299190611938565b60405180910390f35b61013a61041f565b60405161014791906119db565b60405180910390f35b61016a60048036038101906101659190611a2e565b6104ae565b6040516101779190611a98565b60405180910390f35b61019a60048036038101906101959190611adb565b6104c9565b005b6101b660048036038101906101b19190611b19565b6104df565b005b6101d260048036038101906101cd9190611b69565b6105de565b005b6101ee60048036038101906101e99190611b19565b610692565b005b61020a60048036038101906102059190611b69565b6106b1565b005b61022660048036038101906102219190611cc0565b610783565b005b610242600480360381019061023d9190611a2e565b610825565b60405161024f9190611a98565b60405180910390f35b610272600480360381019061026d9190611b69565b610836565b60405161027f9190611d16565b60405180910390f35b6102906108ec565b60405161029d91906119db565b60405180910390f35b6102c060048036038101906102bb9190611d59565b61097c565b005b6102dc60048036038101906102d79190611e35565b610992565b005b6102f860048036038101906102f39190611a2e565b6109af565b60405161030591906119db565b60405180910390f35b61032860048036038101906103239190611eb5565b6109c1565b6040516103359190611938565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610418575061041782610a4f565b5b9050919050565b60605f805461042d90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611f20565b80156104a45780601f1061047b576101008083540402835291602001916104a4565b820191905f5260205f20905b81548152906001019060200180831161048757829003601f168201915b5050505050905090565b5f6104b882610ab8565b506104c282610b3e565b9050919050565b6104db82826104d6610b77565b610b7e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054f575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105469190611a98565b60405180910390fd5b5f610562838361055d610b77565b610b90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105cf93929190611f50565b60405180910390fd5b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066490611fcf565b60405180910390fd5b6106776006610d9b565b5f6106826006610daf565b905061068e8282610dbb565b5050565b6106ac83838360405180602001604052805f815250610992565b505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610740576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107379061205d565b60405180910390fd5b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610809906120c5565b60405180910390fd5b80600790816108219190612280565b5050565b5f61082f82610ab8565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a7575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161089e9190611a98565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600180546108fb90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461092790611f20565b80156109725780601f1061094957610100808354040283529160200191610972565b820191905f5260205f20905b81548152906001019060200180831161095557829003601f168201915b5050505050905090565b61098e610987610b77565b8383610dd8565b5050565b61099d8484846104df565b6109a984848484610f41565b50505050565b60606109ba826110f3565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ac383611159565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b2c9190611d16565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b8b8383836001611192565b505050565b5f80610b9b84611159565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bdc57610bdb818486611351565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c6757610c1b5f855f80611192565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ce657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b610dd4828260405180602001604052805f815250611414565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e4857816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e3f9190611a98565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f349190611938565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156110ed578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f84610b77565b8685856040518563ffffffff1660e01b8152600401610fa694939291906123a1565b6020604051808303815f875af1925050508015610fe157506040513d601f19601f82011682018060405250810190610fde91906123ff565b60015b611062573d805f811461100f576040519150601f19603f3d011682016040523d82523d5f602084013e611014565b606091505b505f81510361105a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110519190611a98565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110eb57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110e29190611a98565b60405180910390fd5b505b50505050565b60606110fe82610ab8565b505f61110861142f565b90505f8151116111265760405180602001604052805f815250611151565b80611130846114bf565b604051602001611141929190612464565b6040516020818303038152906040525b915050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111ca57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112fc575f6111d984610ab8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561124357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611256575061125481846109c1565b155b1561129857826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161128f9190611a98565b60405180910390fd5b81156112fa57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61135c838383611589565b61140f575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113c79190611d16565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611406929190612487565b60405180910390fd5b505050565b61141e8383611649565b61142a5f848484610f41565b505050565b60606007805461143e90611f20565b80601f016020809104026020016040519081016040528092919081815260200182805461146a90611f20565b80156114b55780601f1061148c576101008083540402835291602001916114b5565b820191905f5260205f20905b81548152906001019060200180831161149857829003601f168201915b5050505050905090565b60605f60016114cd8461173c565b0190505f8167ffffffffffffffff8111156114eb576114ea611b9c565b5b6040519080825280601f01601f19166020018201604052801561151d5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561157e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611573576115726124ae565b5b0494505f850361152a575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561164057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611601575061160084846109c1565b5b8061163f57508273ffffffffffffffffffffffffffffffffffffffff1661162783610b3e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116b9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116b09190611a98565b60405180910390fd5b5f6116c583835f610b90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611737575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161172e9190611a98565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611798577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161178e5761178d6124ae565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117d5576d04ee2d6d415b85acef810000000083816117cb576117ca6124ae565b5b0492506020810190505b662386f26fc10000831061180457662386f26fc1000083816117fa576117f96124ae565b5b0492506010810190505b6305f5e100831061182d576305f5e1008381611823576118226124ae565b5b0492506008810190505b6127108310611852576127108381611848576118476124ae565b5b0492506004810190505b60648310611875576064838161186b5761186a6124ae565b5b0492506002810190505b600a8310611884576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118d28161189e565b81146118dc575f80fd5b50565b5f813590506118ed816118c9565b92915050565b5f6020828403121561190857611907611896565b5b5f611915848285016118df565b91505092915050565b5f8115159050919050565b6119328161191e565b82525050565b5f60208201905061194b5f830184611929565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561198857808201518184015260208101905061196d565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6119ad82611951565b6119b7818561195b565b93506119c781856020860161196b565b6119d081611993565b840191505092915050565b5f6020820190508181035f8301526119f381846119a3565b905092915050565b5f819050919050565b611a0d816119fb565b8114611a17575f80fd5b50565b5f81359050611a2881611a04565b92915050565b5f60208284031215611a4357611a42611896565b5b5f611a5084828501611a1a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a8282611a59565b9050919050565b611a9281611a78565b82525050565b5f602082019050611aab5f830184611a89565b92915050565b611aba81611a78565b8114611ac4575f80fd5b50565b5f81359050611ad581611ab1565b92915050565b5f8060408385031215611af157611af0611896565b5b5f611afe85828601611ac7565b9250506020611b0f85828601611a1a565b9150509250929050565b5f805f60608486031215611b3057611b2f611896565b5b5f611b3d86828701611ac7565b9350506020611b4e86828701611ac7565b9250506040611b5f86828701611a1a565b9150509250925092565b5f60208284031215611b7e57611b7d611896565b5b5f611b8b84828501611ac7565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611bd282611993565b810181811067ffffffffffffffff82111715611bf157611bf0611b9c565b5b80604052505050565b5f611c0361188d565b9050611c0f8282611bc9565b919050565b5f67ffffffffffffffff821115611c2e57611c2d611b9c565b5b611c3782611993565b9050602081019050919050565b828183375f83830152505050565b5f611c64611c5f84611c14565b611bfa565b905082815260208101848484011115611c8057611c7f611b98565b5b611c8b848285611c44565b509392505050565b5f82601f830112611ca757611ca6611b94565b5b8135611cb7848260208601611c52565b91505092915050565b5f60208284031215611cd557611cd4611896565b5b5f82013567ffffffffffffffff811115611cf257611cf161189a565b5b611cfe84828501611c93565b91505092915050565b611d10816119fb565b82525050565b5f602082019050611d295f830184611d07565b92915050565b611d388161191e565b8114611d42575f80fd5b50565b5f81359050611d5381611d2f565b92915050565b5f8060408385031215611d6f57611d6e611896565b5b5f611d7c85828601611ac7565b9250506020611d8d85828601611d45565b9150509250929050565b5f67ffffffffffffffff821115611db157611db0611b9c565b5b611dba82611993565b9050602081019050919050565b5f611dd9611dd484611d97565b611bfa565b905082815260208101848484011115611df557611df4611b98565b5b611e00848285611c44565b509392505050565b5f82601f830112611e1c57611e1b611b94565b5b8135611e2c848260208601611dc7565b91505092915050565b5f805f8060808587031215611e4d57611e4c611896565b5b5f611e5a87828801611ac7565b9450506020611e6b87828801611ac7565b9350506040611e7c87828801611a1a565b925050606085013567ffffffffffffffff811115611e9d57611e9c61189a565b5b611ea987828801611e08565b91505092959194509250565b5f8060408385031215611ecb57611eca611896565b5b5f611ed885828601611ac7565b9250506020611ee985828601611ac7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f3757607f821691505b602082108103611f4a57611f49611ef3565b5b50919050565b5f606082019050611f635f830186611a89565b611f706020830185611d07565b611f7d6040830184611a89565b949350505050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f611fb960168361195b565b9150611fc482611f85565b602082019050919050565b5f6020820190508181035f830152611fe681611fad565b9050919050565b7f4e6f7420617574686f72697a656420746f206368616e676520617574686f72695f8201527f7479000000000000000000000000000000000000000000000000000000000000602082015250565b5f61204760228361195b565b915061205282611fed565b604082019050919050565b5f6020820190508181035f8301526120748161203b565b9050919050565b7f4e6f7420617574686f72697a656420746f2073657420626173652055524900005f82015250565b5f6120af601e8361195b565b91506120ba8261207b565b602082019050919050565b5f6020820190508181035f8301526120dc816120a3565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261213f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612104565b6121498683612104565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61218461217f61217a846119fb565b612161565b6119fb565b9050919050565b5f819050919050565b61219d8361216a565b6121b16121a98261218b565b848454612110565b825550505050565b5f90565b6121c56121b9565b6121d0818484612194565b505050565b5b818110156121f3576121e85f826121bd565b6001810190506121d6565b5050565b601f82111561223857612209816120e3565b612212846120f5565b81016020851015612221578190505b61223561222d856120f5565b8301826121d5565b50505b505050565b5f82821c905092915050565b5f6122585f198460080261223d565b1980831691505092915050565b5f6122708383612249565b9150826002028217905092915050565b61228982611951565b67ffffffffffffffff8111156122a2576122a1611b9c565b5b6122ac8254611f20565b6122b78282856121f7565b5f60209050601f8311600181146122e8575f84156122d6578287015190505b6122e08582612265565b865550612347565b601f1984166122f6866120e3565b5f5b8281101561231d578489015182556001820191506020850194506020810190506122f8565b8683101561233a5784890151612336601f891682612249565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f6123738261234f565b61237d8185612359565b935061238d81856020860161196b565b61239681611993565b840191505092915050565b5f6080820190506123b45f830187611a89565b6123c16020830186611a89565b6123ce6040830185611d07565b81810360608301526123e08184612369565b905095945050505050565b5f815190506123f9816118c9565b92915050565b5f6020828403121561241457612413611896565b5b5f612421848285016123eb565b91505092915050565b5f81905092915050565b5f61243e82611951565b612448818561242a565b935061245881856020860161196b565b80840191505092915050565b5f61246f8285612434565b915061247b8284612434565b91508190509392505050565b5f60408201905061249a5f830185611a89565b6124a76020830184611d07565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220a644b78c6cabba2e00fdee45996d29bf12aa54fa47d921a2dbe016070655ac7764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x288 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x54797B8F EQ PUSH2 0x1F0 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x408 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x418 JUMPI POP PUSH2 0x417 DUP3 PUSH2 0xA4F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4B8 DUP3 PUSH2 0xAB8 JUMP JUMPDEST POP PUSH2 0x4C2 DUP3 PUSH2 0xB3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DB DUP3 DUP3 PUSH2 0x4D6 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x562 DUP4 DUP4 PUSH2 0x55D PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D8 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x664 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x677 PUSH1 0x6 PUSH2 0xD9B JUMP JUMPDEST PUSH0 PUSH2 0x682 PUSH1 0x6 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP PUSH2 0x68E DUP3 DUP3 PUSH2 0xDBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6AC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x992 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x737 SWAP1 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x2280 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82F DUP3 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8FB SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x927 SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x972 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x949 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x972 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x955 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98E PUSH2 0x987 PUSH2 0xB77 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99D DUP5 DUP5 DUP5 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x9A9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF41 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9BA DUP3 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAC3 DUP4 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB35 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1192 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB9B DUP5 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDC JUMPI PUSH2 0xBDB DUP2 DUP5 DUP7 PUSH2 0x1351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC67 JUMPI PUSH2 0xC1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1414 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE48 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x10ED JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF84 PUSH2 0xB77 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFE1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1062 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x105A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x10EB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10FE DUP3 PUSH2 0xAB8 JUMP JUMPDEST POP PUSH0 PUSH2 0x1108 PUSH2 0x142F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1151 JUMP JUMPDEST DUP1 PUSH2 0x1130 DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1141 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11CA JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12FC JUMPI PUSH0 PUSH2 0x11D9 DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1243 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1256 JUMPI POP PUSH2 0x1254 DUP2 DUP5 PUSH2 0x9C1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1298 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x12FA JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x135C DUP4 DUP4 DUP4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x140F JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP3 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x141E DUP4 DUP4 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x142A PUSH0 DUP5 DUP5 DUP5 PUSH2 0xF41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x143E SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x146A SWAP1 PUSH2 0x1F20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x148C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1498 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x14CD DUP5 PUSH2 0x173C JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1573 JUMPI PUSH2 0x1572 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x152A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1601 JUMPI POP PUSH2 0x1600 DUP5 DUP5 PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x163F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1627 DUP4 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B0 SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x16C5 DUP4 DUP4 PUSH0 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x1A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1798 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x178E JUMPI PUSH2 0x178D PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x17D5 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1804 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x182D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1823 JUMPI PUSH2 0x1822 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1852 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1875 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x186B JUMPI PUSH2 0x186A PUSH2 0x24AE JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1884 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP2 EQ PUSH2 0x18DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18ED DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1915 DUP5 DUP3 DUP6 ADD PUSH2 0x18DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1932 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194B PUSH0 DUP4 ADD DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1988 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x196D JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AD DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x19B7 DUP2 DUP6 PUSH2 0x195B JUMP JUMPDEST SWAP4 POP PUSH2 0x19C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x1993 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F3 DUP2 DUP5 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A28 DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A50 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A82 DUP3 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A92 DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAB PUSH0 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH2 0x1A78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD5 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFE DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B0F DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B30 JUMPI PUSH2 0x1B2F PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3D DUP7 DUP3 DUP8 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B4E DUP7 DUP3 DUP8 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B5F DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8B DUP5 DUP3 DUP6 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1BD2 DUP3 PUSH2 0x1993 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C03 PUSH2 0x188D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C0F DUP3 DUP3 PUSH2 0x1BC9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C2E JUMPI PUSH2 0x1C2D PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x1C37 DUP3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C64 PUSH2 0x1C5F DUP5 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C80 JUMPI PUSH2 0x1C7F PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8B DUP5 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CB7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD5 JUMPI PUSH2 0x1CD4 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CF1 PUSH2 0x189A JUMP JUMPDEST JUMPDEST PUSH2 0x1CFE DUP5 DUP3 DUP6 ADD PUSH2 0x1C93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D10 DUP2 PUSH2 0x19FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D29 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D38 DUP2 PUSH2 0x191E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D53 DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8D DUP6 DUP3 DUP7 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x1DBA DUP3 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD9 PUSH2 0x1DD4 DUP5 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x1BFA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF4 PUSH2 0x1B98 JUMP JUMPDEST JUMPDEST PUSH2 0x1E00 DUP5 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E2C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x1E4C PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E5A DUP8 DUP3 DUP9 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E6B DUP8 DUP3 DUP9 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E7C DUP8 DUP3 DUP9 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x189A JUMP JUMPDEST JUMPDEST PUSH2 0x1EA9 DUP8 DUP3 DUP9 ADD PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECB JUMPI PUSH2 0x1ECA PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ED8 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F37 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x1EF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F63 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x1F70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0x1F7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB9 PUSH1 0x16 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC4 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FE6 DUP2 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206368616E676520617574686F7269 PUSH0 DUP3 ADD MSTORE PUSH32 0x7479000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2047 PUSH1 0x22 DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x2052 DUP3 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2074 DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F207365742062617365205552490000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AF PUSH1 0x1E DUP4 PUSH2 0x195B JUMP JUMPDEST SWAP2 POP PUSH2 0x20BA DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DC DUP2 PUSH2 0x20A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x213F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x2149 DUP7 DUP4 PUSH2 0x2104 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2184 PUSH2 0x217F PUSH2 0x217A DUP5 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP4 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x21B1 PUSH2 0x21A9 DUP3 PUSH2 0x218B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2110 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21C5 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x21D0 DUP2 DUP5 DUP5 PUSH2 0x2194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21F3 JUMPI PUSH2 0x21E8 PUSH0 DUP3 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2209 DUP2 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x2212 DUP5 PUSH2 0x20F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2221 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2235 PUSH2 0x222D DUP6 PUSH2 0x20F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x223D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2270 DUP4 DUP4 PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2289 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A2 JUMPI PUSH2 0x22A1 PUSH2 0x1B9C JUMP JUMPDEST JUMPDEST PUSH2 0x22AC DUP3 SLOAD PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x22B7 DUP3 DUP3 DUP6 PUSH2 0x21F7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22E8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22D6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22E0 DUP6 DUP3 PUSH2 0x2265 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22F6 DUP7 PUSH2 0x20E3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x233A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2336 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2249 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2373 DUP3 PUSH2 0x234F JUMP JUMPDEST PUSH2 0x237D DUP2 DUP6 PUSH2 0x2359 JUMP JUMPDEST SWAP4 POP PUSH2 0x238D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST PUSH2 0x2396 DUP2 PUSH2 0x1993 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23B4 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x23C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x23CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D07 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x23E0 DUP2 DUP5 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23F9 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2414 JUMPI PUSH2 0x2413 PUSH2 0x1896 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2421 DUP5 DUP3 DUP6 ADD PUSH2 0x23EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x243E DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x2448 DUP2 DUP6 PUSH2 0x242A JUMP JUMPDEST SWAP4 POP PUSH2 0x2458 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x246F DUP3 DUP6 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x247B DUP3 DUP5 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x249A PUSH0 DUP4 ADD DUP6 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x24A7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PREVRANDAO 0xB7 DUP13 PUSH13 0xABBA2E00FDEE45996D29BF12AA SLOAD STATICCALL SELFBALANCE 0xD9 0x21 LOG2 0xDB 0xE0 AND SMOD MOD SSTORE 0xAC PUSH24 0x64736F6C6343000818003300000000000000000000000000 ",
							"sourceMap": "170:1732:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1134:248:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1699:200:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;711:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1489:135:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1134:248:12:-;1203:17;;;;;;;;;;;1189:31;;:10;:31;;;1181:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1257:27;:15;:25;:27::i;:::-;1294:18;1315:25;:15;:23;:25::i;:::-;1294:46;;1350:25;1360:2;1364:10;1350:9;:25::i;:::-;1171:211;1134:248;:::o;4787:132:1:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1699:200:12:-;1794:17;;;;;;;;;;;1780:31;;:10;:31;;;1772:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1880:12;1860:17;;:32;;;;;;;;;;;;;;;;;;1699:200;:::o;711:176::-;793:17;;;;;;;;;;;779:31;;:10;:31;;;771:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;873:7;855:15;:25;;;;;;:::i;:::-;;711:176;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1489:135:12:-;1562:13;1594:23;1609:7;1594:14;:23::i;:::-;1587:30;;1489:135;;;:::o;3928:153:1:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;10633:100:1:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;949:106:12:-;1001:13;1033:15;1026:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:106;:::o;637:698:7:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:1:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;12214:916:10:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:117::-;5959:1;5956;5949:12;5973:117;6082:1;6079;6072:12;6096:180;6144:77;6141:1;6134:88;6241:4;6238:1;6231:15;6265:4;6262:1;6255:15;6282:281;6365:27;6387:4;6365:27;:::i;:::-;6357:6;6353:40;6495:6;6483:10;6480:22;6459:18;6447:10;6444:34;6441:62;6438:88;;;6506:18;;:::i;:::-;6438:88;6546:10;6542:2;6535:22;6325:238;6282:281;;:::o;6569:129::-;6603:6;6630:20;;:::i;:::-;6620:30;;6659:33;6687:4;6679:6;6659:33;:::i;:::-;6569:129;;;:::o;6704:308::-;6766:4;6856:18;6848:6;6845:30;6842:56;;;6878:18;;:::i;:::-;6842:56;6916:29;6938:6;6916:29;:::i;:::-;6908:37;;7000:4;6994;6990:15;6982:23;;6704:308;;;:::o;7018:146::-;7115:6;7110:3;7105;7092:30;7156:1;7147:6;7142:3;7138:16;7131:27;7018:146;;;:::o;7170:425::-;7248:5;7273:66;7289:49;7331:6;7289:49;:::i;:::-;7273:66;:::i;:::-;7264:75;;7362:6;7355:5;7348:21;7400:4;7393:5;7389:16;7438:3;7429:6;7424:3;7420:16;7417:25;7414:112;;;7445:79;;:::i;:::-;7414:112;7535:54;7582:6;7577:3;7572;7535:54;:::i;:::-;7254:341;7170:425;;;;;:::o;7615:340::-;7671:5;7720:3;7713:4;7705:6;7701:17;7697:27;7687:122;;7728:79;;:::i;:::-;7687:122;7845:6;7832:20;7870:79;7945:3;7937:6;7930:4;7922:6;7918:17;7870:79;:::i;:::-;7861:88;;7677:278;7615:340;;;;:::o;7961:509::-;8030:6;8079:2;8067:9;8058:7;8054:23;8050:32;8047:119;;;8085:79;;:::i;:::-;8047:119;8233:1;8222:9;8218:17;8205:31;8263:18;8255:6;8252:30;8249:117;;;8285:79;;:::i;:::-;8249:117;8390:63;8445:7;8436:6;8425:9;8421:22;8390:63;:::i;:::-;8380:73;;8176:287;7961:509;;;;:::o;8476:118::-;8563:24;8581:5;8563:24;:::i;:::-;8558:3;8551:37;8476:118;;:::o;8600:222::-;8693:4;8731:2;8720:9;8716:18;8708:26;;8744:71;8812:1;8801:9;8797:17;8788:6;8744:71;:::i;:::-;8600:222;;;;:::o;8828:116::-;8898:21;8913:5;8898:21;:::i;:::-;8891:5;8888:32;8878:60;;8934:1;8931;8924:12;8878:60;8828:116;:::o;8950:133::-;8993:5;9031:6;9018:20;9009:29;;9047:30;9071:5;9047:30;:::i;:::-;8950:133;;;;:::o;9089:468::-;9154:6;9162;9211:2;9199:9;9190:7;9186:23;9182:32;9179:119;;;9217:79;;:::i;:::-;9179:119;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:50;9532:7;9523:6;9512:9;9508:22;9490:50;:::i;:::-;9480:60;;9435:115;9089:468;;;;;:::o;9563:307::-;9624:4;9714:18;9706:6;9703:30;9700:56;;;9736:18;;:::i;:::-;9700:56;9774:29;9796:6;9774:29;:::i;:::-;9766:37;;9858:4;9852;9848:15;9840:23;;9563:307;;;:::o;9876:423::-;9953:5;9978:65;9994:48;10035:6;9994:48;:::i;:::-;9978:65;:::i;:::-;9969:74;;10066:6;10059:5;10052:21;10104:4;10097:5;10093:16;10142:3;10133:6;10128:3;10124:16;10121:25;10118:112;;;10149:79;;:::i;:::-;10118:112;10239:54;10286:6;10281:3;10276;10239:54;:::i;:::-;9959:340;9876:423;;;;;:::o;10318:338::-;10373:5;10422:3;10415:4;10407:6;10403:17;10399:27;10389:122;;10430:79;;:::i;:::-;10389:122;10547:6;10534:20;10572:78;10646:3;10638:6;10631:4;10623:6;10619:17;10572:78;:::i;:::-;10563:87;;10379:277;10318:338;;;;:::o;10662:943::-;10757:6;10765;10773;10781;10830:3;10818:9;10809:7;10805:23;10801:33;10798:120;;;10837:79;;:::i;:::-;10798:120;10957:1;10982:53;11027:7;11018:6;11007:9;11003:22;10982:53;:::i;:::-;10972:63;;10928:117;11084:2;11110:53;11155:7;11146:6;11135:9;11131:22;11110:53;:::i;:::-;11100:63;;11055:118;11212:2;11238:53;11283:7;11274:6;11263:9;11259:22;11238:53;:::i;:::-;11228:63;;11183:118;11368:2;11357:9;11353:18;11340:32;11399:18;11391:6;11388:30;11385:117;;;11421:79;;:::i;:::-;11385:117;11526:62;11580:7;11571:6;11560:9;11556:22;11526:62;:::i;:::-;11516:72;;11311:287;10662:943;;;;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:442::-;12752:4;12790:2;12779:9;12775:18;12767:26;;12803:71;12871:1;12860:9;12856:17;12847:6;12803:71;:::i;:::-;12884:72;12952:2;12941:9;12937:18;12928:6;12884:72;:::i;:::-;12966;13034:2;13023:9;13019:18;13010:6;12966:72;:::i;:::-;12603:442;;;;;;:::o;13051:172::-;13191:24;13187:1;13179:6;13175:14;13168:48;13051:172;:::o;13229:366::-;13371:3;13392:67;13456:2;13451:3;13392:67;:::i;:::-;13385:74;;13468:93;13557:3;13468:93;:::i;:::-;13586:2;13581:3;13577:12;13570:19;;13229:366;;;:::o;13601:419::-;13767:4;13805:2;13794:9;13790:18;13782:26;;13854:9;13848:4;13844:20;13840:1;13829:9;13825:17;13818:47;13882:131;14008:4;13882:131;:::i;:::-;13874:139;;13601:419;;;:::o;14026:221::-;14166:34;14162:1;14154:6;14150:14;14143:58;14235:4;14230:2;14222:6;14218:15;14211:29;14026:221;:::o;14253:366::-;14395:3;14416:67;14480:2;14475:3;14416:67;:::i;:::-;14409:74;;14492:93;14581:3;14492:93;:::i;:::-;14610:2;14605:3;14601:12;14594:19;;14253:366;;;:::o;14625:419::-;14791:4;14829:2;14818:9;14814:18;14806:26;;14878:9;14872:4;14868:20;14864:1;14853:9;14849:17;14842:47;14906:131;15032:4;14906:131;:::i;:::-;14898:139;;14625:419;;;:::o;15050:180::-;15190:32;15186:1;15178:6;15174:14;15167:56;15050:180;:::o;15236:366::-;15378:3;15399:67;15463:2;15458:3;15399:67;:::i;:::-;15392:74;;15475:93;15564:3;15475:93;:::i;:::-;15593:2;15588:3;15584:12;15577:19;;15236:366;;;:::o;15608:419::-;15774:4;15812:2;15801:9;15797:18;15789:26;;15861:9;15855:4;15851:20;15847:1;15836:9;15832:17;15825:47;15889:131;16015:4;15889:131;:::i;:::-;15881:139;;15608:419;;;:::o;16033:141::-;16082:4;16105:3;16097:11;;16128:3;16125:1;16118:14;16162:4;16159:1;16149:18;16141:26;;16033:141;;;:::o;16180:93::-;16217:6;16264:2;16259;16252:5;16248:14;16244:23;16234:33;;16180:93;;;:::o;16279:107::-;16323:8;16373:5;16367:4;16363:16;16342:37;;16279:107;;;;:::o;16392:393::-;16461:6;16511:1;16499:10;16495:18;16534:97;16564:66;16553:9;16534:97;:::i;:::-;16652:39;16682:8;16671:9;16652:39;:::i;:::-;16640:51;;16724:4;16720:9;16713:5;16709:21;16700:30;;16773:4;16763:8;16759:19;16752:5;16749:30;16739:40;;16468:317;;16392:393;;;;;:::o;16791:60::-;16819:3;16840:5;16833:12;;16791:60;;;:::o;16857:142::-;16907:9;16940:53;16958:34;16967:24;16985:5;16967:24;:::i;:::-;16958:34;:::i;:::-;16940:53;:::i;:::-;16927:66;;16857:142;;;:::o;17005:75::-;17048:3;17069:5;17062:12;;17005:75;;;:::o;17086:269::-;17196:39;17227:7;17196:39;:::i;:::-;17257:91;17306:41;17330:16;17306:41;:::i;:::-;17298:6;17291:4;17285:11;17257:91;:::i;:::-;17251:4;17244:105;17162:193;17086:269;;;:::o;17361:73::-;17406:3;17361:73;:::o;17440:189::-;17517:32;;:::i;:::-;17558:65;17616:6;17608;17602:4;17558:65;:::i;:::-;17493:136;17440:189;;:::o;17635:186::-;17695:120;17712:3;17705:5;17702:14;17695:120;;;17766:39;17803:1;17796:5;17766:39;:::i;:::-;17739:1;17732:5;17728:13;17719:22;;17695:120;;;17635:186;;:::o;17827:543::-;17928:2;17923:3;17920:11;17917:446;;;17962:38;17994:5;17962:38;:::i;:::-;18046:29;18064:10;18046:29;:::i;:::-;18036:8;18032:44;18229:2;18217:10;18214:18;18211:49;;;18250:8;18235:23;;18211:49;18273:80;18329:22;18347:3;18329:22;:::i;:::-;18319:8;18315:37;18302:11;18273:80;:::i;:::-;17932:431;;17917:446;17827:543;;;:::o;18376:117::-;18430:8;18480:5;18474:4;18470:16;18449:37;;18376:117;;;;:::o;18499:169::-;18543:6;18576:51;18624:1;18620:6;18612:5;18609:1;18605:13;18576:51;:::i;:::-;18572:56;18657:4;18651;18647:15;18637:25;;18550:118;18499:169;;;;:::o;18673:295::-;18749:4;18895:29;18920:3;18914:4;18895:29;:::i;:::-;18887:37;;18957:3;18954:1;18950:11;18944:4;18941:21;18933:29;;18673:295;;;;:::o;18973:1395::-;19090:37;19123:3;19090:37;:::i;:::-;19192:18;19184:6;19181:30;19178:56;;;19214:18;;:::i;:::-;19178:56;19258:38;19290:4;19284:11;19258:38;:::i;:::-;19343:67;19403:6;19395;19389:4;19343:67;:::i;:::-;19437:1;19461:4;19448:17;;19493:2;19485:6;19482:14;19510:1;19505:618;;;;20167:1;20184:6;20181:77;;;20233:9;20228:3;20224:19;20218:26;20209:35;;20181:77;20284:67;20344:6;20337:5;20284:67;:::i;:::-;20278:4;20271:81;20140:222;19475:887;;19505:618;19557:4;19553:9;19545:6;19541:22;19591:37;19623:4;19591:37;:::i;:::-;19650:1;19664:208;19678:7;19675:1;19672:14;19664:208;;;19757:9;19752:3;19748:19;19742:26;19734:6;19727:42;19808:1;19800:6;19796:14;19786:24;;19855:2;19844:9;19840:18;19827:31;;19701:4;19698:1;19694:12;19689:17;;19664:208;;;19900:6;19891:7;19888:19;19885:179;;;19958:9;19953:3;19949:19;19943:26;20001:48;20043:4;20035:6;20031:17;20020:9;20001:48;:::i;:::-;19993:6;19986:64;19908:156;19885:179;20110:1;20106;20098:6;20094:14;20090:22;20084:4;20077:36;19512:611;;;19475:887;;19065:1303;;;18973:1395;;:::o;20374:98::-;20425:6;20459:5;20453:12;20443:22;;20374:98;;;:::o;20478:168::-;20561:11;20595:6;20590:3;20583:19;20635:4;20630:3;20626:14;20611:29;;20478:168;;;;:::o;20652:373::-;20738:3;20766:38;20798:5;20766:38;:::i;:::-;20820:70;20883:6;20878:3;20820:70;:::i;:::-;20813:77;;20899:65;20957:6;20952:3;20945:4;20938:5;20934:16;20899:65;:::i;:::-;20989:29;21011:6;20989:29;:::i;:::-;20984:3;20980:39;20973:46;;20742:283;20652:373;;;;:::o;21031:640::-;21226:4;21264:3;21253:9;21249:19;21241:27;;21278:71;21346:1;21335:9;21331:17;21322:6;21278:71;:::i;:::-;21359:72;21427:2;21416:9;21412:18;21403:6;21359:72;:::i;:::-;21441;21509:2;21498:9;21494:18;21485:6;21441:72;:::i;:::-;21560:9;21554:4;21550:20;21545:2;21534:9;21530:18;21523:48;21588:76;21659:4;21650:6;21588:76;:::i;:::-;21580:84;;21031:640;;;;;;;:::o;21677:141::-;21733:5;21764:6;21758:13;21749:22;;21780:32;21806:5;21780:32;:::i;:::-;21677:141;;;;:::o;21824:349::-;21893:6;21942:2;21930:9;21921:7;21917:23;21913:32;21910:119;;;21948:79;;:::i;:::-;21910:119;22068:1;22093:63;22148:7;22139:6;22128:9;22124:22;22093:63;:::i;:::-;22083:73;;22039:127;21824:349;;;;:::o;22179:148::-;22281:11;22318:3;22303:18;;22179:148;;;;:::o;22333:390::-;22439:3;22467:39;22500:5;22467:39;:::i;:::-;22522:89;22604:6;22599:3;22522:89;:::i;:::-;22515:96;;22620:65;22678:6;22673:3;22666:4;22659:5;22655:16;22620:65;:::i;:::-;22710:6;22705:3;22701:16;22694:23;;22443:280;22333:390;;;;:::o;22729:435::-;22909:3;22931:95;23022:3;23013:6;22931:95;:::i;:::-;22924:102;;23043:95;23134:3;23125:6;23043:95;:::i;:::-;23036:102;;23155:3;23148:10;;22729:435;;;;;:::o;23170:332::-;23291:4;23329:2;23318:9;23314:18;23306:26;;23342:71;23410:1;23399:9;23395:17;23386:6;23342:71;:::i;:::-;23423:72;23491:2;23480:9;23476:18;23467:6;23423:72;:::i;:::-;23170:332;;;;;:::o;23508:180::-;23556:77;23553:1;23546:88;23653:4;23650:1;23643:15;23677:4;23674:1;23667:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1897800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferMintingAuthority(address)": "26973"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 441,
									"end": 632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 632,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "584E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "584E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 541,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 511,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 511,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 511,
									"end": 541,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 604,
									"end": 625,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 615,
									"end": 624,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 604,
									"end": 614,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 614,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 614,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 604,
									"end": 625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 625,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 604,
									"end": 625,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 604,
									"end": 625,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 604,
									"end": 625,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 441,
									"end": 632,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 711,
									"end": 887,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 711,
									"end": 887,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 793,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 810,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 793,
									"end": 810,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 793,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 793,
									"end": 810,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 779,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 810,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 779,
									"end": 789,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 779,
									"end": 810,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 810,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 779,
									"end": 810,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 771,
									"end": 845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 771,
									"end": 845,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 771,
									"end": 845,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 873,
									"end": 880,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 855,
									"end": 870,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 855,
									"end": 880,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 855,
									"end": 880,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 855,
									"end": 880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 855,
									"end": 880,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 855,
									"end": 880,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 711,
									"end": 887,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 711,
									"end": 887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2806,
									"end": 2808,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2803,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2785,
									"end": 2792,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2781,
									"end": 2804,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 2809,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2812,
									"end": 2891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2953,
									"end": 2954,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2951,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2938,
									"end": 2955,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2932,
									"end": 2956,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2975,
									"end": 2981,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2972,
									"end": 3002,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 3005,
									"end": 3084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3176,
									"end": 3183,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3167,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3156,
									"end": 3165,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3152,
									"end": 3174,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3110,
									"end": 3184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2903,
									"end": 3194,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3259,
									"end": 3265,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3298,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3287,
									"end": 3299,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3360,
									"end": 3437,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3438,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3457,
									"end": 3461,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3454,
									"end": 3455,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3447,
									"end": 3462,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3478,
									"end": 3479,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3486,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3548,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3569,
									"end": 3581,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3647,
									"end": 3665,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 3695,
									"end": 3701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3691,
									"end": 3708,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3765,
									"end": 3767,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3757,
									"end": 3763,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3754,
									"end": 3768,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3734,
									"end": 3752,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3731,
									"end": 3769,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 3784,
									"end": 3802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3549,
									"end": 3818,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3873,
									"end": 3877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3896,
									"end": 3899,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3919,
									"end": 3922,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3916,
									"end": 3917,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3923,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3940,
									"end": 3958,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3824,
									"end": 3965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4008,
									"end": 4014,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4057,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4043,
									"end": 4048,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4039,
									"end": 4053,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4035,
									"end": 4058,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3971,
									"end": 4064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4114,
									"end": 4122,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4169,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4158,
									"end": 4162,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4170,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4070,
									"end": 4177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4290,
									"end": 4300,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4286,
									"end": 4304,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4355,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4344,
									"end": 4353,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4325,
									"end": 4422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4473,
									"end": 4481,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4443,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4511,
									"end": 4520,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4504,
									"end": 4509,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4500,
									"end": 4521,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4564,
									"end": 4568,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4562,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4550,
									"end": 4569,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4543,
									"end": 4548,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4540,
									"end": 4570,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4183,
									"end": 4576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4619,
									"end": 4626,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4648,
									"end": 4653,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4693,
									"end": 4696,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4714,
									"end": 4719,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4781,
									"end": 4790,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 4859,
									"end": 4864,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4841,
									"end": 4865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4832,
									"end": 4866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4814,
									"end": 4867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4731,
									"end": 4873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4948,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5101,
									"end": 5108,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5070,
									"end": 5109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5204,
									"end": 5220,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5180,
									"end": 5221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5172,
									"end": 5178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5165,
									"end": 5169,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5159,
									"end": 5170,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5131,
									"end": 5222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5118,
									"end": 5223,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4960,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5280,
									"end": 5283,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5235,
									"end": 5308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5391,
									"end": 5423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5482,
									"end": 5488,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5432,
									"end": 5497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5367,
									"end": 5503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5586,
									"end": 5589,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5579,
									"end": 5584,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5590,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 5677,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5675,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 5640,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5602,
									"end": 5615,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5802,
									"end": 5804,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5797,
									"end": 5800,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5794,
									"end": 5805,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 5868,
									"end": 5873,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5836,
									"end": 5874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 5938,
									"end": 5948,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5920,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5918,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5906,
									"end": 5950,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6091,
									"end": 6101,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6132,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 6221,
									"end": 6224,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 6203,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6193,
									"end": 6201,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6176,
									"end": 6187,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6147,
									"end": 6227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5701,
									"end": 6244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6304,
									"end": 6312,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6348,
									"end": 6352,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6344,
									"end": 6360,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6417,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6498,
									"end": 6499,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6494,
									"end": 6500,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6486,
									"end": 6491,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6483,
									"end": 6484,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6479,
									"end": 6492,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6450,
									"end": 6501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6446,
									"end": 6502,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6525,
									"end": 6529,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6521,
									"end": 6536,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6424,
									"end": 6542,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6373,
									"end": 6542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6623,
									"end": 6627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 6794,
									"end": 6797,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6788,
									"end": 6792,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6769,
									"end": 6798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6831,
									"end": 6834,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6828,
									"end": 6829,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6824,
									"end": 6835,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6818,
									"end": 6822,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6815,
									"end": 6836,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6997,
									"end": 7000,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 6964,
									"end": 7001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7066,
									"end": 7084,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7058,
									"end": 7064,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7055,
									"end": 7085,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 7088,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 7132,
									"end": 7170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7269,
									"end": 7275,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 7217,
									"end": 7284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7311,
									"end": 7312,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7367,
									"end": 7369,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7359,
									"end": 7365,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7356,
									"end": 7370,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7384,
									"end": 7385,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8058,
									"end": 8064,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8107,
									"end": 8116,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8102,
									"end": 8105,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8098,
									"end": 8117,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8092,
									"end": 8118,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 8218,
									"end": 8224,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8211,
									"end": 8216,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 8158,
									"end": 8225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8145,
									"end": 8226,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8014,
									"end": 8236,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7431,
									"end": 7435,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7427,
									"end": 7436,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7419,
									"end": 7425,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7415,
									"end": 7437,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7497,
									"end": 7501,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 7465,
									"end": 7502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7524,
									"end": 7525,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7552,
									"end": 7559,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7560,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7631,
									"end": 7640,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 7629,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7622,
									"end": 7641,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7616,
									"end": 7642,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7601,
									"end": 7643,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7682,
									"end": 7683,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7674,
									"end": 7680,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7670,
									"end": 7684,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7729,
									"end": 7731,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7718,
									"end": 7727,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7714,
									"end": 7732,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7575,
									"end": 7579,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7568,
									"end": 7580,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7774,
									"end": 7780,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7765,
									"end": 7772,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7762,
									"end": 7781,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7841,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7823,
									"end": 7842,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7817,
									"end": 7843,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 7917,
									"end": 7921,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7905,
									"end": 7922,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7903,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 7875,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 7873,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7860,
									"end": 7924,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7782,
									"end": 7938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7984,
									"end": 7985,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7980,
									"end": 7981,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7968,
									"end": 7982,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7964,
									"end": 7986,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7958,
									"end": 7962,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7951,
									"end": 7987,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 8242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8332,
									"end": 8343,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8366,
									"end": 8372,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8361,
									"end": 8364,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8354,
									"end": 8373,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8406,
									"end": 8410,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8401,
									"end": 8404,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8397,
									"end": 8411,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8382,
									"end": 8411,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8382,
									"end": 8411,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8248,
									"end": 8417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8423,
									"end": 8603,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 8423,
									"end": 8603,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8563,
									"end": 8595,
									"name": "PUSH",
									"source": 13,
									"value": "4E6F7420617574686F72697A656420746F207365742062617365205552490000"
								},
								{
									"begin": 8559,
									"end": 8560,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8551,
									"end": 8557,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8547,
									"end": 8561,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8596,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8423,
									"end": 8603,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8423,
									"end": 8603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8609,
									"end": 8975,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 8609,
									"end": 8975,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8751,
									"end": 8754,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8836,
									"end": 8838,
									"name": "PUSH",
									"source": 13,
									"value": "1E"
								},
								{
									"begin": 8831,
									"end": 8834,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 8772,
									"end": 8839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8772,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8765,
									"end": 8839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8765,
									"end": 8839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8848,
									"end": 8941,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 8937,
									"end": 8940,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8848,
									"end": 8941,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 8848,
									"end": 8941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8848,
									"end": 8941,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 8848,
									"end": 8941,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8966,
									"end": 8968,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8961,
									"end": 8964,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8957,
									"end": 8969,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8950,
									"end": 8969,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8950,
									"end": 8969,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8609,
									"end": 8975,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8609,
									"end": 8975,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8609,
									"end": 8975,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8609,
									"end": 8975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8981,
									"end": 9400,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 8981,
									"end": 9400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9185,
									"end": 9187,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9174,
									"end": 9183,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9170,
									"end": 9188,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9162,
									"end": 9188,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9162,
									"end": 9188,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9234,
									"end": 9243,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9228,
									"end": 9232,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9224,
									"end": 9244,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 9220,
									"end": 9221,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9209,
									"end": 9218,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9205,
									"end": 9222,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9198,
									"end": 9245,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9262,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 9388,
									"end": 9392,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9262,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 9262,
									"end": 9393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9262,
									"end": 9393,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 9262,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9254,
									"end": 9393,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9254,
									"end": 9393,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8981,
									"end": 9400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8981,
									"end": 9400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8981,
									"end": 9400,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8981,
									"end": 9400,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1902,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a644b78c6cabba2e00fdee45996d29bf12aa54fa47d921a2dbe016070655ac7764736f6c63430008180033",
									".code": [
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "55F804B3"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "55F804B3"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "40D097C3"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "54797B8F"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 170,
											"end": 1902,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1134,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1134,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1699,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1699,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 711,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 711,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1489,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1489,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1489,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1199,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1181,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1181,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1257,
											"end": 1272,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1257,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1257,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1257,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1315,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 1350,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1375,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1350,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1134,
											"end": 1382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1811,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1811,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1790,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1811,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1811,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1811,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1772,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1772,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1892,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1699,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 711,
											"end": 887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 779,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 810,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 779,
											"end": 789,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 779,
											"end": 810,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 810,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 779,
											"end": 810,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 771,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 771,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 771,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 880,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 870,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 855,
											"end": 880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 855,
											"end": 880,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 855,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 855,
											"end": 880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 855,
											"end": 880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1594,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1594,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1594,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1489,
											"end": 1624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1055,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 949,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1033,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1026,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1026,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5967,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5850,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6084,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6276,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6096,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6144,
											"end": 6221,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6231,
											"end": 6246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6270,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6387,
											"end": 6391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6365,
											"end": 6392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6363,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6502,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6457,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6478,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6503,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6506,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6438,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6546,
											"end": 6556,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6544,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6535,
											"end": 6557,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6630,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6659,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6659,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6874,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6875,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6878,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 6842,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6916,
											"end": 6945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 6916,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6994,
											"end": 6998,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 7005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 7012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 7012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7110,
											"end": 7113,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7092,
											"end": 7122,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7142,
											"end": 7145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7138,
											"end": 7154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 7289,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7289,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 7273,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7273,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7369,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7424,
											"end": 7427,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 7445,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7445,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7414,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7572,
											"end": 7575,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 7535,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7535,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7717,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7705,
											"end": 7711,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7724,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 7728,
											"end": 7807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7728,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7687,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 7852,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7918,
											"end": 7935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 7870,
											"end": 7949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 7870,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7861,
											"end": 7949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7861,
											"end": 7949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7677,
											"end": 7955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8067,
											"end": 8076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8054,
											"end": 8077,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8050,
											"end": 8082,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 8085,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8085,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8047,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8218,
											"end": 8235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8205,
											"end": 8236,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8252,
											"end": 8282,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 8285,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8285,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8249,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 8390,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 8470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 8581,
											"end": 8586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 8563,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 8563,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8558,
											"end": 8561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8744,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8600,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 8898,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 8898,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8891,
											"end": 8896,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8888,
											"end": 8920,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8924,
											"end": 8936,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 8878,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9037,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9009,
											"end": 9038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9047,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9154,
											"end": 9160,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9197,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9186,
											"end": 9209,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9182,
											"end": 9214,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9179,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9532,
											"end": 9539,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9512,
											"end": 9521,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9508,
											"end": 9530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9490,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9490,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9435,
											"end": 9550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9733,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 9736,
											"end": 9754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 9736,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9700,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 9774,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9774,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9766,
											"end": 9803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9848,
											"end": 9863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 9958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 10035,
											"end": 10041,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9994,
											"end": 10042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 9978,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 9978,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10059,
											"end": 10064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10108,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10093,
											"end": 10109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10142,
											"end": 10145,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10128,
											"end": 10131,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10124,
											"end": 10140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10121,
											"end": 10146,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 10149,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10149,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10118,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 10286,
											"end": 10292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 10239,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 10239,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10403,
											"end": 10420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10430,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 10430,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 10389,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 10646,
											"end": 10649,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10638,
											"end": 10644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10631,
											"end": 10635,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 10572,
											"end": 10650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 10572,
											"end": 10650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10563,
											"end": 10650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10787,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10830,
											"end": 10833,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10818,
											"end": 10827,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10816,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10805,
											"end": 10828,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10801,
											"end": 10834,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10837,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 10837,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 10798,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 11027,
											"end": 11034,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11016,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11003,
											"end": 11025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 10982,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 10982,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10928,
											"end": 11045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11084,
											"end": 11086,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11110,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11100,
											"end": 11163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11055,
											"end": 11173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 11283,
											"end": 11290,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11263,
											"end": 11272,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 11238,
											"end": 11291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 11238,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11183,
											"end": 11301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11370,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11353,
											"end": 11371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11372,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11388,
											"end": 11418,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 11421,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 11421,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 11385,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 11526,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 11526,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11516,
											"end": 11588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11715,
											"end": 11722,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11711,
											"end": 11734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11707,
											"end": 11739,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 11742,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11908,
											"end": 11930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11833,
											"end": 11950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 12060,
											"end": 12067,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12051,
											"end": 12057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 12015,
											"end": 12068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11960,
											"end": 12078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 12085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12216,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12226,
											"end": 12241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12265,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12321,
											"end": 12327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12352,
											"end": 12356,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12348,
											"end": 12360,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12395,
											"end": 12407,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12470,
											"end": 12487,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12544,
											"end": 12546,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12531,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12510,
											"end": 12548,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 12563,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12328,
											"end": 12597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12792,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 12793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12803,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 12952,
											"end": 12954,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12950,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12928,
											"end": 12934,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 12884,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 13034,
											"end": 13036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 12966,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 13045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13051,
											"end": 13223,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 13051,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13191,
											"end": 13215,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420617574686F72697A656420746F206D696E7400000000000000000000"
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13179,
											"end": 13185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13175,
											"end": 13189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13051,
											"end": 13223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13051,
											"end": 13223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 13451,
											"end": 13454,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 13392,
											"end": 13459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 13392,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13459,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 13557,
											"end": 13560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 13468,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 13468,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13586,
											"end": 13588,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13581,
											"end": 13584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13570,
											"end": 13589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13570,
											"end": 13589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13229,
											"end": 13595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13767,
											"end": 13771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13805,
											"end": 13807,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13794,
											"end": 13803,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13782,
											"end": 13808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13854,
											"end": 13863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13844,
											"end": 13864,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13840,
											"end": 13841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13829,
											"end": 13838,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13818,
											"end": 13865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 14008,
											"end": 14012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 13882,
											"end": 14013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 13882,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13874,
											"end": 14013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13874,
											"end": 14013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 14020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 14020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14026,
											"end": 14247,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14026,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14166,
											"end": 14200,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420617574686F72697A656420746F206368616E676520617574686F7269"
										},
										{
											"begin": 14162,
											"end": 14163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14160,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14150,
											"end": 14164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14143,
											"end": 14201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14235,
											"end": 14239,
											"name": "PUSH",
											"source": 13,
											"value": "7479000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14230,
											"end": 14232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14222,
											"end": 14228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14211,
											"end": 14240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14026,
											"end": 14247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14026,
											"end": 14247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14619,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14253,
											"end": 14619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14395,
											"end": 14398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14416,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 14480,
											"end": 14482,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 14475,
											"end": 14478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14416,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14416,
											"end": 14483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14416,
											"end": 14483,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 14416,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 14581,
											"end": 14584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14492,
											"end": 14585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14585,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 14492,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14610,
											"end": 14612,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14605,
											"end": 14608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14601,
											"end": 14613,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14594,
											"end": 14613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14594,
											"end": 14613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14253,
											"end": 14619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 15044,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 14625,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14829,
											"end": 14831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14818,
											"end": 14827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14806,
											"end": 14832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14887,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 14876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14868,
											"end": 14888,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14853,
											"end": 14862,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14849,
											"end": 14866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14842,
											"end": 14889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 15032,
											"end": 15036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 15037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14906,
											"end": 15037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 15037,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 14906,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14898,
											"end": 15037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14898,
											"end": 15037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 15044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 15044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 15044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14625,
											"end": 15044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15050,
											"end": 15230,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 15050,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15222,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420617574686F72697A656420746F207365742062617365205552490000"
										},
										{
											"begin": 15186,
											"end": 15187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15178,
											"end": 15184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15174,
											"end": 15188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15167,
											"end": 15223,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15050,
											"end": 15230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15050,
											"end": 15230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15236,
											"end": 15602,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 15236,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15399,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15463,
											"end": 15465,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 15458,
											"end": 15461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15399,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 15399,
											"end": 15466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15399,
											"end": 15466,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15399,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15392,
											"end": 15466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15392,
											"end": 15466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15564,
											"end": 15567,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 15475,
											"end": 15568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15568,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15475,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15593,
											"end": 15595,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15588,
											"end": 15591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15236,
											"end": 15602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15236,
											"end": 15602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15236,
											"end": 15602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15236,
											"end": 15602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 16027,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 15608,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15774,
											"end": 15778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15812,
											"end": 15814,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15801,
											"end": 15810,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15789,
											"end": 15815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15789,
											"end": 15815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15861,
											"end": 15870,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15855,
											"end": 15859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15851,
											"end": 15871,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15847,
											"end": 15848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15832,
											"end": 15849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 16015,
											"end": 16019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 15889,
											"end": 16020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 16020,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 15889,
											"end": 16020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15881,
											"end": 16020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15881,
											"end": 16020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 16027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 16027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 16027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 16027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16174,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 16033,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16097,
											"end": 16108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16097,
											"end": 16108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16128,
											"end": 16131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16125,
											"end": 16126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16118,
											"end": 16132,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16162,
											"end": 16166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16160,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16149,
											"end": 16167,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16141,
											"end": 16167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16141,
											"end": 16167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16033,
											"end": 16174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16273,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 16180,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16264,
											"end": 16266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16259,
											"end": 16261,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16252,
											"end": 16257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16248,
											"end": 16262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16267,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16234,
											"end": 16267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16234,
											"end": 16267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16273,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16273,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16323,
											"end": 16331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16373,
											"end": 16378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16363,
											"end": 16379,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16461,
											"end": 16467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16511,
											"end": 16512,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 16499,
											"end": 16509,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16564,
											"end": 16630,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16553,
											"end": 16562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 16534,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16631,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16534,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16652,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16682,
											"end": 16690,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16671,
											"end": 16680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16652,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 16652,
											"end": 16691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16652,
											"end": 16691,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16652,
											"end": 16691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16691,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16724,
											"end": 16728,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16720,
											"end": 16729,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16713,
											"end": 16718,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16709,
											"end": 16730,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16700,
											"end": 16730,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16700,
											"end": 16730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16773,
											"end": 16777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16763,
											"end": 16771,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16759,
											"end": 16778,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16752,
											"end": 16757,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16749,
											"end": 16779,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16739,
											"end": 16779,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16739,
											"end": 16779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16468,
											"end": 16785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16468,
											"end": 16785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16392,
											"end": 16785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16851,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 16791,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16840,
											"end": 16845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16833,
											"end": 16845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16833,
											"end": 16845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16851,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16851,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16999,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 16857,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16907,
											"end": 16916,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16940,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 16958,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16967,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16985,
											"end": 16990,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16967,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 16967,
											"end": 16991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16967,
											"end": 16991,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16967,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 16992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 16958,
											"end": 16992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 16992,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16958,
											"end": 16992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16940,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 16940,
											"end": 16993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16940,
											"end": 16993,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 16940,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16927,
											"end": 16993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16927,
											"end": 16993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17080,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 17005,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17048,
											"end": 17051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17069,
											"end": 17074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17355,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 17086,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 17227,
											"end": 17234,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 17196,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17257,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 17306,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17330,
											"end": 17346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17306,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 17306,
											"end": 17347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17306,
											"end": 17347,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17306,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17304,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17291,
											"end": 17295,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17285,
											"end": 17296,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17257,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 17257,
											"end": 17348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17257,
											"end": 17348,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 17257,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17251,
											"end": 17255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17244,
											"end": 17349,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17162,
											"end": 17355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17361,
											"end": 17434,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 17361,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17406,
											"end": 17409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17361,
											"end": 17434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17440,
											"end": 17629,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 17440,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17517,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 17517,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 17517,
											"end": 17549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17517,
											"end": 17549,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 17517,
											"end": 17549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17558,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17616,
											"end": 17622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 17614,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17602,
											"end": 17606,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17558,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 17558,
											"end": 17623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17558,
											"end": 17623,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17558,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17493,
											"end": 17629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17440,
											"end": 17629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17440,
											"end": 17629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17440,
											"end": 17629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17635,
											"end": 17821,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 17635,
											"end": 17821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17712,
											"end": 17715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17705,
											"end": 17710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17702,
											"end": 17716,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 17803,
											"end": 17804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17796,
											"end": 17801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 17766,
											"end": 17805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17805,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 17766,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17739,
											"end": 17740,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17732,
											"end": 17737,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17719,
											"end": 17741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17719,
											"end": 17741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 17695,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17635,
											"end": 17821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17635,
											"end": 17821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17635,
											"end": 17821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 18370,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 17827,
											"end": 18370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17928,
											"end": 17930,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17923,
											"end": 17926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17920,
											"end": 17931,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17917,
											"end": 18363,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17917,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 17917,
											"end": 18363,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17962,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17994,
											"end": 17999,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17962,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 17962,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17962,
											"end": 18000,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 17962,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18046,
											"end": 18075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 18064,
											"end": 18074,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18046,
											"end": 18075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 18046,
											"end": 18075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18046,
											"end": 18075,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 18046,
											"end": 18075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18036,
											"end": 18044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18229,
											"end": 18231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18227,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18214,
											"end": 18232,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 18211,
											"end": 18260,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18211,
											"end": 18260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18211,
											"end": 18260,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18250,
											"end": 18258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18235,
											"end": 18258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18235,
											"end": 18258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18211,
											"end": 18260,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18211,
											"end": 18260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 18329,
											"end": 18351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 18347,
											"end": 18350,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18329,
											"end": 18351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 18329,
											"end": 18351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18329,
											"end": 18351,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 18329,
											"end": 18351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18319,
											"end": 18327,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18315,
											"end": 18352,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 18273,
											"end": 18353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18353,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 18273,
											"end": 18353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17932,
											"end": 18363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17932,
											"end": 18363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17917,
											"end": 18363,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 17917,
											"end": 18363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 18370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18430,
											"end": 18438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18480,
											"end": 18485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18474,
											"end": 18478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18470,
											"end": 18486,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18543,
											"end": 18549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18624,
											"end": 18625,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18620,
											"end": 18626,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 18617,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18610,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 18605,
											"end": 18618,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 18576,
											"end": 18627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18572,
											"end": 18628,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 18657,
											"end": 18661,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18651,
											"end": 18655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18647,
											"end": 18662,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18637,
											"end": 18662,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18637,
											"end": 18662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18550,
											"end": 18668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18499,
											"end": 18668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18749,
											"end": 18753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18895,
											"end": 18924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 18920,
											"end": 18923,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 18918,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 18924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 18895,
											"end": 18924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 18924,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 18895,
											"end": 18924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18887,
											"end": 18924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18887,
											"end": 18924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18957,
											"end": 18960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18950,
											"end": 18961,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18944,
											"end": 18948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18941,
											"end": 18962,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 18933,
											"end": 18962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18933,
											"end": 18962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18673,
											"end": 18968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 20368,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 18973,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19123,
											"end": 19126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 19090,
											"end": 19127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19127,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19090,
											"end": 19127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19192,
											"end": 19210,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19184,
											"end": 19190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19181,
											"end": 19211,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19178,
											"end": 19234,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19178,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 19178,
											"end": 19234,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19214,
											"end": 19232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 19214,
											"end": 19232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 19214,
											"end": 19232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19214,
											"end": 19232,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 19214,
											"end": 19232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19178,
											"end": 19234,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 19178,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19258,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 19290,
											"end": 19294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19284,
											"end": 19295,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 19258,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 19258,
											"end": 19296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19258,
											"end": 19296,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 19258,
											"end": 19296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 19403,
											"end": 19409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19389,
											"end": 19393,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 19343,
											"end": 19410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19461,
											"end": 19465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19448,
											"end": 19465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19448,
											"end": 19465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19493,
											"end": 19495,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19485,
											"end": 19491,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19482,
											"end": 19496,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19510,
											"end": 19511,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20167,
											"end": 20168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20184,
											"end": 20190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20233,
											"end": 20242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20228,
											"end": 20231,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 20224,
											"end": 20243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20218,
											"end": 20244,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20209,
											"end": 20244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20209,
											"end": 20244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20344,
											"end": 20350,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20337,
											"end": 20342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 20284,
											"end": 20351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20351,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20284,
											"end": 20351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20278,
											"end": 20282,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20271,
											"end": 20352,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 20140,
											"end": 20362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19475,
											"end": 20362,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19505,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19557,
											"end": 19561,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19553,
											"end": 19562,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19551,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19541,
											"end": 19563,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19591,
											"end": 19628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 19623,
											"end": 19627,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19591,
											"end": 19628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 19591,
											"end": 19628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19591,
											"end": 19628,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 19591,
											"end": 19628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19678,
											"end": 19685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19675,
											"end": 19676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 19686,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19757,
											"end": 19766,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19752,
											"end": 19755,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19748,
											"end": 19767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19768,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19734,
											"end": 19740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19727,
											"end": 19769,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19808,
											"end": 19809,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19800,
											"end": 19806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19796,
											"end": 19810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19786,
											"end": 19810,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19786,
											"end": 19810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19855,
											"end": 19857,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19844,
											"end": 19853,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19840,
											"end": 19858,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19827,
											"end": 19858,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19827,
											"end": 19858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19701,
											"end": 19705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19698,
											"end": 19699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 19664,
											"end": 19872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19900,
											"end": 19906,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19891,
											"end": 19898,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19888,
											"end": 19907,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19885,
											"end": 20064,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19885,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 19885,
											"end": 20064,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19958,
											"end": 19967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19953,
											"end": 19956,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19949,
											"end": 19968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19943,
											"end": 19969,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20001,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20043,
											"end": 20047,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 20035,
											"end": 20041,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20031,
											"end": 20048,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20020,
											"end": 20029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20001,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20001,
											"end": 20049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20001,
											"end": 20049,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20001,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19993,
											"end": 19999,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19986,
											"end": 20050,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 20064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19885,
											"end": 20064,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 19885,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20110,
											"end": 20111,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20106,
											"end": 20107,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 20098,
											"end": 20104,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20094,
											"end": 20108,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 20090,
											"end": 20112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20084,
											"end": 20088,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20077,
											"end": 20113,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 19512,
											"end": 20123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19512,
											"end": 20123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19512,
											"end": 20123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 20362,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19475,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19475,
											"end": 20362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19065,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19065,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19065,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18973,
											"end": 20368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20374,
											"end": 20472,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 20374,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20425,
											"end": 20431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20459,
											"end": 20464,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20453,
											"end": 20465,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20443,
											"end": 20465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20443,
											"end": 20465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20374,
											"end": 20472,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20374,
											"end": 20472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20374,
											"end": 20472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20374,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20595,
											"end": 20601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20590,
											"end": 20593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20583,
											"end": 20602,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20635,
											"end": 20639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20630,
											"end": 20633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20626,
											"end": 20640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20611,
											"end": 20640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20611,
											"end": 20640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20478,
											"end": 20646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20738,
											"end": 20741,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20766,
											"end": 20804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 20798,
											"end": 20803,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20766,
											"end": 20804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 20766,
											"end": 20804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20766,
											"end": 20804,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 20766,
											"end": 20804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 20883,
											"end": 20889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20878,
											"end": 20881,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 20820,
											"end": 20890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20890,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 20820,
											"end": 20890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20813,
											"end": 20890,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20813,
											"end": 20890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20899,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 20957,
											"end": 20963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 20955,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20945,
											"end": 20949,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20938,
											"end": 20943,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20934,
											"end": 20950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20899,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 20899,
											"end": 20964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20899,
											"end": 20964,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 20899,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20989,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 21011,
											"end": 21017,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20989,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 20989,
											"end": 21018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20989,
											"end": 21018,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 20989,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20984,
											"end": 20987,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20980,
											"end": 21019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20973,
											"end": 21019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20973,
											"end": 21019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20742,
											"end": 21025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20652,
											"end": 21025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21226,
											"end": 21230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21264,
											"end": 21267,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 21253,
											"end": 21262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21249,
											"end": 21268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21241,
											"end": 21268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21241,
											"end": 21268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21278,
											"end": 21349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 21346,
											"end": 21347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21335,
											"end": 21344,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21331,
											"end": 21348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21322,
											"end": 21328,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 21278,
											"end": 21349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 21278,
											"end": 21349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21278,
											"end": 21349,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 21278,
											"end": 21349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21359,
											"end": 21431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 21427,
											"end": 21429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21416,
											"end": 21425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21412,
											"end": 21430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21403,
											"end": 21409,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21359,
											"end": 21431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 21359,
											"end": 21431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21359,
											"end": 21431,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 21359,
											"end": 21431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 21509,
											"end": 21511,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21498,
											"end": 21507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21494,
											"end": 21512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 21441,
											"end": 21513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21513,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 21441,
											"end": 21513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21560,
											"end": 21569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21554,
											"end": 21558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21550,
											"end": 21570,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21545,
											"end": 21547,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 21534,
											"end": 21543,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21523,
											"end": 21571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21588,
											"end": 21664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 21659,
											"end": 21663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21650,
											"end": 21656,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21588,
											"end": 21664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 21588,
											"end": 21664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21588,
											"end": 21664,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 21588,
											"end": 21664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21580,
											"end": 21664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21580,
											"end": 21664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21733,
											"end": 21738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21764,
											"end": 21770,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21771,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21749,
											"end": 21771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21749,
											"end": 21771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 21806,
											"end": 21811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 21780,
											"end": 21812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21812,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 21780,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21893,
											"end": 21899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21942,
											"end": 21944,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21930,
											"end": 21939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21921,
											"end": 21928,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21917,
											"end": 21940,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21913,
											"end": 21945,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21910,
											"end": 22029,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21910,
											"end": 22029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 21910,
											"end": 22029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 22027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 21948,
											"end": 22027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 21948,
											"end": 22027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 22027,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 21948,
											"end": 22027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21910,
											"end": 22029,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 21910,
											"end": 22029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22068,
											"end": 22069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22093,
											"end": 22156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 22148,
											"end": 22155,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22139,
											"end": 22145,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22128,
											"end": 22137,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22124,
											"end": 22146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22093,
											"end": 22156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 22093,
											"end": 22156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22093,
											"end": 22156,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 22093,
											"end": 22156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22083,
											"end": 22156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22083,
											"end": 22156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22039,
											"end": 22166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 22173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22281,
											"end": 22292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22318,
											"end": 22321,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22303,
											"end": 22321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22303,
											"end": 22321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22179,
											"end": 22327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22439,
											"end": 22442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 22500,
											"end": 22505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22467,
											"end": 22506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 22467,
											"end": 22506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22467,
											"end": 22506,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 22467,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 22604,
											"end": 22610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22599,
											"end": 22602,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 22522,
											"end": 22611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22611,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 22522,
											"end": 22611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22515,
											"end": 22611,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22515,
											"end": 22611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22620,
											"end": 22685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 22678,
											"end": 22684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22673,
											"end": 22676,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22666,
											"end": 22670,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22659,
											"end": 22664,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22655,
											"end": 22671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22620,
											"end": 22685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 22620,
											"end": 22685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22620,
											"end": 22685,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 22620,
											"end": 22685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22710,
											"end": 22716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 22705,
											"end": 22708,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22701,
											"end": 22717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22694,
											"end": 22717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22694,
											"end": 22717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22443,
											"end": 22723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22333,
											"end": 22723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22909,
											"end": 22912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22931,
											"end": 23026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 23022,
											"end": 23025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23013,
											"end": 23019,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22931,
											"end": 23026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 22931,
											"end": 23026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22931,
											"end": 23026,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 22931,
											"end": 23026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22924,
											"end": 23026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22924,
											"end": 23026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 23134,
											"end": 23137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23125,
											"end": 23131,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 23043,
											"end": 23138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23138,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 23043,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23036,
											"end": 23138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23036,
											"end": 23138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23155,
											"end": 23158,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23148,
											"end": 23158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23148,
											"end": 23158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22729,
											"end": 23164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23291,
											"end": 23295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23329,
											"end": 23331,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23318,
											"end": 23327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23314,
											"end": 23332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23306,
											"end": 23332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23306,
											"end": 23332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 23410,
											"end": 23411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23399,
											"end": 23408,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23395,
											"end": 23412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23392,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 23342,
											"end": 23413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23342,
											"end": 23413,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 23342,
											"end": 23413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23423,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 23491,
											"end": 23493,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23480,
											"end": 23489,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23476,
											"end": 23494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23467,
											"end": 23473,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23423,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 23423,
											"end": 23495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23423,
											"end": 23495,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 23423,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23170,
											"end": 23502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23508,
											"end": 23688,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 23508,
											"end": 23688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23556,
											"end": 23633,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23553,
											"end": 23554,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23546,
											"end": 23634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23653,
											"end": 23657,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 23650,
											"end": 23651,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 23643,
											"end": 23658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23677,
											"end": 23681,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 23674,
											"end": 23675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23667,
											"end": 23682,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferMintingAuthority(address)": "54797b8f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"transferMintingAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"XNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x41ccb9a4bba7c1a5e9ea118f4d9faa0bdefd8f822c0b6d99d8da8311fb28f2ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d08b1e1ed2465779c609804ac8ef7709efe25971fb443f4b09f14a595ceb36d\",\"dweb:/ipfs/QmXstUTWh49V3y9UkaBSPhMCGKVxFvg8ZjmwmRfWp6FRQR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2875,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)1344_storage"
							},
							{
								"astId": 2877,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_currentBaseURI",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 2879,
								"contract": "contracts/MyToken.sol:XNFT",
								"label": "_mintingAuthority",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1344_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1343,
										"contract": "contracts/MyToken.sol:XNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1691
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1703
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1667
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1339,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1668,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1667,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1692,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1703,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1691,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1338,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1691,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1691,
								1703,
								1338
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1667,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1690,
										1702
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1690,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1691,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1703,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1480,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1703
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1704,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1703,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1703,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1703
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1703
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1338,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1338,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1338,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1412
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1341,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1412,
							"linearizedBaseContracts": [
								1412
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1344,
									"members": [
										{
											"constant": false,
											"id": 1343,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1344,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 1412,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1352,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1343,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1354,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1346,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1345,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1344,
														"src": "844:7:6"
													},
													"referencedDeclaration": 1344,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 1412,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 1368,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1362,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1343,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1367,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1344,
														"src": "964:7:6"
													},
													"referencedDeclaration": 1344,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 1412,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"expression": {
														"id": 1378,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1343,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 1396,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1388,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1343,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1395,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1371,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1344,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 1344,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 1412,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1404,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1343,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1399,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1344,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 1344,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 1412,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1413,
							"src": "424:971:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2757
						],
						"SignedMath": [
							2862
						],
						"Strings": [
							1667
						]
					},
					"id": 1668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 2758,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1415,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2757,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 2863,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1417,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2862,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1419,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1667,
							"linearizedBaseContracts": [
								1667
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1422,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1667,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1420,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1421,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1425,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1667,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1423,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1432,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1478,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1441
														],
														"declarations": [
															{
																"constant": false,
																"id": 1441,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1478,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1448,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1444,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1442,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2757,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2757_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2577,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1450
														],
														"declarations": [
															{
																"constant": false,
																"id": 1450,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1478,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1449,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1455,
														"initialValue": {
															"arguments": [
																{
																	"id": 1453,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1451,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1457
														],
														"declarations": [
															{
																"constant": false,
																"id": 1457,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1478,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1456,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1458,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1450,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1441,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1457,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1459,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1474,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1461,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1463,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1422,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1457,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1435,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1464,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1468,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1469,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1473,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1472,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1475,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1476,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1477,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1667,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1498,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2862,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2862_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2861,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1497,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1488,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1504,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1482,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1667,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1524,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1515,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1518,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1509,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1516,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2757,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2757_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2699,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1514,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1526,
																	1609,
																	1629
																],
																"referencedDeclaration": 1609,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1513,
														"id": 1523,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1667,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"id": 1538,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1529,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1545,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1542,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1551,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1553,
														"indexExpression": {
															"hexValue": "30",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1557,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1559,
														"indexExpression": {
															"hexValue": "31",
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1591,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1577,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1541,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1579,
																	"indexExpression": {
																		"id": 1578,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1580,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1584,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1581,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1537,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1587,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1590,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"initializationExpression": {
													"assignments": [
														1564
													],
													"declarations": [
														{
															"constant": false,
															"id": 1564,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1592,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1563,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1570,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1566,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1574,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1576,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1593,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1602,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1601,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1597,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1598,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1596,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1600,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1605,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1603,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1607,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1667,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1622,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1620,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1625,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1617,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1526,
															1609,
															1629
														],
														"referencedDeclaration": 1609,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1616,
												"id": 1627,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1667,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1646,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1644,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1653,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1651,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1650,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1659,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1634,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1657,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1656,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1664,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1667,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1668,
							"src": "251:2847:7",
							"usedErrors": [
								1432
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1691
						],
						"IERC165": [
							1703
						]
					},
					"id": 1692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1669,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1692,
							"sourceUnit": 1704,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1670,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1703,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1673,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1703,
										"src": "687:7:8"
									},
									"id": 1674,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1691,
							"linearizedBaseContracts": [
								1691,
								1703
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1702
									],
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1684,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1703_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1703_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1683,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1703",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1688,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1691,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1692,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1703
						]
					},
					"id": 1704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1694,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1703,
							"linearizedBaseContracts": [
								1703
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1703,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1704,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2757
						]
					},
					"id": 2758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1706,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2757,
							"linearizedBaseContracts": [
								2757
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1709,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1714,
									"members": [
										{
											"id": 1710,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1711,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1712,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1713,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1744,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1727
														],
														"declarations": [
															{
																"constant": false,
																"id": 1727,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1744,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1726,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1731,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1739,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1737,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1725,
															"id": 1738,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1741,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1725,
														"id": 1743,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2757,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1772,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1758,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1759,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1765,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1757,
															"id": 1764,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1767,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1768,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1770,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1757,
														"id": 1771,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2757,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1814,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1793,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1785,
															"id": 1792,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1795
														],
														"declarations": [
															{
																"constant": false,
																"id": 1795,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1814,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1799,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1796,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1797,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1800,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1801,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1785,
															"id": 1808,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1811,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1812,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1785,
														"id": 1813,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2757,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1842,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1828,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1835,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1827,
															"id": 1834,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1837,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1827,
														"id": 1841,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2757,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1870,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1863,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1862,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1855,
														"id": 1869,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2757,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1882,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1883,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1888,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2757,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1900,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1901,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1904,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1903,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1906,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2757,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1918,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1919,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1921,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1922,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1923,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1925,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1929,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2757,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1949,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1948,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1944,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1945,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1940,
															"id": 1947,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1950,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1954,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1958,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1963,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2757,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2089,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															1978
														],
														"declarations": [
															{
																"constant": false,
																"id": 1978,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2089,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1977,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1982,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1979,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1980,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															1984
														],
														"declarations": [
															{
																"constant": false,
																"id": 1984,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2089,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1983,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1985,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:10",
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nativeSrc": "4410:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nativeSrc": "4433:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nativeSrc": "4420:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:10",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:10",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nativeSrc": "4470:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nativeSrc": "4486:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nativeSrc": "4466:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1970,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 1986,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1987,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1995,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 1994,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1990,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1978,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1991,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1972,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1976,
																	"id": 1993,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1996,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1997,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2003,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2002,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1999,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1709,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2001,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2005
														],
														"declarations": [
															{
																"constant": false,
																"id": 2005,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2089,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2004,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2006,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:10",
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nativeSrc": "5513:38:10",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nativeSrc": "5526:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:10",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nativeSrc": "5653:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nativeSrc": "5642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:10",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nativeSrc": "5700:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1984,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1970,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2007,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2009
														],
														"declarations": [
															{
																"constant": false,
																"id": 2009,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2089,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2008,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2016,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2010,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2012,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1972,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:10",
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nativeSrc": "6073:37:10",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nativeSrc": "6088:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:10",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nativeSrc": "6186:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:10",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nativeSrc": "6333:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nativeSrc": "6329:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nativeSrc": "6325:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1978,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2009,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2017,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2019,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2020,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2023,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2025
														],
														"declarations": [
															{
																"constant": false,
																"id": 2025,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2089,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2032,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2027,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1972,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2033,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2035,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2036,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2040,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2041,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2043,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2044,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2048,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2049,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2051,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2052,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2056,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2057,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2059,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2060,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2064,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2065,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2067,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2068,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2073,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2076,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2080,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2081,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2082,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2083,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2086,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2087,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1976,
														"id": 2088,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2757,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2107
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2133,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2113,
												"initialValue": {
													"arguments": [
														{
															"id": 2109,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2110,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2111,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2108,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2091,
															2134
														],
														"referencedDeclaration": 2091,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2115,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1714",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1714",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2114,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1714_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2118,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2119,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2096,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2120,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2117,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2130,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2129,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2125,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2128,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2131,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2107,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2132,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2100,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2099,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2757,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2142,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2148,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2147,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2141,
															"id": 2146,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2150
												],
												"declarations": [
													{
														"constant": false,
														"id": 2150,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2245,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2159,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2153,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2152,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2413,
																			2448
																		],
																		"referencedDeclaration": 2413,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2244,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2160,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2161,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2162,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2163,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2166,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2172,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2173,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2174,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2183,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2184,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2185,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2192,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2194,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2195,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2196,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2203,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2205,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2206,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2207,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2214,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2215,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2216,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2217,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2218,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2225,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2227,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2228,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2137,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2229,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2232,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2238,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2240,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2150,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2237,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2141,
														"id": 2243,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2757,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2279,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2258
														],
														"declarations": [
															{
																"constant": false,
																"id": 2258,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2279,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2262,
														"initialValue": {
															"arguments": [
																{
																	"id": 2260,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2259,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2246,
																	2281
																],
																"referencedDeclaration": 2246,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2265,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2252,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2264,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1714_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2267,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2258,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2268,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2258,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2270,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2256,
														"id": 2278,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2250,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2757,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2412,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2292,
												"initialValue": {
													"hexValue": "30",
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2409,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2307,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2306,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2301,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2305,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2308,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2322,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2321,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2316,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2317,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2320,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2337,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2336,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2328,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2331,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2332,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2335,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2352,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2351,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2343,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2346,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2347,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2350,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2367,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2366,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2361,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2362,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2365,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2368,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2382,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2381,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2373,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2376,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2377,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2380,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2383,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2397,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2396,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2388,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2391,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2392,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2395,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2408,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2407,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2403,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2290,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2406,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2410,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2290,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2411,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2757,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2446,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2425
														],
														"declarations": [
															{
																"constant": false,
																"id": 2425,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2446,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2429,
														"initialValue": {
															"arguments": [
																{
																	"id": 2427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2416,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2426,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2413,
																	2448
																],
																"referencedDeclaration": 2413,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2430,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2432,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2419,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2431,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1714_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2435,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2425,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2437,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2416,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2423,
														"id": 2445,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2417,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2757,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2457
												],
												"declarations": [
													{
														"constant": false,
														"id": 2457,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2459,
												"initialValue": {
													"hexValue": "30",
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2573,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2476,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2475,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2470,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2477,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2493,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2492,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2487,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2488,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2491,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2494,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2510,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2509,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2527,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2526,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2521,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2522,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2528,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2544,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2543,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2545,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2451,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2562,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2451,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2572,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2571,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2574,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2457,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2455,
												"id": 2575,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2757,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2610,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2589
														],
														"declarations": [
															{
																"constant": false,
																"id": 2589,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2610,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2593,
														"initialValue": {
															"arguments": [
																{
																	"id": 2591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2590,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2577,
																	2612
																],
																"referencedDeclaration": 2577,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2596,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2583,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2595,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1714_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2598,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2599,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2589,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2601,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2580,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2607,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2587,
														"id": 2609,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2757,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2621
												],
												"declarations": [
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2698,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2623,
												"initialValue": {
													"hexValue": "30",
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2695,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2624,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2638,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2637,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2633,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2636,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2653,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2652,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2648,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2651,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2668,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2667,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2663,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2666,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2683,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2682,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2678,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2681,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2615,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2696,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2621,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2619,
												"id": 2697,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2757,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2735,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2711
														],
														"declarations": [
															{
																"constant": false,
																"id": 2711,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2715,
														"initialValue": {
															"arguments": [
																{
																	"id": 2713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2702,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2712,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2699,
																	2737
																],
																"referencedDeclaration": 2699,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2716,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2711,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2718,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2705,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1714",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2717,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1714_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2723,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2721,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2711,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2722,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2724,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2726,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2702,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2709,
														"id": 2734,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2703,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2757,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2748,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2741,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1714",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1714",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2746,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2745,
												"id": 2754,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2738,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1714",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2739,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1714,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1714",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2757,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2758,
							"src": "203:14914:10",
							"usedErrors": [
								1709
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2862
						]
					},
					"id": 2863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2759,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2760,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2862,
							"linearizedBaseContracts": [
								2862
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2777,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2770,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2771,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2776,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2762,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2767,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2862,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2788,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2781,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2789,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2783,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2792,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2791,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2781,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2787,
												"id": 2794,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2779,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2780,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2785,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2862,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2807
												],
												"declarations": [
													{
														"constant": false,
														"id": 2807,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2839,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2806,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2820,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2808,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2799,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2809,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2811,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2812,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2799,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2813,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2801,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2818,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2821,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2807,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2826,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2824,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2822,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2831,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2799,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2832,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2801,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2834,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2836,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2805,
												"id": 2838,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2798,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2800,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2803,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2862,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2859,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2850,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2843,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2854,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2843,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2853,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2843,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2847,
														"id": 2858,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2842,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2862,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2863,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"Counters": [
							1412
						],
						"ERC165": [
							1691
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1703
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1667
						],
						"XNFT": [
							2989
						]
					},
					"id": 2990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2990,
							"sourceUnit": 1146,
							"src": "58:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2990,
							"sourceUnit": 1413,
							"src": "116:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2867,
										"name": "ERC721",
										"nameLocations": [
											"187:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "187:6:12"
									},
									"id": 2868,
									"nodeType": "InheritanceSpecifier",
									"src": "187:6:12"
								}
							],
							"canonicalName": "XNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2989,
							"linearizedBaseContracts": [
								2989,
								1145,
								89,
								1308,
								1262,
								1691,
								1703,
								1338
							],
							"name": "XNFT",
							"nameLocation": "179:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2872,
									"libraryName": {
										"id": 2869,
										"name": "Counters",
										"nameLocations": [
											"206:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "206:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "200:36:12",
									"typeName": {
										"id": 2871,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2870,
											"name": "Counters.Counter",
											"nameLocations": [
												"219:8:12",
												"228:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1344,
											"src": "219:16:12"
										},
										"referencedDeclaration": 1344,
										"src": "219:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2875,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "266:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2989,
									"src": "241:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1344_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2874,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2873,
											"name": "Counters.Counter",
											"nameLocations": [
												"241:8:12",
												"250:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1344,
											"src": "241:16:12"
										},
										"referencedDeclaration": 1344,
										"src": "241:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1344_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2877,
									"mutability": "mutable",
									"name": "_currentBaseURI",
									"nameLocation": "341:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2989,
									"src": "326:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2876,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "326:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2879,
									"mutability": "mutable",
									"name": "_mintingAuthority",
									"nameLocation": "417:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2989,
									"src": "401:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2878,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "501:131:12",
										"statements": [
											{
												"expression": {
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2888,
														"name": "_mintingAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2879,
														"src": "511:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2889,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "531:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "535:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "531:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "511:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2892,
												"nodeType": "ExpressionStatement",
												"src": "511:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2894,
															"name": "s_baseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "615:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2893,
														"name": "setBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "604:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2896,
												"nodeType": "ExpressionStatement",
												"src": "604:21:12"
											}
										]
									},
									"id": 2898,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "584e4654",
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "485:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ed6ce5822f3de9f31aec570d453034d76716104d021588a4d606dced9f6ec461",
														"typeString": "literal_string \"XNFT\""
													},
													"value": "XNFT"
												},
												{
													"hexValue": "584e4654",
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "493:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ed6ce5822f3de9f31aec570d453034d76716104d021588a4d606dced9f6ec461",
														"typeString": "literal_string \"XNFT\""
													},
													"value": "XNFT"
												}
											],
											"id": 2886,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2883,
												"name": "ERC721",
												"nameLocations": [
													"478:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "478:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "478:22:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "s_baseURI",
												"nameLocation": "467:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "453:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "453:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:25:12"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:0:12"
									},
									"scope": 2989,
									"src": "441:191:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2915,
										"nodeType": "Block",
										"src": "761:126:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2904,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "779:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "783:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "779:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2906,
																"name": "_mintingAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "779:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f20736574206261736520555249",
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "812:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
																"typeString": "literal_string \"Not authorized to set base URI\""
															},
															"value": "Not authorized to set base URI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1dafcdeb8bd2d1d8ceb698e9ac496db8668f9a8e3676a02006af49d71bbf7f4",
																"typeString": "literal_string \"Not authorized to set base URI\""
															}
														],
														"id": 2903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "771:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "771:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2910,
												"nodeType": "ExpressionStatement",
												"src": "771:74:12"
											},
											{
												"expression": {
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2911,
														"name": "_currentBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "855:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2912,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2900,
														"src": "873:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "855:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2914,
												"nodeType": "ExpressionStatement",
												"src": "855:25:12"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseURI",
									"nameLocation": "720:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "745:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "731:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "731:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:23:12"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:12"
									},
									"scope": 2989,
									"src": "711:176:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										341
									],
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "1016:39:12",
										"statements": [
											{
												"expression": {
													"id": 2922,
													"name": "_currentBaseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2877,
													"src": "1033:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2921,
												"id": 2923,
												"nodeType": "Return",
												"src": "1026:22:12"
											}
										]
									},
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "958:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2918,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "983:8:12"
									},
									"parameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:12"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "1001:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:15:12"
									},
									"scope": 2989,
									"src": "949:106:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "1171:211:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2931,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1189:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1193:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1189:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2933,
																"name": "_mintingAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "1203:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1189:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															},
															"value": "Not authorized to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															}
														],
														"id": 2930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1181:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:66:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2937,
												"nodeType": "ExpressionStatement",
												"src": "1181:66:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2938,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "1257:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1344_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1273:9:12",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1370,
														"src": "1257:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1344_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1344_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2942,
												"nodeType": "ExpressionStatement",
												"src": "1257:27:12"
											},
											{
												"assignments": [
													2944
												],
												"declarations": [
													{
														"constant": false,
														"id": 2944,
														"mutability": "mutable",
														"name": "newTokenId",
														"nameLocation": "1302:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2954,
														"src": "1294:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1294:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2948,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2945,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "1315:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1344_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2946,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1331:7:12",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1356,
														"src": "1315:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1344_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1344_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "1360:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2951,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "1364:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2949,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 767,
														"src": "1350:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "1350:25:12"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "1143:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1160:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1152:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:12:12"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:0:12"
									},
									"scope": 2989,
									"src": "1134:248:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										332
									],
									"body": {
										"id": 2969,
										"nodeType": "Block",
										"src": "1577:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "1609:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2964,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1594:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_XNFT_$2989_$",
																"typeString": "type(contract super XNFT)"
															}
														},
														"id": 2965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1600:8:12",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "1594:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1594:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2963,
												"id": 2968,
												"nodeType": "Return",
												"src": "1587:30:12"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1498:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2960,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2959,
												"name": "ERC721",
												"nameLocations": [
													"1545:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "1545:6:12"
											}
										],
										"src": "1536:16:12"
									},
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1515:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "1507:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:17:12"
									},
									"returnParameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "1562:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2961,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1562:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:15:12"
									},
									"scope": 2989,
									"src": "1489:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "1762:137:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2976,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1780:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1784:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1780:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2978,
																"name": "_mintingAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "1794:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1780:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206368616e676520617574686f72697479",
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e",
																"typeString": "literal_string \"Not authorized to change authority\""
															},
															"value": "Not authorized to change authority"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe257d5a9ca6b163e85815402dd83e852be33499572b9ec35d238e769f392a0e",
																"typeString": "literal_string \"Not authorized to change authority\""
															}
														],
														"id": 2975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1772:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2982,
												"nodeType": "ExpressionStatement",
												"src": "1772:78:12"
											},
											{
												"expression": {
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2983,
														"name": "_mintingAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2879,
														"src": "1860:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2984,
														"name": "newAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2972,
														"src": "1880:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1860:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2986,
												"nodeType": "ExpressionStatement",
												"src": "1860:32:12"
											}
										]
									},
									"functionSelector": "54797b8f",
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferMintingAuthority",
									"nameLocation": "1708:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "newAuthority",
												"nameLocation": "1741:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "1733:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:22:12"
									},
									"returnParameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:12"
									},
									"scope": 2989,
									"src": "1699:200:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2990,
							"src": "170:1732:12",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "32:3312:12"
				},
				"id": 12
			}
		}
	}
}